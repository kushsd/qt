
int32_t malloc = 0x1f40a;

void** fun_6e955950(void** a1) {
    goto malloc;
}

void** fun_6e954cd0(void** a1, void* a2, void* a3) {
    return a1;
}

int32_t _amsg_exit = 0x1f3a8;

void fun_6e955958(int32_t a1) {
    goto _amsg_exit;
}

void** fun_6e954cc0(void** a1) {
    return a1;
}

int32_t free = 0x1f3f8;

void fun_6e955960(void** a1, void** a2, void** a3) {
    goto free;
}

void** g6e95d070;

uint32_t fun_6e955760();

uint32_t fun_6e941590(void** ecx);

void** g6e95d074;

struct s0 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    int32_t f8;
};

struct s2 {
    signed char[8] pad8;
    void** f8;
    signed char[3] pad12;
    uint32_t f12;
    signed char[20] pad36;
    int32_t f36;
};

struct s1 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    struct s2* f8;
};

struct s1* g6e95d078;

void** g6e959864 = reinterpret_cast<void**>(0);

void** g6e959868 = reinterpret_cast<void**>(0);

struct s2* g6e95986c = reinterpret_cast<struct s2*>(0);

struct s3 {
    void* f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

void fun_6e954d40(void** ecx);

void** fun_6e954ce0(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11);

struct s4 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
    unsigned char f8;
};

void** VirtualQuery = reinterpret_cast<void**>(0x8a);

struct s5 {
    uint32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void* f12;
};

struct s6 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

int32_t VirtualProtect = 0x1f378;

uint32_t g6e956018 = 0xbb40e64e;

struct s7 {
    int32_t f0;
    void* f4;
};

int32_t GetSystemTimeAsFileTime = 0x1f28c;

struct s8 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

int32_t GetCurrentProcessId = 0x1f22a;

struct s9 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

int32_t GetCurrentThreadId = 0x1f240;

struct s10 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

int32_t GetTickCount = 0x1f2a6;

struct s11 {
    int32_t f0;
    void* f4;
    void* f8;
};

int32_t QueryPerformanceCounter = 0x1f2fa;

int32_t g6e95601c = 0x44bf19b1;

void** fun_6e954f80(void** ecx) {
    void** eax2;
    void* esp3;
    void* ebp4;
    uint32_t eax5;
    struct s0* esp6;
    void** eax7;
    void** ebx8;
    struct s2* edi9;
    void** esi10;
    void** v11;
    uint32_t v12;
    struct s3* esp13;
    struct s3* esp14;
    struct s4* ebx15;
    void** edx16;
    int32_t edi17;
    unsigned char* eax18;
    int32_t v19;
    void** ecx20;
    uint32_t ecx21;
    uint32_t edi22;
    struct s3* esp23;
    struct s3* esp24;
    uint32_t ecx25;
    uint32_t edi26;
    struct s3* esp27;
    struct s1* eax28;
    struct s3* esp29;
    int32_t eax30;
    struct s5* esp31;
    struct s1* eax32;
    void** v33;
    struct s6* esp34;
    int1_t less35;
    struct s1* ecx36;
    void** eax37;
    struct s6* esp38;
    struct s3* esp39;
    struct s2** esp40;
    void*** esp41;
    void*** esp42;
    uint32_t** esp43;
    uint32_t eax44;
    struct s7* esp45;
    uint32_t esi46;
    struct s8* esp47;
    uint32_t eax48;
    struct s9* esp49;
    uint32_t eax50;
    struct s10* esp51;
    uint32_t eax52;
    uint32_t** esp53;
    struct s11* esp54;
    uint32_t esi55;
    int32_t eax56;
    struct s3* esp57;

    eax2 = g6e95d070;
    if (eax2) {
        return eax2;
    }
    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp4 = esp3;
    g6e95d070 = reinterpret_cast<void**>(1);
    fun_6e955760();
    eax5 = fun_6e941590(ecx);
    g6e95d074 = reinterpret_cast<void**>(0);
    esp6 = reinterpret_cast<struct s0*>(reinterpret_cast<int32_t>(esp3) - 4 - 4 - 4 - 76 - 4 + 4 - 4 + 4 - eax5);
    g6e95d078 = reinterpret_cast<struct s1*>(reinterpret_cast<uint32_t>(esp6) + 31 & 0xfffffff0);
    eax7 = reinterpret_cast<void**>(0);
    if (1) 
        goto addr_6e955081_4;
    if (1) {
        ebx8 = reinterpret_cast<void**>(0x6e959864);
    } else {
        eax7 = g6e959864;
        if (eax7 || (eax7 = g6e959868, !!eax7)) {
            ebx8 = reinterpret_cast<void**>(0x6e959864);
            goto addr_6e95508e_9;
        } else {
            edi9 = g6e95986c;
            ebx8 = reinterpret_cast<void**>(0x6e959870);
            if (edi9) {
                ebx8 = reinterpret_cast<void**>(0x6e959864);
                goto addr_6e955020_12;
            }
        }
    }
    esi10 = *reinterpret_cast<void***>(ebx8);
    if (esi10) {
        addr_6e95508e_9:
        if (reinterpret_cast<unsigned char>(ebx8) >= reinterpret_cast<unsigned char>(0x6e959864)) {
            addr_6e955081_4:
            return eax7;
        } else {
            v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 0xffffffcc);
            do {
                ebx8 = ebx8 + 8;
                v12 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(*reinterpret_cast<void***>(ebx8 + 4) + 0x6e940000) + *reinterpret_cast<int32_t*>(ebx8 + 0xfffffff8));
                esp13 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp13->f0 = reinterpret_cast<void*>(0x6e9550c5);
                fun_6e954d40(4);
                esp6 = reinterpret_cast<struct s0*>(&esp13->f4);
            } while (reinterpret_cast<unsigned char>(ebx8) < reinterpret_cast<unsigned char>(0x6e959864));
        }
    } else {
        ecx = *reinterpret_cast<void***>(ebx8 + 4);
        if (!ecx) {
            addr_6e955020_12:
            eax7 = *reinterpret_cast<void***>(ebx8 + 8);
            if (!reinterpret_cast<int1_t>(eax7 == 1)) {
                addr_6e955243_17:
                esp6->f4 = eax7;
                esp6->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation protocol version %d.\n");
                esp14 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp14->f0 = reinterpret_cast<void*>(0x6e955253);
                fun_6e954ce0(ecx, esp14->f4, esp14->f8, esp14->f12, esp14->f16, esp14->f20, esp14->f24, esp14->f28, esp14->f32, esp14->f36, esp14->f40);
                goto addr_6e955260_18;
            } else {
                ebx15 = reinterpret_cast<struct s4*>(ebx8 + 12);
                if (reinterpret_cast<uint32_t>(ebx15) >= 0x6e959864) 
                    goto addr_6e955081_4;
                do {
                    edx16 = ebx15->f0;
                    edi17 = ebx15->f4;
                    eax18 = reinterpret_cast<unsigned char*>(edi17 + 0x6e940000);
                    v19 = *reinterpret_cast<int32_t*>(edx16 + 0x6e940000);
                    ecx20 = reinterpret_cast<void**>(static_cast<uint32_t>(ebx15->f8));
                    if (ecx20 == 16) {
                        ecx21 = *reinterpret_cast<unsigned char*>(edi17 + 0x6e940000);
                        edi22 = *reinterpret_cast<uint16_t*>(&ecx21);
                        if (*reinterpret_cast<int16_t*>(&ecx21) < reinterpret_cast<int16_t>(0)) {
                            edi22 = edi22 | 0xffff0000;
                        }
                        v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 0xffffffcc);
                        v12 = v19 + (edi22 - reinterpret_cast<unsigned char>(edx16) - 0x6e940000);
                        esp23 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                        esp23->f0 = reinterpret_cast<void*>(0x6e9551ad);
                        fun_6e954d40(2);
                        esp6 = reinterpret_cast<struct s0*>(&esp23->f4);
                        continue;
                    } else {
                        if (ecx20 == 32) {
                            v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 0xffffffcc);
                            v12 = v19 - reinterpret_cast<uint32_t>(edx16 + 0x6e940000) + *eax18;
                            esp24 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                            esp24->f0 = reinterpret_cast<void*>(0x6e95521c);
                            fun_6e954d40(4);
                            esp6 = reinterpret_cast<struct s0*>(&esp24->f4);
                            continue;
                        } else {
                            if (ecx20 != 8) 
                                goto addr_6e95506a_27;
                            ecx25 = *eax18;
                            edi26 = *reinterpret_cast<unsigned char*>(&ecx25);
                            if (*reinterpret_cast<signed char*>(&ecx25) >= reinterpret_cast<signed char>(0)) 
                                goto addr_6e9551d4_29;
                        }
                    }
                    edi26 = edi26 | 0xffffff00;
                    addr_6e9551d4_29:
                    v11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp4) + 0xffffffcc);
                    v12 = v19 + (edi26 - 0x6e940000 - reinterpret_cast<unsigned char>(edx16));
                    esp27 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                    esp27->f0 = reinterpret_cast<void*>(0x6e9551f7);
                    fun_6e954d40(1);
                    esp6 = reinterpret_cast<struct s0*>(&esp27->f4);
                    ebx15 = reinterpret_cast<struct s4*>(reinterpret_cast<uint32_t>(ebx15) + 12);
                } while (reinterpret_cast<uint32_t>(ebx15) < 0x6e959864);
                goto addr_6e9551bc_32;
            }
        } else {
            goto addr_6e95508e_9;
        }
    }
    addr_6e9550cd_34:
    eax7 = g6e95d074;
    ebx8 = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax7) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax7 == 0))) {
        do {
            eax28 = g6e95d078;
            esi10 = ebx8 + reinterpret_cast<unsigned char>(ebx8) * 2;
            edi9 = reinterpret_cast<struct s2*>(reinterpret_cast<unsigned char>(esi10) * 4);
            eax7 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(eax28) + reinterpret_cast<uint32_t>(edi9));
            if (*reinterpret_cast<void***>(eax7)) {
                esp6->f8 = 28;
                esp6->f4 = v11;
                esp6->f0 = *reinterpret_cast<void***>(eax7 + 4);
                esp29 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp29->f0 = reinterpret_cast<void*>(0x6e95511d);
                eax30 = reinterpret_cast<int32_t>(VirtualQuery());
                esp31 = reinterpret_cast<struct s5*>(&esp29->f4 - 12);
                if (!eax30) 
                    break;
                esp31->f12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp4) - 56);
                eax32 = g6e95d078;
                esp31->f8 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax32) + reinterpret_cast<unsigned char>(esi10) * 4);
                esp31->f4 = v33;
                esp31->f0 = v12;
                esp34 = reinterpret_cast<struct s6*>(reinterpret_cast<uint32_t>(esp31) - 4);
                esp34->f0 = 0x6e95514e;
                eax7 = reinterpret_cast<void**>(VirtualProtect());
                esp6 = reinterpret_cast<struct s0*>(&esp34->f4 - 16);
            }
            ++ebx8;
            less35 = reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(g6e95d074);
        } while (less35);
        goto addr_6e955081_4;
    } else {
        goto addr_6e955081_4;
    }
    ecx36 = g6e95d078;
    ecx = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx36) + reinterpret_cast<uint32_t>(edi9));
    esp31->f8 = *reinterpret_cast<void***>(ecx + 4);
    eax37 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx + 8) + 8);
    esp31->f0 = reinterpret_cast<uint32_t>("  VirtualQuery failed for %d bytes at address %p");
    esp31->f4 = eax37;
    esp38 = reinterpret_cast<struct s6*>(reinterpret_cast<uint32_t>(esp31) - 4);
    esp38->f0 = 0x6e955243;
    eax7 = fun_6e954ce0(ecx, esp38->f4, esp38->f8, esp38->f12, esp38->f16, esp38->f20, esp38->f24, esp38->f28, esp38->f32, esp38->f36, esp38->f40);
    esp6 = reinterpret_cast<struct s0*>(&esp38->f4);
    goto addr_6e955243_17;
    addr_6e955260_18:
    esp39 = reinterpret_cast<struct s3*>(&esp14->f4 - 4);
    esp39->f0 = ebp4;
    esp40 = reinterpret_cast<struct s2**>(reinterpret_cast<uint32_t>(esp39) - 4);
    *esp40 = edi9;
    esp41 = reinterpret_cast<void***>(esp40 - 1);
    *esp41 = esi10;
    esp42 = esp41 - 4;
    *esp42 = ebx8;
    esp43 = reinterpret_cast<uint32_t**>(esp42 - 44);
    eax44 = g6e956018;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 40) = 0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 36) = 0;
    if (eax44 == 0xbb40e64e) {
        *esp43 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 40);
        esp45 = reinterpret_cast<struct s7*>(esp43 - 1);
        esp45->f0 = 0x6e95529e;
        GetSystemTimeAsFileTime(esp45->f4);
        esi46 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 40) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 36);
        esp47 = reinterpret_cast<struct s8*>(&esp45->f4 - 1 - 1);
        esp47->f0 = 0x6e9552af;
        eax48 = reinterpret_cast<uint32_t>(GetCurrentProcessId(esp47->f4, esp47->f8));
        esp49 = reinterpret_cast<struct s9*>(&esp47->f4 - 1);
        esp49->f0 = 0x6e9552b7;
        eax50 = reinterpret_cast<uint32_t>(GetCurrentThreadId(esp49->f4, esp49->f8));
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 44) = eax50;
        esp51 = reinterpret_cast<struct s10*>(&esp49->f4 - 1);
        esp51->f0 = 0x6e9552c0;
        eax52 = reinterpret_cast<uint32_t>(GetTickCount(esp51->f4, esp51->f8));
        esp53 = &esp51->f4;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 48) = eax52;
        *esp53 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 32);
        esp54 = reinterpret_cast<struct s11*>(esp53 - 1);
        esp54->f0 = 0x6e9552cf;
        QueryPerformanceCounter(esp54->f4, esp54->f8);
        esi55 = esi46 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 32) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 28) ^ eax48 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 44) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp39) - 48);
        if (esi55 == 0xbb40e64e) {
            eax56 = 0x44bf19b0;
            esi55 = 0xbb40e64f;
        } else {
            eax56 = reinterpret_cast<int32_t>(~esi55);
        }
        g6e956018 = esi55;
        g6e95601c = eax56;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp39) - 12 + 4 + 4 + 4 + 4);
    } else {
        g6e95601c = reinterpret_cast<int32_t>(~eax44);
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp39) - 12 + 4 + 4 + 4 + 4);
    }
    addr_6e9551bc_32:
    goto addr_6e9550cd_34;
    addr_6e95506a_27:
    esp6->f4 = ecx20;
    esp6->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation bit size %d.\n");
    esp57 = reinterpret_cast<struct s3*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp57->f0 = reinterpret_cast<void*>(0x6e955081);
    eax7 = fun_6e954ce0(ecx20, esp57->f4, esp57->f8, esp57->f12, esp57->f16, esp57->f20, esp57->f24, esp57->f28, esp57->f32, esp57->f36, esp57->f40);
    goto addr_6e955081_4;
}

int32_t fun_6e955930(void** a1, int32_t a2, void** a3) {
    return 1;
}

struct s12 {
    signed char[4] pad4;
    int32_t f4;
};

struct s12* g18;

int32_t Sleep = 0x1f332;

int32_t g6e95d40c;

int32_t g6e95d000;

int32_t g6e95d410;

void fun_6e955968(int32_t a1, int32_t a2);

/* (image base) */
int32_t image_base_ = 0x6e954c30;

void** g6e95d408;

void** g6e95d404;

int32_t fun_6e941040(void** a1, int32_t a2, void** a3) {
    int32_t eax4;
    struct s12* eax5;
    int32_t ebx6;
    int32_t edi7;
    int1_t zf8;
    int32_t tmp32_9;
    int32_t eax10;
    int32_t esi11;
    int1_t zf12;
    int32_t eax13;
    int32_t ebx14;
    int32_t eax15;
    int32_t eax16;
    int32_t eax17;
    int32_t eax18;
    int32_t tmp32_19;
    void** eax20;
    void** eax21;
    void** esi22;
    void** eax23;
    void** v24;
    void** eax25;
    void** ebx26;
    void** edx27;
    void** v28;
    void** v29;

    if (a2) {
        eax4 = 1;
        if (a2 != 1) {
            addr_6e9410ae_3:
            return eax4;
        } else {
            eax5 = g18;
            ebx6 = eax5->f4;
            edi7 = Sleep;
            while (1) {
                zf8 = g6e95d40c == ebx6;
                if (zf8) {
                    tmp32_9 = g6e95d40c;
                    g6e95d40c = ebx6;
                    ebx6 = tmp32_9;
                }
                if (!0) 
                    break;
                if (!ebx6) 
                    goto addr_6e9411e5_9;
                edi7(0x3e8);
            }
        }
    } else {
        eax10 = g6e95d000;
        if (reinterpret_cast<uint1_t>(eax10 < 0) | reinterpret_cast<uint1_t>(eax10 == 0)) {
            eax4 = 0;
            goto addr_6e9410ae_3;
        }
        esi11 = Sleep;
        g6e95d000 = eax10 - 1;
        while (1) {
            zf12 = g6e95d40c == 1;
            if (zf12) {
                g6e95d40c = 1;
            }
            if (!0) 
                break;
            esi11(0x3e8);
        }
        eax13 = g6e95d410;
        if (eax13 == 2) 
            goto addr_6e941170_19; else 
            goto addr_6e94109d_20;
    }
    ebx14 = 0;
    addr_6e9410f9_22:
    eax15 = g6e95d410;
    if (eax15 == 1) {
        fun_6e955958(31);
    } else {
        eax16 = g6e95d410;
        if (!eax16) {
            g6e95d410 = 1;
            fun_6e955968(0x6e960008, 0x6e960010);
        }
    }
    eax17 = g6e95d410;
    if (eax17 == 1) {
        fun_6e955968(0x6e960000, 0x6e960004);
        g6e95d410 = 2;
    }
    if (!ebx14) {
        g6e95d40c = ebx14;
    }
    eax18 = image_base_;
    if (eax18) {
        eax18(a1, 2, a3);
    }
    tmp32_19 = g6e95d000 + 1;
    g6e95d000 = tmp32_19;
    return 1;
    addr_6e9411e5_9:
    ebx14 = 1;
    goto addr_6e9410f9_22;
    addr_6e941170_19:
    eax20 = g6e95d408;
    eax21 = fun_6e954cc0(eax20);
    esi22 = eax21;
    if (eax21) {
        eax23 = g6e95d404;
        v24 = eax23;
        eax25 = fun_6e954cc0(v24);
        ebx26 = eax25;
        while (ebx26 = ebx26 - 4, reinterpret_cast<unsigned char>(esi22) <= reinterpret_cast<unsigned char>(ebx26)) {
            do {
                edx27 = *reinterpret_cast<void***>(ebx26);
                if (!edx27) 
                    break;
                ebx26 = ebx26 - 4;
                edx27(v24);
            } while (reinterpret_cast<unsigned char>(esi22) <= reinterpret_cast<unsigned char>(ebx26));
            break;
        }
        fun_6e955960(esi22, v28, v29);
        g6e95d404 = reinterpret_cast<void**>(0);
        g6e95d408 = reinterpret_cast<void**>(0);
    }
    g6e95d410 = 0;
    g6e95d40c = 0;
    return 1;
    addr_6e94109d_20:
    fun_6e955958(31);
    eax4 = 1;
    goto addr_6e9410ae_3;
}

int32_t g6e95d020;

int32_t g6e955d50 = -1;

int32_t fun_6e954bc0(int32_t a1);

void fun_6e941830();

int32_t fun_6e9418b0(void** a1, int32_t a2, void** a3) {
    int32_t ecx4;
    int32_t eax5;
    int32_t ebx6;
    int32_t eax7;
    int32_t eax8;

    ecx4 = g6e95d020;
    if (ecx4) {
        return eax5;
    }
    g6e95d020 = 1;
    ebx6 = g6e955d50;
    if (ebx6 != -1) 
        goto addr_6e94186f_5;
    ebx6 = 0;
    while (eax7 = ebx6 + 1, !!*reinterpret_cast<int32_t*>(eax7 * 4 + 0x6e955d50)) {
        ebx6 = eax7;
    }
    addr_6e94186f_5:
    if (ebx6) {
        do {
            *reinterpret_cast<int32_t*>(ebx6 * 4 + 0x6e955d50)();
            --ebx6;
        } while (ebx6);
    }
    eax8 = fun_6e954bc0(fun_6e941830);
    return eax8;
}

int32_t fun_6e955940(void** a1, int32_t a2, void** a3) {
    return 1;
}

int32_t g6e956010 = -1;

int32_t fun_6e941260(void** ecx, int32_t a2) {
    void** esi3;
    void** eax4;
    int32_t edx5;
    int32_t edx6;
    int32_t edx7;
    int32_t eax8;
    int32_t edx9;
    int32_t eax10;
    void** v11;
    int32_t eax12;
    int32_t eax13;
    int32_t eax14;
    int32_t eax15;
    int32_t eax16;
    int32_t eax17;

    esi3 = eax4;
    g6e956010 = edx5;
    if (edx6) {
        fun_6e954f80(ecx);
        if (reinterpret_cast<uint32_t>(edx7 - 1) > 1) {
            addr_6e941305_3:
            eax8 = fun_6e955930(esi3, edx7, ecx);
            edx9 = eax8;
            if (eax8 || edx7 != 1) {
                addr_6e9412a0_4:
                if (edx7 == 3) 
                    goto addr_6e941377_5;
            } else {
                fun_6e955930(esi3, 0, ecx);
                fun_6e955940(esi3, 0, ecx);
                fun_6e941040(esi3, 0, ecx);
                edx9 = 0;
                if (edx7 == 3) 
                    goto addr_6e941377_5;
            }
        } else {
            eax10 = fun_6e941040(esi3, edx7, ecx);
            if (eax10) {
                v11 = esi3;
                eax12 = fun_6e955940(v11, edx7, ecx);
                if (eax12) {
                    if (edx7 != 1) {
                        eax13 = fun_6e955930(esi3, 2, ecx);
                        edx9 = eax13;
                        goto addr_6e9412a0_4;
                    } else {
                        esi3 = esi3;
                        fun_6e9418b0(v11, edx7, ecx);
                        goto addr_6e941305_3;
                    }
                } else {
                    if (edx7 == 1) {
                        fun_6e941040(esi3, 0, ecx);
                        edx9 = eax12;
                        goto addr_6e9412b1_14;
                    }
                }
            } else {
                goto addr_6e9412f0_16;
            }
        }
    } else {
        eax14 = g6e95d000;
        if (eax14) {
            fun_6e954f80(ecx);
            eax15 = fun_6e955930(esi3, 0, ecx);
            edx9 = eax15;
            goto addr_6e9412a0_4;
        }
    }
    if (!edx7) {
        addr_6e941377_5:
        eax16 = fun_6e955940(esi3, edx7, ecx);
        eax17 = fun_6e941040(esi3, edx7, ecx);
        edx9 = eax16;
        if (!eax17) {
            edx9 = 0;
        }
    } else {
        addr_6e9412b1_14:
        g6e956010 = -1;
        return edx9;
    }
    goto addr_6e9412b1_14;
    addr_6e9412f0_16:
    edx9 = 0;
    goto addr_6e9412b1_14;
}

uint32_t fun_6e941590(void** ecx) {
    uint32_t v2;
    uint32_t eax3;
    void* ecx4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t* ecx7;

    v2 = eax3;
    ecx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 + 12);
    if (eax5 >= 0x1000) {
        do {
            ecx4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx4) - 0x1000);
            eax6 = eax6 - 0x1000;
        } while (eax6 > 0x1000);
    }
    ecx7 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx4) - eax6);
    *ecx7 = *ecx7;
    return v2;
}

int32_t fun_6e954b00(int32_t a1);

int32_t fun_6e954bc0(int32_t a1) {
    int32_t eax2;

    eax2 = fun_6e954b00(a1);
    return -static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax2 == 0)));
}

int32_t abort = 0x1f3e6;

void** fun_6e955970(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9) {
    goto abort;
}

struct s13 {
    void** f0;
    signed char[11] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
    signed char[3] pad44;
    void** f44;
    signed char[3] pad48;
    void** f48;
    signed char[11] pad60;
    void** f60;
    signed char[3] pad64;
    void*** f64;
    signed char[79] pad147;
    unsigned char f147;
};

struct s14 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s15 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s16 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
};

void** fun_6e950b70(void** a1, void** a2);

struct s17 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s18 {
    void** f0;
    signed char[143] pad144;
    struct s18* f144;
};

struct s19 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s20 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s21 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s22 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s23 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s24 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s25 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void fun_6e950bb0(void** ecx, void** a2);

struct s26 {
    signed char[1855311912] pad1855311912;
    unsigned char f1855311912;
};

struct s27 {
    signed char[1855311912] pad1855311912;
    unsigned char f1855311912;
};

struct s28 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_6e953120(void** a1);

struct s29 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    signed char[20] pad32;
    int32_t f32;
    signed char[4] pad40;
    int32_t f40;
};

int32_t g6e956014 = 2;

struct s30 {
    int32_t f0;
    int32_t f4;
    signed char[4] pad12;
    void** f12;
};

int32_t fun_6e955550(int32_t a1, uint32_t a2, void** a3);

struct s31 {
    struct s31* f0;
    void** f1;
};

void fun_6e9478b0(void** a1);

void** fun_6e951c60(void** ecx, void** a2);

void __multf3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22, void** a23, void** a24, void** a25, void** a26, void** a27, void** a28, void** a29, void** a30, void** a31, void** a32) {
    int32_t v33;
    struct s13* esp34;
    void** ebx35;
    void** edx36;
    void** v37;
    void** eax38;
    void** v39;
    void** v40;
    void** edi41;
    void** esi42;
    uint32_t eax43;
    unsigned char al44;
    unsigned char v45;
    void** v46;
    void* eax47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void* v52;
    uint32_t eax53;
    uint32_t v54;
    void** ebp55;
    void** v56;
    uint32_t v57;
    uint32_t edx58;
    uint32_t ebp59;
    uint32_t eax60;
    int32_t ebp61;
    uint32_t edx62;
    int32_t v63;
    uint32_t v64;
    void** esi65;
    void*** ecx66;
    void*** eax67;
    void** ecx68;
    void** v69;
    void** v70;
    void** eax71;
    void** v72;
    void** esi73;
    void** v74;
    uint32_t ebx75;
    unsigned char bl76;
    void** edx77;
    void** edi78;
    void** v79;
    unsigned char v80;
    void** v81;
    void** ebx82;
    void** eax83;
    void** esi84;
    void** eax85;
    void** ebx86;
    uint32_t eax87;
    void** v88;
    void** eax89;
    void* v90;
    uint32_t eax91;
    uint32_t v92;
    void*** tmp32_93;
    void* tmp32_94;
    void** tmp32_95;
    void*** tmp32_96;
    void** v97;
    void*** tmp32_98;
    void*** tmp32_99;
    void** ebp100;
    void** tmp32_101;
    void** v102;
    void** edi103;
    void* edi104;
    uint32_t ebx105;
    void* edx106;
    uint32_t edx107;
    void** edx108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void* ebx113;
    uint32_t v114;
    void* eax115;
    uint32_t eax116;
    uint32_t eax117;
    void** esi118;
    void** edi119;
    void** ebx120;
    void** eax121;
    void** ecx122;
    void** ecx123;
    uint32_t ecx124;
    void** eax125;
    uint32_t esi126;
    uint32_t edi127;
    int32_t ecx128;
    uint32_t ebx129;
    uint32_t edx130;
    uint32_t edx131;
    void** edi132;
    struct s14* edx133;
    struct s15* ebx134;
    void** edx135;
    uint32_t edx136;
    void** edi137;
    void** edx138;
    void** ebx139;
    int32_t ecx140;
    uint32_t ebx141;
    uint32_t edx142;
    struct s16* esp143;
    uint32_t esi144;
    int32_t ecx145;
    uint32_t edx146;
    uint32_t eax147;
    int32_t ecx148;
    uint32_t ebx149;
    uint32_t edx150;
    uint32_t esi151;
    int32_t ecx152;
    uint32_t ebx153;
    uint32_t edx154;
    uint32_t esi155;
    int32_t ecx156;
    uint32_t ebx157;
    uint32_t edx158;
    int32_t ecx159;
    uint32_t ebx160;
    uint32_t edx161;
    int32_t ecx162;
    uint32_t esi163;
    uint32_t edx164;
    uint32_t eax165;
    void** edi166;
    int32_t ecx167;
    uint32_t esi168;
    uint32_t ebx169;
    uint32_t edx170;
    struct s17* edx171;
    struct s16* esp172;
    uint32_t eax173;
    struct s18* eax174;
    void** esi175;
    struct s18* edi176;
    int32_t ecx177;
    int32_t ecx178;
    void** edi179;
    struct s18* eax180;
    struct s18* esi181;
    struct s18* edi182;
    uint32_t esi183;
    int32_t ecx184;
    uint32_t edx185;
    uint32_t eax186;
    int32_t ecx187;
    uint32_t esi188;
    uint32_t ebx189;
    uint32_t edx190;
    void** edi191;
    int32_t ecx192;
    uint32_t esi193;
    uint32_t ebx194;
    uint32_t edx195;
    void** edi196;
    uint32_t esi197;
    int32_t ecx198;
    uint32_t ebx199;
    uint32_t edx200;
    void** eax201;
    void* esi202;
    int32_t ecx203;
    uint32_t edx204;
    uint32_t eax205;
    uint32_t esi206;
    int32_t ecx207;
    uint32_t edx208;
    uint32_t eax209;
    struct s19* eax210;
    void* esi211;
    int32_t ecx212;
    uint32_t edx213;
    uint32_t eax214;
    uint32_t esi215;
    int32_t ecx216;
    uint32_t edx217;
    uint32_t eax218;
    struct s16* esp219;
    void** edx220;
    struct s20* ecx221;
    uint32_t esi222;
    int32_t ecx223;
    uint32_t edx224;
    uint32_t eax225;
    struct s16* esp226;
    void** edi227;
    uint32_t edx228;
    struct s16* esp229;
    uint32_t esi230;
    int32_t ecx231;
    uint32_t edx232;
    uint32_t eax233;
    uint32_t edi234;
    int32_t ecx235;
    uint32_t ebx236;
    uint32_t edx237;
    void** edi238;
    struct s21* edx239;
    uint32_t esi240;
    int32_t ecx241;
    uint32_t edx242;
    uint32_t eax243;
    struct s16* esp244;
    void** edx245;
    struct s22* ecx246;
    int32_t ecx247;
    uint32_t esi248;
    uint32_t edx249;
    uint32_t eax250;
    struct s23* eax251;
    void* esi252;
    int32_t ecx253;
    uint32_t edx254;
    uint32_t eax255;
    uint32_t esi256;
    int32_t ecx257;
    uint32_t ebx258;
    uint32_t edx259;
    uint32_t esi260;
    int32_t ecx261;
    uint32_t edx262;
    uint32_t eax263;
    uint32_t edi264;
    int32_t ecx265;
    uint32_t ebx266;
    uint32_t edx267;
    struct s24* edx268;
    void** edi269;
    struct s16* esp270;
    void** eax271;
    void** edx272;
    uint32_t eax273;
    uint32_t eax274;
    uint32_t eax275;
    uint32_t eax276;
    uint32_t eax277;
    struct s25* eax278;
    uint32_t eax279;
    void** esi280;
    uint32_t eax281;
    uint32_t edx282;
    struct s16* esp283;
    void** eax284;
    void** eax285;
    struct s16* esp286;
    uint32_t eax287;
    uint32_t eax288;
    uint32_t eax289;
    void** eax290;
    uint32_t eax291;
    uint32_t eax292;
    void** eax293;
    uint32_t eax294;
    struct s16* esp295;
    void** ecx296;
    void** edx297;
    int32_t ecx298;
    void** esi299;
    uint32_t ebx300;
    uint32_t eax301;
    struct s16* esp302;
    struct s16* esp303;
    uint16_t* eax304;
    void** edx305;
    void** eax306;
    uint16_t* edx307;
    int32_t edi308;
    void** edi309;
    void*** edi310;
    uint32_t edx311;
    uint32_t ebx312;
    uint32_t edx313;
    void** edx314;
    uint32_t eax315;
    uint32_t ebx316;
    uint32_t edx317;
    struct s16* esp318;
    void** eax319;
    uint32_t edx320;
    void** edx321;
    struct s26* eax322;
    struct s27* edi323;
    struct s16* esp324;
    uint32_t edx325;
    uint32_t edx326;
    uint32_t eax327;
    struct s16* esp328;
    void** edi329;
    void** edx330;
    struct s28* eax331;
    uint32_t edx332;
    void** edx333;
    void** ebx334;
    void** ebp335;
    uint32_t ebx336;
    uint32_t edx337;
    struct s16* esp338;
    void** ebx339;
    void** ebp340;
    int32_t ecx341;
    uint32_t edx342;
    uint32_t eax343;
    void** edx344;
    struct s16* esp345;
    struct s13* esp346;
    struct s16* esp347;
    void** edx348;
    void** ebx349;
    int32_t ecx350;
    void** ebp351;
    uint32_t eax352;
    uint32_t esi353;
    struct s16* esp354;
    struct s13* esp355;
    uint32_t ecx356;
    void** ebp357;
    uint32_t eax358;
    uint32_t esi359;
    struct s16* esp360;
    struct s29* esp361;
    int1_t zf362;
    int32_t* ebx363;
    int32_t eax364;
    struct s30* esp365;
    int32_t eax366;
    struct s30* esp367;
    struct s31* eax368;
    uint32_t v369;
    uint32_t edx370;
    uint32_t ebx371;
    uint32_t eax372;
    void** ebx373;
    uint32_t edx374;
    void** v375;
    uint32_t v376;
    uint32_t eax377;
    void** eax378;
    void* edx379;
    uint32_t ecx380;
    void** v381;
    uint32_t ecx382;
    uint32_t ecx383;
    uint32_t ecx384;
    void* ecx385;
    uint32_t ebp386;
    uint32_t eax387;
    uint32_t eax388;
    uint32_t edx389;
    int32_t eax390;
    uint32_t ebp391;
    uint32_t esi392;
    int32_t edx393;
    void*** edx394;
    void*** ecx395;
    uint32_t edx396;
    uint32_t v397;
    uint32_t ecx398;
    int32_t edx399;
    int32_t v400;
    int32_t edx401;
    void* edx402;
    void* v403;
    uint32_t edi404;
    uint32_t ecx405;
    void* edx406;
    void* ecx407;
    uint32_t eax408;
    void** eax409;
    void** v410;
    void** edx411;
    void** eax412;
    uint1_t below_or_equal413;
    void** edx414;
    void** eax415;
    void** edx416;
    void** eax417;
    void** eax418;
    void* eax419;
    void* ebx420;
    uint32_t ecx421;
    void** eax422;
    void** eax423;
    void** edx424;
    uint1_t below_or_equal425;
    void* eax426;
    void* esi427;
    uint32_t ecx428;
    uint32_t ecx429;
    void** edx430;
    void** eax431;
    void** edx432;
    void** eax433;
    void** edx434;
    void** ecx435;
    struct s16* esp436;
    void** ebx437;
    uint32_t eax438;
    uint32_t ecx439;
    uint32_t eax440;
    uint32_t eax441;
    void** ebx442;
    void** eax443;
    void* edx444;
    void** eax445;
    uint32_t* esi446;
    uint32_t* eax447;
    uint32_t v448;
    void** edi449;
    uint32_t* ebp450;
    uint32_t ecx451;
    uint32_t ecx452;
    int32_t ebp453;
    void*** eax454;
    void*** ecx455;
    void* edx456;
    int32_t* esi457;
    uint32_t* esi458;
    uint32_t* eax459;
    uint32_t v460;
    void** esi461;
    uint32_t* edi462;
    uint32_t ecx463;
    uint32_t ecx464;
    uint32_t ecx465;
    struct s16* esp466;
    void** eax467;
    void** eax468;
    void** edi469;
    uint32_t ebx470;
    struct s16* esp471;
    void** eax472;
    void** edi473;
    uint32_t ebx474;
    struct s16* esp475;
    uint32_t edx476;

    v33 = reinterpret_cast<int32_t>(__return_address());
    esp34 = reinterpret_cast<struct s13*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0xac);
    ebx35 = a5;
    edx36 = a7;
    v37 = a9;
    eax38 = a8;
    v39 = a10;
    v40 = a11;
    edi41 = a12;
    __asm__("fnstcw word [esp+0x4e]");
    esi42 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax38)));
    eax43 = reinterpret_cast<unsigned char>(eax38) >> 24;
    al44 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax43) >> 7);
    v45 = al44;
    v46 = reinterpret_cast<void**>(static_cast<uint32_t>(al44));
    eax47 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(eax38) >> 16 & 0x7fff);
    v48 = ebx35;
    v49 = a6;
    v50 = edx36;
    v51 = esi42;
    v52 = eax47;
    if (!eax47) {
        eax53 = reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(ebx35) | reinterpret_cast<unsigned char>(edx36) | reinterpret_cast<unsigned char>(esi42);
        if (!eax53) {
            v54 = 4;
            ebp55 = reinterpret_cast<void**>(1);
            v56 = reinterpret_cast<void**>(0);
        } else {
            if (!esi42) {
                if (edx36) {
                    __asm__("bsr edx, edx");
                    v57 = (reinterpret_cast<unsigned char>(edx36) ^ 31) + 32;
                } else {
                    if (!a6) {
                        __asm__("bsr eax, ebx");
                        v57 = (eax53 ^ 31) + 96;
                    } else {
                        __asm__("bsr ecx, ecx");
                        v57 = (reinterpret_cast<unsigned char>(a6) ^ 31) + 64;
                    }
                }
            } else {
                __asm__("bsr eax, esi");
                v57 = eax53 ^ 31;
            }
            edx58 = v57 - 12;
            ebp59 = v57 + 19;
            if (reinterpret_cast<int32_t>(edx58) >= reinterpret_cast<int32_t>(0)) {
                ebp59 = edx58;
            }
            eax60 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx58) >> 31) >> 27;
            ebp61 = reinterpret_cast<int32_t>(ebp59) >> 5;
            edx62 = (edx58 + eax60 & 31) - eax60;
            v63 = ebp61;
            v64 = edx62;
            if (!edx62) 
                goto addr_6e94b943_14; else 
                goto addr_6e94b0f1_15;
        }
    } else {
        if (eax47 == 0x7fff) {
            if (reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(ebx35) | reinterpret_cast<unsigned char>(edx36) | reinterpret_cast<unsigned char>(esi42)) {
                ebp55 = reinterpret_cast<void**>(3);
                v54 = 12;
                v56 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(~static_cast<int32_t>(*reinterpret_cast<int16_t*>(&esi42))) >> 31);
            } else {
                v54 = 8;
                ebp55 = reinterpret_cast<void**>(2);
                v56 = reinterpret_cast<void**>(0);
            }
        } else {
            esi65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi42) | 0x10000);
            ecx66 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + 80);
            eax67 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + 92);
            while (eax67 = eax67 - 4, v51 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx36) >> 29 | reinterpret_cast<unsigned char>(esi65) << 3), eax67 != ecx66) {
                esi65 = v50;
                edx36 = v49;
            }
            v48 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) << 3);
            ebp55 = reinterpret_cast<void**>(0);
            v52 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v52) - 0x3fff);
            v54 = 0;
            v56 = reinterpret_cast<void**>(0);
        }
    }
    addr_6e94b1af_24:
    ecx68 = edi41;
    v69 = edi41;
    v70 = v37;
    eax71 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi41)));
    v72 = v39;
    esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi41) >> 16);
    v74 = v40;
    ebx75 = reinterpret_cast<unsigned char>(edi41) >> 24;
    bl76 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx75) >> 7);
    edx77 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi73) & 0x7fff);
    edi78 = reinterpret_cast<void**>(static_cast<uint32_t>(bl76));
    v79 = eax71;
    v80 = bl76;
    v81 = edi78;
    if (edx77) {
        if (edx77 == 0x7fff) {
            ebx82 = reinterpret_cast<void**>(2);
            esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v37) | reinterpret_cast<unsigned char>(v40) | reinterpret_cast<unsigned char>(eax71));
            if (esi73) {
                edi78 = v56;
                *reinterpret_cast<unsigned char*>(&ebx82) = 3;
                eax83 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi78) | 1);
                if (*reinterpret_cast<int16_t*>(&ecx68) < 0) {
                    eax83 = edi78;
                }
                v56 = eax83;
                goto addr_6e94b332_30;
            }
        } else {
            esi84 = v40;
            eax85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax71) | 0x10000);
            ebx86 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34) + 96);
            ecx68 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34) + 0x6c);
            while (ecx68 = ecx68 - 4, esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi84) >> 29 | reinterpret_cast<unsigned char>(eax85) << 3), v79 = esi73, ecx68 != ebx86) {
                eax85 = v74;
                esi84 = v72;
            }
            v70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v70) << 3);
            edx77 = edx77 - 0x3fff;
            ebx82 = reinterpret_cast<void**>(0);
            goto addr_6e94b332_30;
        }
    }
    ebx82 = reinterpret_cast<void**>(1);
    ecx68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v37) | reinterpret_cast<unsigned char>(v40) | reinterpret_cast<unsigned char>(eax71));
    if (!ecx68) {
        addr_6e94b332_30:
        eax87 = v80;
        v88 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax87) ^ v45)));
        eax89 = reinterpret_cast<void**>(v54 | reinterpret_cast<unsigned char>(ebx82));
        switch (eax89) {
        case 0:
            v90 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edx77) + reinterpret_cast<uint32_t>(v52));
            eax91 = reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v70);
            v92 = eax91;
            tmp32_93 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v72) + reinterpret_cast<uint32_t>(__intrinsic()));
            tmp32_94 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_93) < reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v72)));
            tmp32_95 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v49) * reinterpret_cast<unsigned char>(v70)) + reinterpret_cast<uint32_t>(tmp32_93));
            tmp32_96 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(tmp32_94) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_95) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v49) * reinterpret_cast<unsigned char>(v70))));
            v97 = tmp32_95;
            tmp32_98 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v49) * reinterpret_cast<unsigned char>(v72) + reinterpret_cast<uint32_t>(tmp32_96));
            tmp32_99 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v74) + reinterpret_cast<uint32_t>(tmp32_98));
            ebp100 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v50) * reinterpret_cast<unsigned char>(v70));
            tmp32_101 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp100) + reinterpret_cast<uint32_t>(tmp32_99));
            v102 = tmp32_101;
            edi103 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v50) * reinterpret_cast<unsigned char>(v72) + (reinterpret_cast<unsigned char>(v49) * reinterpret_cast<unsigned char>(v74) + (reinterpret_cast<unsigned char>(v51) * reinterpret_cast<unsigned char>(v70) + (reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v79) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_94) < reinterpret_cast<uint32_t>(__intrinsic())) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_96) < reinterpret_cast<uint32_t>(__intrinsic()))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_98) < reinterpret_cast<unsigned char>(v49) * reinterpret_cast<unsigned char>(v72))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_99) < reinterpret_cast<unsigned char>(v48) * reinterpret_cast<unsigned char>(v74))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_101) < reinterpret_cast<unsigned char>(ebp100)))))));
            v69 = edi103;
            edi104 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x9c);
            ebx105 = reinterpret_cast<unsigned char>(tmp32_95) | eax91 | reinterpret_cast<unsigned char>(tmp32_101) | reinterpret_cast<unsigned char>(edi103) << 13;
            edx106 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x90);
            while (edx106 != edi104) {
                edx106 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx106) + 4);
            }
            edx107 = 0;
            *reinterpret_cast<unsigned char*>(&edx107) = reinterpret_cast<uint1_t>(!!ebx105);
            edx108 = reinterpret_cast<void**>(edx107 | v92);
            v109 = v102;
            v110 = v69;
            v111 = edx108;
            v112 = v97;
            if (reinterpret_cast<unsigned char>(v69) & 0x100000) {
                ebx113 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x7c);
                v114 = reinterpret_cast<unsigned char>(v97) << 31 | reinterpret_cast<unsigned char>(edx108) >> 1;
                eax115 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x70 + 4);
                esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx108) << 31);
                if (eax115 != ebx113) {
                    do {
                        eax115 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax115) + 4);
                    } while (eax115 != ebx113);
                }
                eax116 = 0;
                v90 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v90) + 1);
                v110 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v110) >> 1);
                *reinterpret_cast<unsigned char*>(&eax116) = reinterpret_cast<uint1_t>(!!esi73);
                v111 = reinterpret_cast<void**>(v114 | eax116);
                goto addr_6e94b834_43;
            }
        case 1:
        case 2:
            v46 = v88;
            goto addr_6e94b4d8_45;
        case 3:
        case 7:
        case 11:
            v46 = v81;
            goto addr_6e94b4d8_45;
        case 4:
        case 5:
        case 8:
        case 10:
            v46 = v88;
        case 12:
        case 13:
        case 14:
            v111 = v48;
            v112 = v49;
            v109 = v50;
            v110 = v51;
            goto addr_6e94b378_49;
        case 6:
        case 9:
            v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 1);
            eax117 = 0xffff8000;
            esi118 = reinterpret_cast<void**>(0);
            edi119 = reinterpret_cast<void**>(0);
            v45 = 1;
            ebx120 = reinterpret_cast<void**>(0);
            goto addr_6e94b785_51;
        case 15:
            eax121 = v51;
            if (reinterpret_cast<unsigned char>(eax121) <= reinterpret_cast<unsigned char>(v79)) {
                if (eax121 != v79) {
                    esi118 = v74;
                    ecx122 = v72;
                    goto addr_6e94ba4b_55;
                }
                ecx123 = v50;
                esi118 = v74;
                if (reinterpret_cast<unsigned char>(ecx123) <= reinterpret_cast<unsigned char>(esi118)) 
                    goto addr_6e94baa6_57;
            } else {
                ecx123 = v50;
            }
            edi119 = v49;
            esi118 = ecx123;
            ebx120 = v48;
            goto addr_6e94b7ae_60;
            addr_6e94baa6_57:
            ecx122 = v72;
            if (ecx123 != esi118) {
                addr_6e94ba4b_55:
                ebx120 = v70;
                edi119 = ecx122;
                if (v48 != ebx120 || (v49 != ecx122 || (v50 != esi118 || eax121 != v79))) {
                    ecx124 = v80;
                    eax125 = v79;
                    *reinterpret_cast<uint16_t*>(&eax117) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax125) | 0x8000);
                    v45 = *reinterpret_cast<unsigned char*>(&ecx124);
                    goto addr_6e94b785_51;
                } else {
                    goto addr_6e94b7ae_60;
                }
            } else {
                edi119 = v49;
                if (reinterpret_cast<unsigned char>(edi119) > reinterpret_cast<unsigned char>(ecx122)) {
                    ebx120 = v48;
                    goto addr_6e94b7ae_60;
                }
                if (edi119 != ecx122) 
                    goto addr_6e94ba4b_55;
            }
            ebx120 = v48;
            if (reinterpret_cast<unsigned char>(ebx120) > reinterpret_cast<unsigned char>(v70)) {
                addr_6e94b7ae_60:
                *reinterpret_cast<uint16_t*>(&eax117) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax121) | 0x8000);
                goto addr_6e94b785_51;
            } else {
                goto addr_6e94ba4b_55;
            }
            while (1) {
                addr_6e950cd5_68:
            case 16:
            case 61:
                eax89 = ebx82;
                while (reinterpret_cast<unsigned char>(eax89) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp55 + 0xffffffd4)) && (edi78 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4), reinterpret_cast<unsigned char>(edi78) < reinterpret_cast<unsigned char>((*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 96) >> 31) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 76))))) {
                    edx77 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89))));
                    ebx82 = eax89 + 1;
                    ecx68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx77) & 0xffffffc0);
                    if (*reinterpret_cast<unsigned char*>(&ecx68) == 64) {
                        *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4) = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx77) & 63) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi78));
                        eax89 = ebx82;
                        continue;
                    }
                    if (*reinterpret_cast<unsigned char*>(&ecx68) == 0x80) {
                        eax89 = ebx82;
                        esi126 = reinterpret_cast<unsigned char>(edx77) & 63;
                        edi127 = 0;
                        ecx128 = 0;
                        do {
                            ++eax89;
                            ebx129 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                            edx130 = (ebx129 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx128);
                            ecx128 = ecx128 + 7;
                            edi127 = edi127 | edx130;
                        } while (*reinterpret_cast<signed char*>(&ebx129) < 0);
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ecx68) == 0xc0) {
                            edx131 = reinterpret_cast<unsigned char>(edx77) & 63;
                            if (edx131 > 17) 
                                goto addr_6e950cd5_68;
                            *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp55 + 8) + edx131 * 8) + 4) = 0;
                            eax89 = ebx82;
                            continue;
                        }
                        if (*reinterpret_cast<unsigned char*>(&edx77) > 47) 
                            goto addr_6e950ccc_79;
                        esi73 = *reinterpret_cast<void***>(ebp55 + 0xffffffd0);
                        goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx77) * 4 + 0x6e9573f8);
                    }
                    addr_6e950c87_81:
                    edi132 = reinterpret_cast<void**>(edi127 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac));
                    if (esi126 > 17) 
                        continue;
                    edx133 = reinterpret_cast<struct s14*>(*reinterpret_cast<void***>(ebp55 + 8) + esi126 * 8);
                    edx133->f4 = 1;
                    edx133->f0 = edi132;
                    continue;
                case 17:
                    edi78 = *reinterpret_cast<void***>(ebp55 + 8);
                    esi73 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edi78 + 0xb8)));
                    ecx68 = esi73;
                    if (*reinterpret_cast<unsigned char*>(&ecx68) == 0xff) 
                        goto addr_6e950ccc_79;
                    ecx68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) & 0x70);
                    *reinterpret_cast<unsigned char*>(ebp55 + 0xffffffcb) = *reinterpret_cast<unsigned char*>(&ecx68);
                    if (*reinterpret_cast<unsigned char*>(&ecx68) == 32) {
                        edi78 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 84);
                        *reinterpret_cast<void***>(ebp55 + 0xffffffc4) = edi78;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ecx68) <= 32) {
                            if (!*reinterpret_cast<unsigned char*>(&ecx68)) 
                                goto addr_6e9512db_88;
                            if (*reinterpret_cast<unsigned char*>(&ecx68) == 16) 
                                goto addr_6e9512db_88; else 
                                goto addr_6e950ccc_79;
                        } else {
                            edi78 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebp55 + 0xffffffcb)));
                            ecx68 = edi78;
                            if (*reinterpret_cast<unsigned char*>(&ecx68) == 64) {
                                edi78 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 92);
                                *reinterpret_cast<void***>(ebp55 + 0xffffffc4) = edi78;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ecx68) == 80) {
                                    addr_6e9512db_88:
                                    *reinterpret_cast<void***>(ebp55 + 0xffffffc4) = reinterpret_cast<void**>(0);
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&ecx68) != 48) 
                                        goto addr_6e950ccc_79;
                                    edi78 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 88);
                                    *reinterpret_cast<void***>(ebp55 + 0xffffffc4) = edi78;
                                }
                            }
                        }
                    }
                    ecx68 = esi73;
                    if (*reinterpret_cast<unsigned char*>(&ecx68) == 80) {
                        ebx134 = reinterpret_cast<struct s15*>(reinterpret_cast<uint32_t>(ebx82 + 3) & 0xfffffffc);
                        eax89 = reinterpret_cast<void**>(&ebx134->f4);
                        edx135 = ebx134->f0;
                    } else {
                        edx136 = reinterpret_cast<unsigned char>(esi73) & 15;
                        if (*reinterpret_cast<unsigned char*>(&edx136) > 12) 
                            goto addr_6e950ccc_79;
                        edx77 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx136)));
                        goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx77) * 4 + 0x6e9574b8);
                    }
                    addr_6e9512c5_99:
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4) = edx135;
                    continue;
                case 64:
                case 67:
                case 75:
                    edi137 = *reinterpret_cast<void***>(eax89 + 1);
                    eax89 = eax89 + 5;
                    addr_6e9512ab_101:
                    edx135 = reinterpret_cast<void**>(0);
                    if (edi137) {
                        edx138 = *reinterpret_cast<void***>(ebp55 + 0xffffffc4);
                        if (*reinterpret_cast<unsigned char*>(ebp55 + 0xffffffcb) == 16) {
                            edx138 = ebx82;
                        }
                        ebx139 = esi73;
                        edx135 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx138) + reinterpret_cast<unsigned char>(edi137));
                        if (*reinterpret_cast<signed char*>(&ebx139) < 0) {
                            edx135 = *reinterpret_cast<void***>(edx135);
                            goto addr_6e9512c5_99;
                        }
                    }
                case 65:
                    eax89 = ebx82;
                    edi137 = reinterpret_cast<void**>(0);
                    ecx140 = 0;
                    *reinterpret_cast<void***>(ebp55 + 0xffffffc0) = ebx82;
                    do {
                        ++eax89;
                        ebx141 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx142 = (ebx141 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx140);
                        ecx140 = ecx140 + 7;
                        edi137 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi137) | edx142);
                    } while (*reinterpret_cast<signed char*>(&ebx141) < 0);
                    ebx82 = *reinterpret_cast<void***>(ebp55 + 0xffffffc0);
                    goto addr_6e9512ab_101;
                case 66:
                    edi137 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax89 + 1))));
                    eax89 = eax89 + 3;
                    goto addr_6e9512ab_101;
                case 68:
                case 76:
                    edi137 = *reinterpret_cast<void***>(eax89 + 1);
                    eax89 = eax89 + 9;
                    goto addr_6e9512ab_101;
                case 73:
                    esp143 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp143->f0 = reinterpret_cast<void**>(0x6e9512fa);
                    eax89 = fun_6e950b70(esp143->f4, esp143->f8);
                    esp34 = reinterpret_cast<struct s13*>(&esp143->f4);
                    edi137 = *reinterpret_cast<void***>(ebp55 + 0xffffffe4);
                    goto addr_6e9512ab_101;
                case 74:
                    edi137 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax89 + 1))));
                    eax89 = eax89 + 3;
                    goto addr_6e9512ab_101;
                case 18:
                    eax89 = eax89 + 2;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi78));
                    continue;
                case 19:
                    eax89 = eax89 + 3;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4) = reinterpret_cast<void**>(*reinterpret_cast<uint16_t*>(eax89 + 0xfffffffe) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi78));
                    continue;
                case 20:
                    eax89 = eax89 + 5;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp55 + 8) + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xfffffffc)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi78));
                    continue;
                case 21:
                    esi144 = 0;
                    ecx145 = 0;
                    do {
                        ++ebx82;
                        edx146 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax147 = (edx146 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx145);
                        ecx145 = ecx145 + 7;
                        esi144 = esi144 | eax147;
                    } while (*reinterpret_cast<signed char*>(&edx146) < 0);
                    eax89 = ebx82;
                    edi127 = 0;
                    ecx148 = 0;
                    esi126 = esi144;
                    do {
                        ++eax89;
                        ebx149 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx150 = (ebx149 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx148);
                        ecx148 = ecx148 + 7;
                        edi127 = edi127 | edx150;
                    } while (*reinterpret_cast<signed char*>(&ebx149) < 0);
                    goto addr_6e950c87_81;
                case 22:
                    eax89 = ebx82;
                    esi151 = 0;
                    ecx152 = 0;
                    do {
                        ++eax89;
                        ebx153 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx154 = (ebx153 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx152);
                        ecx152 = ecx152 + 7;
                        esi151 = esi151 | edx154;
                    } while (*reinterpret_cast<signed char*>(&ebx153) < 0);
                    addr_6e950df9_123:
                    if (esi151 > 17) 
                        continue;
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp55 + 8) + esi151 * 8) + 4) = 0;
                    continue;
                case 23:
                    eax89 = ebx82;
                    esi155 = 0;
                    ecx156 = 0;
                    do {
                        ++eax89;
                        ebx157 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx158 = (ebx157 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx156);
                        ecx156 = ecx156 + 7;
                        esi155 = esi155 | edx158;
                    } while (*reinterpret_cast<signed char*>(&ebx157) < 0);
                    if (esi155 > 17) 
                        continue;
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp55 + 8) + esi155 * 8) + 4) = 6;
                    continue;
                case 24:
                    eax89 = ebx82;
                    esi151 = 0;
                    ecx159 = 0;
                    do {
                        ++eax89;
                        ebx160 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx161 = (ebx160 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx159);
                        ecx159 = ecx159 + 7;
                        esi151 = esi151 | edx161;
                    } while (*reinterpret_cast<signed char*>(&ebx160) < 0);
                    goto addr_6e950df9_123;
                case 25:
                    ecx162 = 0;
                    esi163 = 0;
                    do {
                        ++ebx82;
                        edx164 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax165 = (edx164 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx162);
                        ecx162 = ecx162 + 7;
                        esi163 = esi163 | eax165;
                    } while (*reinterpret_cast<signed char*>(&edx164) < 0);
                    eax89 = ebx82;
                    edi166 = reinterpret_cast<void**>(0);
                    ecx167 = 0;
                    esi168 = esi163;
                    do {
                        ++eax89;
                        ebx169 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx170 = (ebx169 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx167);
                        ecx167 = ecx167 + 7;
                        edi166 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi166) | edx170);
                    } while (*reinterpret_cast<signed char*>(&ebx169) < 0);
                    if (esi168 > 17) 
                        continue;
                    edx171 = reinterpret_cast<struct s17*>(*reinterpret_cast<void***>(ebp55 + 8) + esi168 * 8);
                    edx171->f4 = 2;
                    edx171->f0 = edi166;
                    continue;
                case 26:
                    if (!*reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc)) {
                        esp172 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp172->f0 = reinterpret_cast<void**>(0x6e951363);
                        eax173 = fun_6e941590(ecx68);
                        esp34 = reinterpret_cast<struct s13*>(reinterpret_cast<uint32_t>(&esp172->f4) - eax173);
                        eax174 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esp34) + 15 & 0xfffffff0);
                    } else {
                        eax174 = *reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc);
                        *reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc) = (*reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc))->f144;
                    }
                    esi175 = *reinterpret_cast<void***>(ebp55 + 8);
                    edi176 = eax174;
                    ecx177 = 41;
                    while (ecx177) {
                        --ecx177;
                        edi176->f0 = *reinterpret_cast<void***>(esi175);
                        edi176 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(edi176) + 4);
                        esi175 = esi175 + 4;
                    }
                    *reinterpret_cast<struct s18**>(*reinterpret_cast<void***>(ebp55 + 8) + 0x90) = eax174;
                    eax89 = ebx82;
                    continue;
                case 27:
                    ecx178 = 41;
                    edi179 = *reinterpret_cast<void***>(ebp55 + 8);
                    eax180 = *reinterpret_cast<struct s18**>(*reinterpret_cast<void***>(ebp55 + 8) + 0x90);
                    esi181 = eax180;
                    while (ecx178) {
                        --ecx178;
                        *reinterpret_cast<void***>(edi179) = esi181->f0;
                        edi179 = edi179 + 4;
                        esi181 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esi181) + 4);
                    }
                    edi182 = *reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc);
                    *reinterpret_cast<struct s18**>(ebp55 + 0xffffffcc) = eax180;
                    eax180->f144 = edi182;
                    eax89 = ebx82;
                    continue;
                case 28:
                    esi183 = 0;
                    ecx184 = 0;
                    do {
                        ++ebx82;
                        edx185 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax186 = (edx185 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx184);
                        ecx184 = ecx184 + 7;
                        esi183 = esi183 | eax186;
                    } while (*reinterpret_cast<signed char*>(&edx185) < 0);
                    ecx187 = 0;
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0x98) = esi183;
                    eax89 = ebx82;
                    esi188 = 0;
                    do {
                        ++eax89;
                        ebx189 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx190 = (ebx189 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx187);
                        ecx187 = ecx187 + 7;
                        esi188 = esi188 | edx190;
                    } while (*reinterpret_cast<signed char*>(&ebx189) < 0);
                    edi191 = *reinterpret_cast<void***>(ebp55 + 8);
                    *reinterpret_cast<uint32_t*>(edi191 + 0x94) = esi188;
                    *reinterpret_cast<int32_t*>(edi191 + 0xa0) = 1;
                    continue;
                case 29:
                    eax89 = ebx82;
                    ecx192 = 0;
                    esi193 = 0;
                    do {
                        ++eax89;
                        ebx194 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx195 = (ebx194 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx192);
                        ecx192 = ecx192 + 7;
                        esi193 = esi193 | edx195;
                    } while (*reinterpret_cast<signed char*>(&ebx194) < 0);
                    edi196 = *reinterpret_cast<void***>(ebp55 + 8);
                    *reinterpret_cast<uint32_t*>(edi196 + 0x98) = esi193;
                    *reinterpret_cast<int32_t*>(edi196 + 0xa0) = 1;
                    continue;
                case 30:
                    eax89 = ebx82;
                    esi197 = 0;
                    ecx198 = 0;
                    do {
                        ++eax89;
                        ebx199 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx200 = (ebx199 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx198);
                        ecx198 = ecx198 + 7;
                        esi197 = esi197 | edx200;
                    } while (*reinterpret_cast<signed char*>(&ebx199) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0x94) = esi197;
                    continue;
                case 31:
                    eax201 = *reinterpret_cast<void***>(ebp55 + 8);
                    esi202 = reinterpret_cast<void*>(0);
                    ecx203 = 0;
                    *reinterpret_cast<void***>(eax201 + 0x9c) = ebx82;
                    *reinterpret_cast<int32_t*>(eax201 + 0xa0) = 2;
                    do {
                        ++ebx82;
                        edx204 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax205 = (edx204 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx203);
                        ecx203 = ecx203 + 7;
                        esi202 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi202) | eax205);
                    } while (*reinterpret_cast<signed char*>(&edx204) < 0);
                    eax89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<uint32_t>(esi202));
                    continue;
                case 32:
                    esi206 = 0;
                    ecx207 = 0;
                    do {
                        ++ebx82;
                        edx208 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax209 = (edx208 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx207);
                        ecx207 = ecx207 + 7;
                        esi206 = esi206 | eax209;
                    } while (*reinterpret_cast<signed char*>(&edx208) < 0);
                    if (esi206 <= 17) {
                        eax210 = reinterpret_cast<struct s19*>(*reinterpret_cast<void***>(ebp55 + 8) + esi206 * 8);
                        eax210->f4 = 3;
                        eax210->f0 = ebx82;
                    }
                    esi211 = reinterpret_cast<void*>(0);
                    ecx212 = 0;
                    do {
                        ++ebx82;
                        edx213 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax214 = (edx213 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx212);
                        ecx212 = ecx212 + 7;
                        esi211 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi211) | eax214);
                    } while (*reinterpret_cast<signed char*>(&edx213) < 0);
                    eax89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<uint32_t>(esi211));
                    continue;
                case 33:
                    esi215 = 0;
                    ecx216 = 0;
                    do {
                        ++ebx82;
                        edx217 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax218 = (edx217 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx216);
                        ecx216 = ecx216 + 7;
                        esi215 = esi215 | eax218;
                    } while (*reinterpret_cast<signed char*>(&edx217) < 0);
                    esp219 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp219->f0 = reinterpret_cast<void**>(0x6e951087);
                    eax89 = fun_6e950b70(esp219->f4, esp219->f8);
                    esp34 = reinterpret_cast<struct s13*>(&esp219->f4);
                    edx220 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac) * reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp55 + 0xffffffe4)));
                    if (esi215 > 17) 
                        continue;
                    ecx221 = reinterpret_cast<struct s20*>(*reinterpret_cast<void***>(ebp55 + 8) + esi215 * 8);
                    ecx221->f4 = 1;
                    ecx221->f0 = edx220;
                    continue;
                case 34:
                    esi222 = 0;
                    ecx223 = 0;
                    do {
                        ++ebx82;
                        edx224 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax225 = (edx224 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx223);
                        ecx223 = ecx223 + 7;
                        esi222 = esi222 | eax225;
                    } while (*reinterpret_cast<signed char*>(&edx224) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0x98) = esi222;
                    esp226 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp226->f0 = reinterpret_cast<void**>(0x6e9510dc);
                    eax89 = fun_6e950b70(esp226->f4, esp226->f8);
                    esp34 = reinterpret_cast<struct s13*>(&esp226->f4);
                    edi227 = *reinterpret_cast<void***>(ebp55 + 8);
                    edx228 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp55 + 0xffffffe4)) * *reinterpret_cast<uint32_t*>(edi227 + 0xac);
                    *reinterpret_cast<int32_t*>(edi227 + 0xa0) = 1;
                    *reinterpret_cast<uint32_t*>(edi227 + 0x94) = edx228;
                    continue;
                case 35:
                    esp229 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp229->f0 = reinterpret_cast<void**>(0x6e951108);
                    eax89 = fun_6e950b70(esp229->f4, esp229->f8);
                    esp34 = reinterpret_cast<struct s13*>(&esp229->f4);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0x94) = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp55 + 0xffffffe4)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac);
                    continue;
                case 36:
                    esi230 = 0;
                    ecx231 = 0;
                    do {
                        ++ebx82;
                        edx232 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax233 = (edx232 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx231);
                        ecx231 = ecx231 + 7;
                        esi230 = esi230 | eax233;
                    } while (*reinterpret_cast<signed char*>(&edx232) < 0);
                    eax89 = ebx82;
                    edi234 = 0;
                    ecx235 = 0;
                    do {
                        ++eax89;
                        ebx236 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx237 = (ebx236 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx235);
                        ecx235 = ecx235 + 7;
                        edi234 = edi234 | edx237;
                    } while (*reinterpret_cast<signed char*>(&ebx236) < 0);
                    edi238 = reinterpret_cast<void**>(edi234 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac));
                    if (esi230 > 17) 
                        continue;
                    edx239 = reinterpret_cast<struct s21*>(*reinterpret_cast<void***>(ebp55 + 8) + esi230 * 8);
                    edx239->f4 = 4;
                    edx239->f0 = edi238;
                    continue;
                case 37:
                    esi240 = 0;
                    ecx241 = 0;
                    do {
                        ++ebx82;
                        edx242 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax243 = (edx242 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx241);
                        ecx241 = ecx241 + 7;
                        esi240 = esi240 | eax243;
                    } while (*reinterpret_cast<signed char*>(&edx242) < 0);
                    esp244 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp244->f0 = reinterpret_cast<void**>(0x6e9511a1);
                    eax89 = fun_6e950b70(esp244->f4, esp244->f8);
                    esp34 = reinterpret_cast<struct s13*>(&esp244->f4);
                    edx245 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac) * reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp55 + 0xffffffe4)));
                    if (esi240 > 17) 
                        continue;
                    ecx246 = reinterpret_cast<struct s22*>(*reinterpret_cast<void***>(ebp55 + 8) + esi240 * 8);
                    ecx246->f4 = 4;
                    ecx246->f0 = edx245;
                    continue;
                case 38:
                    ecx247 = 0;
                    esi248 = 0;
                    do {
                        ++ebx82;
                        edx249 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax250 = (edx249 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx247);
                        ecx247 = ecx247 + 7;
                        esi248 = esi248 | eax250;
                    } while (*reinterpret_cast<signed char*>(&edx249) < 0);
                    if (esi248 <= 17) {
                        eax251 = reinterpret_cast<struct s23*>(*reinterpret_cast<void***>(ebp55 + 8) + esi248 * 8);
                        eax251->f4 = 5;
                        eax251->f0 = ebx82;
                    }
                    esi252 = reinterpret_cast<void*>(0);
                    ecx253 = 0;
                    do {
                        ++ebx82;
                        edx254 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax255 = (edx254 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx253);
                        ecx253 = ecx253 + 7;
                        esi252 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi252) | eax255);
                    } while (*reinterpret_cast<signed char*>(&edx254) < 0);
                    eax89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<uint32_t>(esi252));
                    continue;
                case 62:
                    eax89 = ebx82;
                    esi256 = 0;
                    ecx257 = 0;
                    do {
                        ++eax89;
                        ebx258 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx259 = (ebx258 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx257);
                        ecx257 = ecx257 + 7;
                        esi256 = esi256 | edx259;
                    } while (*reinterpret_cast<signed char*>(&ebx258) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 0xffffffd0) + 0x68) = esi256;
                    continue;
                case 63:
                    esi260 = 0;
                    ecx261 = 0;
                    do {
                        ++ebx82;
                        edx262 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff));
                        eax263 = (edx262 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx261);
                        ecx261 = ecx261 + 7;
                        esi260 = esi260 | eax263;
                    } while (*reinterpret_cast<signed char*>(&edx262) < 0);
                    eax89 = ebx82;
                    edi264 = 0;
                    ecx265 = 0;
                    do {
                        ++eax89;
                        ebx266 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                        edx267 = (ebx266 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx265);
                        ecx265 = ecx265 + 7;
                        edi264 = edi264 | edx267;
                    } while (*reinterpret_cast<signed char*>(&ebx266) < 0);
                    if (esi260 > 17) 
                        continue;
                    edx268 = reinterpret_cast<struct s24*>(*reinterpret_cast<void***>(ebp55 + 8) + esi260 * 8);
                    edi269 = reinterpret_cast<void**>(-(edi264 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp55 + 8) + 0xac)));
                    edx268->f4 = 1;
                    edx268->f0 = edi269;
                }
                break;
                addr_6e950ccc_79:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 69:
            case 70:
            case 71:
            case 72:
                esp270 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                esp270->f0 = reinterpret_cast<void**>(0x6e950cd5);
                fun_6e955970(ecx68, esp270->f4, esp270->f8, esp270->f12, esp270->f16, esp270->f20, 0, esp270->f28, esp270->f32);
                esp34 = reinterpret_cast<struct s13*>(&esp270->f4);
            }
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp55 + 0xfffffff4) + 4 + 4 + 4 + 4);
            while (1) {
            case 77:
            case 80:
            case 88:
                eax271 = *reinterpret_cast<void***>(edi78 + 1);
                edi78 = edi78 + 5;
                while (1) {
                    edx77 = reinterpret_cast<void**>(0);
                    if (eax271) {
                        edx272 = esp34->f40;
                        if (esp34->f24 == 16) {
                            edx272 = reinterpret_cast<void**>(4);
                        }
                        edx77 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx272) + reinterpret_cast<unsigned char>(eax271));
                        if (*reinterpret_cast<signed char*>(&ebx82) < reinterpret_cast<signed char>(0)) {
                            edx77 = *reinterpret_cast<void***>(edx77);
                        }
                    }
                    while (1) {
                        *reinterpret_cast<void***>(ebp55 + 0xa8) = edx77;
                        while (1) {
                            eax273 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi73));
                            ++esi73;
                            if (!*reinterpret_cast<signed char*>(&eax273)) 
                                goto addr_6e951642_214;
                            if (*reinterpret_cast<signed char*>(&eax273) != 76) {
                                if (*reinterpret_cast<signed char*>(&eax273) == 82) {
                                    eax274 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi78));
                                    ++edi78;
                                    *reinterpret_cast<unsigned char*>(ebp55 + 0xb8) = *reinterpret_cast<unsigned char*>(&eax274);
                                } else {
                                    if (*reinterpret_cast<signed char*>(&eax273) == 80) 
                                        break;
                                    if (*reinterpret_cast<signed char*>(&eax273) != 83) 
                                        goto addr_6e951926_220;
                                    *reinterpret_cast<signed char*>(ebp55 + 0xbb) = 1;
                                }
                            } else {
                                eax275 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi78));
                                ++edi78;
                                *reinterpret_cast<unsigned char*>(ebp55 + 0xb9) = *reinterpret_cast<unsigned char*>(&eax275);
                            }
                        }
                        ebx82 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi78))));
                        if (*reinterpret_cast<unsigned char*>(&ebx82) == 0xff) 
                            goto addr_6e951746_224;
                        eax276 = reinterpret_cast<unsigned char>(ebx82) & 0x70;
                        esp34->f24 = *reinterpret_cast<void***>(&eax276);
                        if (*reinterpret_cast<void***>(&eax276) == 32) {
                            esp34->f40 = *reinterpret_cast<void***>(esp34->f16 + 84);
                        } else {
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax276)) <= 32) {
                                if (!*reinterpret_cast<void***>(&eax276)) 
                                    goto addr_6e951850_229;
                                esi73 = esi73;
                                if (*reinterpret_cast<void***>(&eax276) == 16) 
                                    goto addr_6e951850_229; else 
                                    goto addr_6e951746_224;
                            } else {
                                eax277 = reinterpret_cast<unsigned char>(esp34->f24);
                                if (*reinterpret_cast<signed char*>(&eax277) == 64) {
                                    esp34->f40 = *reinterpret_cast<void***>(esp34->f16 + 92);
                                } else {
                                    if (*reinterpret_cast<signed char*>(&eax277) == 80) {
                                        addr_6e951850_229:
                                        esp34->f40 = reinterpret_cast<void**>(0);
                                    } else {
                                        if (*reinterpret_cast<signed char*>(&eax277) != 48) 
                                            goto addr_6e951746_224;
                                        esp34->f40 = *reinterpret_cast<void***>(esp34->f16 + 88);
                                    }
                                }
                            }
                        }
                        esp34->f36 = edi78 + 1;
                        if (*reinterpret_cast<unsigned char*>(&ebx82) != 80) 
                            break;
                        eax278 = reinterpret_cast<struct s25*>(reinterpret_cast<unsigned char>(edi78 + 4) & 0xfffffffc);
                        edi78 = reinterpret_cast<void**>(&eax278->f4);
                        edx77 = eax278->f0;
                    }
                    eax279 = reinterpret_cast<unsigned char>(ebx82) & 15;
                    if (*reinterpret_cast<unsigned char*>(&eax279) > 12) 
                        goto addr_6e951746_224;
                    eax89 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax279)));
                    switch (eax89) {
                    case 1:
                        edi78 = esp34->f36;
                        ecx68 = reinterpret_cast<void**>(0);
                        esp34->f44 = esi73;
                        esi280 = reinterpret_cast<void**>(0);
                        do {
                            ++edi78;
                            eax281 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi78 + 0xffffffff));
                            edx282 = (eax281 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                            ecx68 = ecx68 + 7;
                            esi280 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi280) | edx282);
                        } while (*reinterpret_cast<signed char*>(&eax281) < 0);
                        eax271 = esi280;
                        esi73 = esp34->f44;
                        break;
                    case 2:
                        eax271 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(edi78 + 1))));
                        edi78 = edi78 + 3;
                        break;
                    case 4:
                    case 12:
                        eax271 = *reinterpret_cast<void***>(edi78 + 1);
                        edi78 = edi78 + 9;
                        break;
                    case 9:
                        esp283 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp283->f0 = reinterpret_cast<void**>(0x6e9519aa);
                        eax284 = fun_6e950b70(esp283->f4, esp283->f8);
                        esp34 = reinterpret_cast<struct s13*>(&esp283->f4);
                        edi78 = eax284;
                        eax271 = esp34->f60;
                        break;
                    case 10:
                        eax271 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(edi78 + 1))));
                        edi78 = edi78 + 3;
                    case 0x147:
                        goto 0x6e954590;
                    case 0x140:
                        goto 0x6e9545f6;
                    case 0x13e:
                    case 0x141:
                    case 0x149:
                        goto 0x6e954550;
                    case 0x13a:
                        goto 0x6e9533b0;
                    case 0x136:
                    case 0x137:
                    case 0x138:
                    case 0x139:
                        goto 0x6e953400;
                    case 0x13f:
                        goto 0x6e9545d0;
                    case 0x135:
                    case 0x13d:
                        goto 0x6e9533a0;
                    case 0x14b:
                        goto 0x6e954c30;
                    case 0x133:
                        goto 0x6e9533f0;
                    case 0x143:
                    case 0x144:
                    case 0x145:
                    case 0x146:
                        goto 0x6e954601;
                    case 0x131:
                    case 0x134:
                    case 0x13c:
                        goto 0x6e953370;
                    case 0x12f:
                        goto 0x6e952425;
                    case 0x12e:
                        goto 0x6e952480;
                    case 0x12d:
                        goto 0x6e952520;
                    case 0x12a:
                        goto 0x6e952287;
                    case 0x129:
                        goto 0x6e952276;
                    case 0x125:
                        goto 0x6e952203;
                    case 43:
                        goto 0x6e951f30;
                    case 0x10d:
                    case 0x115:
                        goto 0x6e952115;
                    case 0x120:
                        goto 0x6e9521d7;
                    case 0x119:
                        goto 0x6e952236;
                    case 0x118:
                        goto 0x6e95222b;
                    case 0x117:
                        goto 0x6e95221f;
                    case 0:
                    case 3:
                    case 11:
                        goto 0x6e951750;
                    case 31:
                        goto 0x6e951d60;
                    case 0x113:
                        goto 0x6e9522ae;
                    case 13:
                    case 16:
                    case 24:
                        goto 0x6e95185d;
                    case 0x112:
                        goto 0x6e952298;
                    case 0x123:
                        goto 0x6e9521f8;
                    case 0x10b:
                        goto 0x6e9522ba;
                    case 0x128:
                        goto 0x6e952265;
                    case 0x10a:
                        goto 0x6e9522c6;
                    case 0x148:
                        goto 0x6e954587;
                    case 0x87:
                    case 0x88:
                    case 0x89:
                    case 0x8a:
                    case 0x8b:
                    case 0x8c:
                    case 0x8d:
                    case 0x8e:
                    case 0x8f:
                    case 0x90:
                    case 0x91:
                    case 0x92:
                    case 0x93:
                    case 0x94:
                    case 0x95:
                    case 0x96:
                    case 0x97:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9c:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                    case 0xa3:
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                        goto 0x6e951e80;
                    case 0xad:
                        goto 0x6e951d25;
                    case 0x67:
                    case 0x68:
                    case 0x69:
                    case 0x6a:
                    case 0x6b:
                    case 0x6c:
                    case 0x6d:
                    case 0x6e:
                    case 0x6f:
                    case 0x70:
                    case 0x71:
                    case 0x72:
                    case 0x73:
                    case 0x74:
                    case 0x75:
                    case 0x76:
                    case 0x77:
                    case 0x78:
                    case 0x79:
                    case 0x7a:
                    case 0x7b:
                    case 0x7c:
                    case 0x7d:
                    case 0x7e:
                    case 0x7f:
                    case 0x80:
                    case 0x81:
                    case 0x82:
                    case 0x83:
                    case 0x84:
                    case 0x85:
                    case 0x86:
                        goto 0x6e951cf0;
                    case 23:
                        goto 0x6e951ba6;
                    case 22:
                        goto 0x6e951b45;
                    case 40:
                        goto 0x6e951f70;
                    case 0x11a:
                        goto 0x6e9521b6;
                    case 0x13b:
                        goto 0x6e9533a7;
                    case 0x12c:
                        goto 0x6e952541;
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 0x65:
                    case 0x66:
                        goto 0x6e951ed0;
                    case 70:
                        goto 0x6e952010;
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 56:
                    case 57:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                        goto 0x6e952045;
                    case 14:
                        goto 0x6e951b6a;
                    case 0x108:
                        goto 0x6e951db0;
                    case 41:
                        goto 0x6e951f58;
                    case 44:
                        goto 0x6e951f06;
                    case 37:
                    case 38:
                        goto 0x6e951ce0;
                    case 0x11e:
                        goto 0x6e9521cd;
                    case 33:
                        goto 0x6e951d40;
                    case 39:
                        goto 0x6e951f86;
                    case 34:
                        goto 0x6e951d30;
                    case 0x109:
                    case 0x10c:
                    case 0x114:
                        goto 0x6e9520c0;
                    case 0x12b:
                        goto 0x6e952442;
                    case 29:
                    case 48:
                    case 54:
                    case 55:
                    case 58:
                    case 0xab:
                        goto 0x6e951d70;
                    case 0x127:
                        goto 0x6e952254;
                    case 0x132:
                        goto 0x6e9533c3;
                    case 46:
                        goto 0x6e952070;
                    case 27:
                    case 28:
                    case 30:
                    case 47:
                    case 0xa8:
                    case 0xaa:
                    case 0xac:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xee:
                    case 0xef:
                    case 0xf0:
                    case 0xf1:
                    case 0xf2:
                    case 0xf3:
                    case 0xf4:
                    case 0xf5:
                    case 0xf6:
                    case 0xf7:
                    case 0xf8:
                    case 0xf9:
                    case 0xfa:
                    case 0xfb:
                    case 0xfc:
                    case 0xfd:
                    case 0xfe:
                    case 0xff:
                    case 0x100:
                    case 0x101:
                    case 0x102:
                    case 0x103:
                    case 0x104:
                    case 0x105:
                    case 0x106:
                    case 0x107:
                    case 0x10e:
                    case 0x10f:
                    case 0x110:
                    case 0x111:
                    case 0x11b:
                    case 0x11c:
                    case 0x11f:
                    case 0x124:
                        goto 0x6e951d20;
                    case 26:
                    case 35:
                    case 36:
                        goto 0x6e951cb0;
                    case 17:
                    case 25:
                        goto 0x6e951b39;
                    case 0x11d:
                        goto 0x6e9521c2;
                    case 0xa9:
                        goto 0x6e951fb0;
                    case 0x122:
                        goto 0x6e9521ed;
                    case 42:
                        goto 0x6e951f46;
                    case 45:
                        goto 0x6e951ee0;
                    case 63:
                        goto 0x6e952020;
                    case 0x130:
                        goto 0x6e9524d6;
                    case 15:
                        goto 0x6e951b5d;
                    case 0x142:
                    case 0x14a:
                        goto 0x6e954580;
                    case 0x126:
                        goto 0x6e952243;
                    case 0x121:
                        goto 0x6e9521e2;
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                        goto 0x6e951746;
                    case 0xa7:
                        goto 0x6e951e24;
                    case 32:
                        goto 0x6e951d50;
                    case 0x116:
                        goto 0x6e952214;
                    }
                }
                addr_6e951642_214:
                if (0) {
                    eax285 = edi78;
                } else {
                    addr_6e95164e_248:
                    esi73 = reinterpret_cast<void**>(0);
                    ecx68 = esp34->f16;
                    esp34->f0 = ebp55;
                    esp286 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp286->f0 = reinterpret_cast<void**>(0x6e951664);
                    fun_6e950bb0(ecx68, 1);
                    esp34 = reinterpret_cast<struct s13*>(&esp286->f12 + 4);
                    edx77 = esp34->f28 + 8;
                    eax287 = *reinterpret_cast<unsigned char*>(ebp55 + 0xb8);
                    if (*reinterpret_cast<signed char*>(&eax287) == -1) {
                        ebx82 = reinterpret_cast<void**>(0);
                        goto addr_6e9516a3_250;
                    } else {
                        eax288 = eax287 & 7;
                        if (*reinterpret_cast<unsigned char*>(&eax288) == 2) {
                            ebx82 = reinterpret_cast<void**>(4);
                            goto addr_6e9516a3_250;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&eax288) <= 2) {
                                if (*reinterpret_cast<unsigned char*>(&eax288)) 
                                    goto addr_6e951746_224; else 
                                    goto addr_6e951bc5_255;
                            } else {
                                esi73 = reinterpret_cast<void**>(0);
                                if (*reinterpret_cast<unsigned char*>(&eax288) == 3) {
                                    addr_6e951bc5_255:
                                    ebx82 = reinterpret_cast<void**>(8);
                                    goto addr_6e9516a3_250;
                                } else {
                                    ebx82 = reinterpret_cast<void**>(16);
                                    if (*reinterpret_cast<unsigned char*>(&eax288) != 4) 
                                        goto addr_6e951746_224; else 
                                        goto addr_6e9516a3_250;
                                }
                            }
                        }
                    }
                }
                addr_6e95192a_258:
                if (eax285) 
                    goto addr_6e95164e_248; else 
                    goto addr_6e951932_259;
                addr_6e9516a3_250:
                ebx82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<unsigned char>(edx77));
                esi73 = reinterpret_cast<void**>(0);
                if (*reinterpret_cast<signed char*>(ebp55 + 0xba)) {
                    ecx68 = reinterpret_cast<void**>(0);
                    do {
                        ++ebx82;
                        edx77 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xffffffff))));
                        eax289 = (reinterpret_cast<unsigned char>(edx77) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                        ecx68 = ecx68 + 7;
                        esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi73) | eax289);
                    } while (*reinterpret_cast<signed char*>(&edx77) < reinterpret_cast<signed char>(0));
                    esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi73) + reinterpret_cast<unsigned char>(ebx82));
                }
                edi78 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebp55 + 0xb9)));
                eax290 = edi78;
                if (*reinterpret_cast<signed char*>(&eax290) == -1) 
                    goto addr_6e951889_264;
                eax291 = reinterpret_cast<unsigned char>(eax290) & 0x70;
                esp34->f20 = *reinterpret_cast<void***>(&eax291);
                if (*reinterpret_cast<void***>(&eax291) == 32) {
                    esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 84);
                } else {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax291)) <= 32) {
                        if (!*reinterpret_cast<void***>(&eax291)) 
                            goto addr_6e951a0e_269;
                        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(&eax291) == 16)) 
                            goto addr_6e951746_224; else 
                            goto addr_6e951a0e_269;
                    } else {
                        eax292 = reinterpret_cast<unsigned char>(esp34->f20);
                        if (*reinterpret_cast<signed char*>(&eax292) == 64) {
                            esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 92);
                        } else {
                            if (*reinterpret_cast<signed char*>(&eax292) == 80) {
                                addr_6e951a0e_269:
                                esp34->f24 = reinterpret_cast<void**>(0);
                            } else {
                                if (*reinterpret_cast<signed char*>(&eax292) != 48) 
                                    goto addr_6e951746_224;
                                esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 88);
                            }
                        }
                    }
                }
                eax293 = edi78;
                if (*reinterpret_cast<signed char*>(&eax293) == 80) 
                    goto addr_6e951c00_277;
                eax294 = reinterpret_cast<unsigned char>(edi78) & 15;
                if (*reinterpret_cast<unsigned char*>(&eax294) > 12) 
                    goto addr_6e951746_224;
                eax89 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax294)));
                switch (eax89) {
                    addr_6e951746_224:
                case 5:
                case 6:
                case 7:
                case 8:
                    esp295 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp295->f0 = reinterpret_cast<void**>(0x6e95174b);
                    fun_6e955970(ecx68, esp295->f4, esp295->f8, 0, esp295->f16, esp295->f20, esp295->f24, esp295->f28, esp295->f32);
                    esp34 = reinterpret_cast<struct s13*>(&esp295->f4);
                    esi73 = esi73;
                    continue;
                case 0x13a:
                    goto 0x6e954590;
                case 0x133:
                    goto 0x6e9545f6;
                case 0x131:
                case 0x134:
                case 0x13c:
                    goto 0x6e954550;
                case 0x12d:
                    goto 0x6e9533b0;
                case 0x129:
                case 0x12a:
                case 0x12b:
                case 0x12c:
                    goto 0x6e953400;
                case 0x132:
                    goto 0x6e9545d0;
                case 0x128:
                case 0x130:
                    goto 0x6e9533a0;
                case 0x13e:
                    goto 0x6e954c30;
                case 0x126:
                    goto 0x6e9533f0;
                case 0x136:
                case 0x137:
                case 0x138:
                case 0x139:
                    goto 0x6e954601;
                case 0x124:
                case 0x127:
                case 0x12f:
                    goto 0x6e953370;
                case 0x122:
                    goto 0x6e952425;
                case 0x121:
                    goto 0x6e952480;
                case 0x120:
                    goto 0x6e952520;
                case 0x11d:
                    goto 0x6e952287;
                case 0x11c:
                    goto 0x6e952276;
                case 0xfe:
                    goto 0x6e9522ba;
                case 0x116:
                    goto 0x6e9521f8;
                case 0x135:
                case 0x13d:
                    goto 0x6e954580;
                case 0x119:
                    goto 0x6e952243;
                case 0x114:
                    goto 0x6e9521e2;
                case 30:
                    goto 0x6e951f30;
                case 0x100:
                case 0x108:
                    goto 0x6e952115;
                case 0x113:
                    goto 0x6e9521d7;
                case 0x10c:
                    goto 0x6e952236;
                case 0x10b:
                    goto 0x6e95222b;
                case 0x11a:
                    goto 0x6e952254;
                case 0x10a:
                    goto 0x6e95221f;
                case 0x109:
                    goto 0x6e952214;
                case 18:
                    goto 0x6e951d60;
                case 0x106:
                    goto 0x6e9522ae;
                case 0:
                case 3:
                case 11:
                    goto 0x6e95185d;
                case 0x105:
                    goto 0x6e952298;
                case 0x11b:
                    goto 0x6e952265;
                case 0xfd:
                    goto 0x6e9522c6;
                case 29:
                    goto 0x6e951f46;
                case 0x115:
                    goto 0x6e9521ed;
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 43:
                case 44:
                case 46:
                case 47:
                case 48:
                case 49:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                    goto 0x6e952045;
                case 57:
                    goto 0x6e952010;
                case 0x123:
                    goto 0x6e9524d6;
                case 2:
                    goto 0x6e951b5d;
                case 50:
                    goto 0x6e952020;
                case 14:
                case 15:
                case 17:
                case 34:
                case 0x9b:
                case 0x9d:
                case 0x9f:
                case 0xa1:
                case 0xa2:
                case 0xa3:
                case 0xa4:
                case 0xa5:
                case 0xa6:
                case 0xa7:
                case 0xa8:
                case 0xa9:
                case 0xaa:
                case 0xab:
                case 0xac:
                case 0xad:
                case 0xae:
                case 0xaf:
                case 0xb0:
                case 0xb1:
                case 0xb2:
                case 0xb3:
                case 0xb4:
                case 0xb5:
                case 0xb6:
                case 0xb7:
                case 0xb8:
                case 0xb9:
                case 0xba:
                case 0xbb:
                case 0xbc:
                case 0xbd:
                case 0xbe:
                case 0xbf:
                case 0xc0:
                case 0xc1:
                case 0xc2:
                case 0xc3:
                case 0xc4:
                case 0xc5:
                case 0xc6:
                case 0xc7:
                case 0xc8:
                case 0xc9:
                case 0xca:
                case 0xcb:
                case 0xcc:
                case 0xcd:
                case 0xce:
                case 0xcf:
                case 0xd0:
                case 0xd1:
                case 0xd2:
                case 0xd3:
                case 0xd4:
                case 0xd5:
                case 0xd6:
                case 0xd7:
                case 0xd8:
                case 0xd9:
                case 0xda:
                case 0xdb:
                case 0xdc:
                case 0xdd:
                case 0xde:
                case 0xdf:
                case 0xe0:
                case 0xe1:
                case 0xe2:
                case 0xe3:
                case 0xe4:
                case 0xe5:
                case 0xe6:
                case 0xe7:
                case 0xe8:
                case 0xe9:
                case 0xea:
                case 0xeb:
                case 0xec:
                case 0xed:
                case 0xee:
                case 0xef:
                case 0xf0:
                case 0xf1:
                case 0xf2:
                case 0xf3:
                case 0xf4:
                case 0xf5:
                case 0xf6:
                case 0xf7:
                case 0xf8:
                case 0xf9:
                case 0xfa:
                case 0x101:
                case 0x102:
                case 0x103:
                case 0x104:
                case 0x10e:
                case 0x10f:
                case 0x112:
                case 0x117:
                    goto 0x6e951d20;
                case 0x125:
                    goto 0x6e9533c3;
                case 33:
                    goto 0x6e952070;
                case 1:
                    goto 0x6e951b6a;
                case 0xfb:
                    goto 0x6e951db0;
                case 28:
                    goto 0x6e951f58;
                case 24:
                case 25:
                    goto 0x6e951ce0;
                case 0x111:
                    goto 0x6e9521cd;
                case 20:
                    goto 0x6e951d40;
                case 26:
                    goto 0x6e951f86;
                case 21:
                    goto 0x6e951d30;
                case 31:
                    goto 0x6e951f06;
                case 0x10d:
                    goto 0x6e9521b6;
                case 9:
                    goto 0x6e951b45;
                case 10:
                    goto 0x6e951ba6;
                case 27:
                    goto 0x6e951f70;
                case 0x9a:
                    goto 0x6e951e24;
                case 19:
                    goto 0x6e951d50;
                case 0xfc:
                case 0xff:
                case 0x107:
                    goto 0x6e9520c0;
                case 0x11e:
                    goto 0x6e952442;
                case 16:
                case 35:
                case 41:
                case 42:
                case 45:
                case 0x9e:
                    goto 0x6e951d70;
                case 0x13b:
                    goto 0x6e954587;
                case 0x7a:
                case 0x7b:
                case 0x7c:
                case 0x7d:
                case 0x7e:
                case 0x7f:
                case 0x80:
                case 0x81:
                case 0x82:
                case 0x83:
                case 0x84:
                case 0x85:
                case 0x86:
                case 0x87:
                case 0x88:
                case 0x89:
                case 0x8a:
                case 0x8b:
                case 0x8c:
                case 0x8d:
                case 0x8e:
                case 0x8f:
                case 0x90:
                case 0x91:
                case 0x92:
                case 0x93:
                case 0x94:
                case 0x95:
                case 0x96:
                case 0x97:
                case 0x98:
                case 0x99:
                    goto 0x6e951e80;
                case 13:
                case 22:
                case 23:
                    goto 0x6e951cb0;
                case 4:
                case 12:
                    goto 0x6e951b39;
                case 0x110:
                    goto 0x6e9521c2;
                case 0x9c:
                    goto 0x6e951fb0;
                case 0x118:
                    goto 0x6e952203;
                case 0xa0:
                    goto 0x6e951d25;
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 0x65:
                case 0x66:
                case 0x67:
                case 0x68:
                case 0x69:
                case 0x6a:
                case 0x6b:
                case 0x6c:
                case 0x6d:
                case 0x6e:
                case 0x6f:
                case 0x70:
                case 0x71:
                case 0x72:
                case 0x73:
                case 0x74:
                case 0x75:
                case 0x76:
                case 0x77:
                case 0x78:
                case 0x79:
                    goto 0x6e951cf0;
                case 32:
                    goto 0x6e951ee0;
                case 0x12e:
                    goto 0x6e9533a7;
                case 0x11f:
                    goto 0x6e952541;
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                    goto 0x6e951ed0;
                }
                addr_6e951926_220:
                eax285 = esp34->f32;
                goto addr_6e95192a_258;
            }
        case 90:
        case 93:
        case 0x65:
            ecx296 = *reinterpret_cast<void***>(ebx82);
            goto addr_6e951864_281;
        case 91:
            edx297 = ebx82;
            esp34->f36 = esi73;
            ecx298 = 0;
            esp34->f32 = ebx82;
            esi299 = reinterpret_cast<void**>(0);
            do {
                ++edx297;
                ebx300 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx297 + 0xffffffff));
                eax301 = (ebx300 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx298);
                ecx298 = ecx298 + 7;
                esi299 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi299) | eax301);
            } while (*reinterpret_cast<signed char*>(&ebx300) < 0);
            ecx296 = esi299;
            ebx82 = esp34->f32;
            esi73 = esp34->f36;
            goto addr_6e951864_281;
        case 92:
            ecx296 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ebx82))));
            goto addr_6e951864_281;
        case 94:
        case 0x66:
            ecx296 = *reinterpret_cast<void***>(ebx82);
            goto addr_6e951864_281;
        case 99:
            esp302 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp302->f0 = reinterpret_cast<void**>(0x6e951b50);
            fun_6e950b70(esp302->f4, esp302->f8);
            esp34 = reinterpret_cast<struct s13*>(&esp302->f4);
            ecx296 = esp34->f60;
            goto addr_6e951864_281;
        case 100:
            ecx296 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ebx82))));
            goto addr_6e951864_281;
            do {
                addr_6e951d20_289:
            case 0x68:
            case 0x69:
            case 0x6b:
            case 0x7c:
            case 0xf5:
            case 0xf7:
            case 0xf9:
            case 0xfb:
            case 0xfc:
            case 0xfd:
            case 0xfe:
            case 0xff:
            case 0x100:
            case 0x101:
            case 0x102:
            case 0x103:
            case 0x104:
            case 0x105:
            case 0x106:
            case 0x107:
            case 0x108:
            case 0x109:
            case 0x10a:
            case 0x10b:
            case 0x10c:
            case 0x10d:
            case 0x10e:
            case 0x10f:
            case 0x110:
            case 0x111:
            case 0x112:
            case 0x113:
            case 0x114:
            case 0x115:
            case 0x116:
            case 0x117:
            case 0x118:
            case 0x119:
            case 0x11a:
            case 0x11b:
            case 0x11c:
            case 0x11d:
            case 0x11e:
            case 0x11f:
            case 0x120:
            case 0x121:
            case 0x122:
            case 0x123:
            case 0x124:
            case 0x125:
            case 0x126:
            case 0x127:
            case 0x128:
            case 0x129:
            case 0x12a:
            case 0x12b:
            case 0x12c:
            case 0x12d:
            case 0x12e:
            case 0x12f:
            case 0x130:
            case 0x131:
            case 0x132:
            case 0x133:
            case 0x134:
            case 0x135:
            case 0x136:
            case 0x137:
            case 0x138:
            case 0x139:
            case 0x13a:
            case 0x13b:
            case 0x13c:
            case 0x13d:
            case 0x13e:
            case 0x13f:
            case 0x140:
            case 0x141:
            case 0x142:
            case 0x143:
            case 0x144:
            case 0x145:
            case 0x146:
            case 0x147:
            case 0x148:
            case 0x149:
            case 0x14a:
            case 0x14b:
            case 0x14c:
            case 0x14d:
            case 0x14e:
            case 0x14f:
            case 0x150:
            case 0x151:
            case 0x152:
            case 0x153:
            case 0x154:
            case 0x15b:
            case 0x15c:
            case 0x15d:
            case 0x15e:
            case 0x168:
            case 0x169:
            case 0x16c:
            case 0x171:
                esp303 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                esp303->f0 = reinterpret_cast<void**>(0x6e951d25);
                fun_6e955970(ecx68, esp303->f4, esp303->f8, 0, esp303->f16, esp303->f20, esp303->f24, esp303->f28, esp303->f32);
                esp34 = reinterpret_cast<struct s13*>(&esp303->f4);
                while (1) {
                case 0xfa:
                    eax89 = esi73;
                    while (1) {
                        while (reinterpret_cast<unsigned char>(eax89) < reinterpret_cast<unsigned char>(esp34->f12)) {
                            edx77 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89))));
                            esi73 = eax89 + 1;
                            ecx68 = edx77 + 0xfffffffd;
                            edi78 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx77)));
                            if (*reinterpret_cast<unsigned char*>(&ecx68) > 0xee) 
                                goto addr_6e951d20_289;
                            ecx68 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx68)));
                            switch (ecx68) {
                            case 16:
                                if (!ebp55) 
                                    goto addr_6e951d20_289;
                                --ebp55;
                                eax89 = esi73;
                                break;
                            case 19:
                                if (reinterpret_cast<signed char>(ebp55) <= reinterpret_cast<signed char>(1)) 
                                    goto addr_6e951d20_289;
                                eax304 = reinterpret_cast<uint16_t*>(ebp55 + 0xfffffffe);
                                edx305 = ebp55 + 0xffffffff;
                                ebx82 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<uint32_t>(eax304) * 4 + 48);
                                ecx68 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(edx305) * 4 + 48);
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(edx305) * 4 + 48) = ebx82;
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<uint32_t>(eax304) * 4 + 48) = ecx68;
                                eax89 = esi73;
                                break;
                            case 20:
                                if (reinterpret_cast<signed char>(ebp55) <= reinterpret_cast<signed char>(2)) 
                                    goto addr_6e951d20_289;
                                ecx68 = ebp55 + 0xffffffff;
                                eax306 = ebp55 + 0xfffffffd;
                                edx307 = reinterpret_cast<uint16_t*>(ebp55 + 0xfffffffe);
                                ebx82 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<uint32_t>(edx307) * 4 + 48);
                                esp34->f20 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ecx68) * 4 + 48);
                                edi308 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(eax306) * 4 + 48);
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ecx68) * 4 + 48) = ebx82;
                                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<uint32_t>(edx307) * 4 + 48) = edi308;
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(eax306) * 4 + 48) = esp34->f20;
                                eax89 = esi73;
                                break;
                            case 37:
                                if (!ebp55) 
                                    goto addr_6e951d20_289;
                                --ebp55;
                                eax89 = eax89 + 3;
                                ebx82 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebp55) * 4 + 48);
                                if (!ebx82) 
                                    break;
                                eax89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax89 + 1))));
                                break;
                            case 44:
                                eax89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax89 + 1))) + 3);
                            case 0x12d:
                                goto 0x6e954590;
                            case 0x126:
                                goto 0x6e9545f6;
                            case 0x124:
                            case 0x127:
                            case 0x12f:
                                goto 0x6e954550;
                            case 0x120:
                                goto 0x6e9533b0;
                            case 0x11c:
                            case 0x11d:
                            case 0x11e:
                            case 0x11f:
                                goto 0x6e953400;
                            case 0x125:
                                goto 0x6e9545d0;
                            case 0x11b:
                            case 0x123:
                                goto 0x6e9533a0;
                            case 0x131:
                                goto 0x6e954c30;
                            case 0x119:
                                goto 0x6e9533f0;
                            case 0x129:
                            case 0x12a:
                            case 0x12b:
                            case 0x12c:
                                goto 0x6e954601;
                            case 0x117:
                            case 0x11a:
                            case 0x122:
                                goto 0x6e953370;
                            case 0x116:
                                goto 0x6e9524d6;
                            case 0x115:
                                goto 0x6e952425;
                            case 0x114:
                                goto 0x6e952480;
                            case 0x121:
                                goto 0x6e9533a7;
                            case 45:
                            case 46:
                            case 47:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 65:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                                goto 0x6e951ed0;
                            case 0x112:
                                goto 0x6e952541;
                            case 0x128:
                            case 0x130:
                                goto 0x6e954580;
                            case 0x107:
                                goto 0x6e9521e2;
                            case 0x10c:
                                goto 0x6e952243;
                            case 0xf1:
                                goto 0x6e9522ba;
                            case 0x109:
                                goto 0x6e9521f8;
                            case 0x10f:
                                goto 0x6e952276;
                            case 17:
                                goto 0x6e951f30;
                            case 0xf3:
                            case 0xfb:
                                goto 0x6e952115;
                            case 0x106:
                                goto 0x6e9521d7;
                            case 0xff:
                                goto 0x6e952236;
                            case 0xfe:
                                goto 0x6e95222b;
                            case 0x10d:
                                goto 0x6e952254;
                            case 0xfd:
                                goto 0x6e95221f;
                            case 0xfc:
                                goto 0x6e952214;
                            case 5:
                                goto 0x6e951d60;
                            case 0xf9:
                                goto 0x6e9522ae;
                            case 0xf8:
                                goto 0x6e952298;
                            case 0x10e:
                                goto 0x6e952265;
                            case 0xf0:
                                goto 0x6e9522c6;
                            case 0x103:
                                goto 0x6e9521c2;
                            case 0x108:
                                goto 0x6e9521ed;
                            case 0x8f:
                                goto 0x6e951fb0;
                            case 0x110:
                                goto 0x6e952287;
                            case 0x93:
                                goto 0x6e951d25;
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 97:
                            case 98:
                            case 99:
                            case 100:
                            case 0x65:
                            case 0x66:
                            case 0x67:
                            case 0x68:
                            case 0x69:
                            case 0x6a:
                            case 0x6b:
                            case 0x6c:
                                goto 0x6e951cf0;
                            case 14:
                                goto 0x6e951f70;
                            case 0x100:
                                goto 0x6e9521b6;
                            case 23:
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                            case 30:
                            case 31:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 38:
                            case 39:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                                goto 0x6e952045;
                            case 0xef:
                            case 0xf2:
                            case 0xfa:
                                goto 0x6e9520c0;
                            case 0x111:
                                goto 0x6e952442;
                            case 3:
                            case 22:
                            case 28:
                            case 29:
                            case 32:
                            case 0x91:
                                goto 0x6e951d70;
                            case 18:
                                goto 0x6e951f06;
                            case 15:
                                goto 0x6e951f58;
                            case 0xee:
                                goto 0x6e951db0;
                            case 6:
                                goto 0x6e951d50;
                            case 0x8d:
                                goto 0x6e951e24;
                            case 11:
                            case 12:
                                goto 0x6e951ce0;
                            case 0x104:
                                goto 0x6e9521cd;
                            case 7:
                                goto 0x6e951d40;
                            case 13:
                                goto 0x6e951f86;
                            case 8:
                                goto 0x6e951d30;
                            case 1:
                            case 2:
                            case 4:
                            case 21:
                            case 0x8e:
                            case 0x90:
                            case 0x92:
                            case 0x94:
                            case 0x95:
                            case 0x96:
                            case 0x97:
                            case 0x98:
                            case 0x99:
                            case 0x9a:
                            case 0x9b:
                            case 0x9c:
                            case 0x9d:
                            case 0x9e:
                            case 0x9f:
                            case 0xa0:
                            case 0xa1:
                            case 0xa2:
                            case 0xa3:
                            case 0xa4:
                            case 0xa5:
                            case 0xa6:
                            case 0xa7:
                            case 0xa8:
                            case 0xa9:
                            case 0xaa:
                            case 0xab:
                            case 0xac:
                            case 0xad:
                            case 0xae:
                            case 0xaf:
                            case 0xb0:
                            case 0xb1:
                            case 0xb2:
                            case 0xb3:
                            case 0xb4:
                            case 0xb5:
                            case 0xb6:
                            case 0xb7:
                            case 0xb8:
                            case 0xb9:
                            case 0xba:
                            case 0xbb:
                            case 0xbc:
                            case 0xbd:
                            case 0xbe:
                            case 0xbf:
                            case 0xc0:
                            case 0xc1:
                            case 0xc2:
                            case 0xc3:
                            case 0xc4:
                            case 0xc5:
                            case 0xc6:
                            case 0xc7:
                            case 0xc8:
                            case 0xc9:
                            case 0xca:
                            case 0xcb:
                            case 0xcc:
                            case 0xcd:
                            case 0xce:
                            case 0xcf:
                            case 0xd0:
                            case 0xd1:
                            case 0xd2:
                            case 0xd3:
                            case 0xd4:
                            case 0xd5:
                            case 0xd6:
                            case 0xd7:
                            case 0xd8:
                            case 0xd9:
                            case 0xda:
                            case 0xdb:
                            case 0xdc:
                            case 0xdd:
                            case 0xde:
                            case 0xdf:
                            case 0xe0:
                            case 0xe1:
                            case 0xe2:
                            case 0xe3:
                            case 0xe4:
                            case 0xe5:
                            case 0xe6:
                            case 0xe7:
                            case 0xe8:
                            case 0xe9:
                            case 0xea:
                            case 0xeb:
                            case 0xec:
                            case 0xed:
                            case 0xf4:
                            case 0xf5:
                            case 0xf6:
                            case 0xf7:
                            case 0x101:
                            case 0x102:
                            case 0x105:
                            case 0x10a:
                                goto 0x6e951d20;
                            case 0x118:
                                goto 0x6e9533c3;
                            case 0x10b:
                                goto 0x6e952203;
                            case 0x113:
                                goto 0x6e952520;
                            case 0x12e:
                                goto 0x6e954587;
                            case 0x6d:
                            case 0x6e:
                            case 0x6f:
                            case 0x70:
                            case 0x71:
                            case 0x72:
                            case 0x73:
                            case 0x74:
                            case 0x75:
                            case 0x76:
                            case 0x77:
                            case 0x78:
                            case 0x79:
                            case 0x7a:
                            case 0x7b:
                            case 0x7c:
                            case 0x7d:
                            case 0x7e:
                            case 0x7f:
                            case 0x80:
                            case 0x81:
                            case 0x82:
                            case 0x83:
                            case 0x84:
                            case 0x85:
                            case 0x86:
                            case 0x87:
                            case 0x88:
                            case 0x89:
                            case 0x8a:
                            case 0x8b:
                            case 0x8c:
                                goto 0x6e951e80;
                            case 0:
                            case 9:
                            case 10:
                                goto 0x6e951cb0;
                            }
                        }
                        goto addr_6e951cca_304;
                    case 0x67:
                    case 0x70:
                    case 0x71:
                        edi309 = *reinterpret_cast<void***>(eax89 + 1);
                        ebx82 = ebp55;
                        eax89 = eax89 + 5;
                        addr_6e951cb8_306:
                        if (reinterpret_cast<unsigned char>(ebx82) > reinterpret_cast<unsigned char>(63)) 
                            goto addr_6e951d20_289;
                        ebp55 = ebx82 + 1;
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebx82) * 4 + 48) = edi309;
                        continue;
                    case 0x6a:
                    case 0x7d:
                    case 0x83:
                    case 0x84:
                    case 0x87:
                    case 0xf8:
                        if (!ebp55) 
                            goto addr_6e951d20_289;
                        ebx82 = ebp55 + 0xffffffff;
                        edi310 = *reinterpret_cast<void****>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebx82) * 4 + 48);
                        if (*reinterpret_cast<unsigned char*>(&edx77) == 31) {
                            edi309 = reinterpret_cast<void**>(-reinterpret_cast<uint32_t>(edi310));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx77) <= 31) {
                                if (*reinterpret_cast<unsigned char*>(&edx77) == 6) {
                                    edi309 = *edi310;
                                    eax89 = esi73;
                                    goto addr_6e951cb8_306;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&edx77) != 25) 
                                        goto addr_6e951d20_289;
                                    eax89 = esi73;
                                    edx311 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi310) >> 31);
                                    edi309 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edi310) ^ edx311) - edx311);
                                    goto addr_6e951cb8_306;
                                }
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx77) == 35) {
                                    eax89 = esi73;
                                    ebp55 = reinterpret_cast<void**>(0);
                                    ecx68 = reinterpret_cast<void**>(0);
                                    esi73 = ebx82;
                                    do {
                                        ++eax89;
                                        ebx312 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                                        edx313 = (ebx312 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                                        ecx68 = ecx68 + 7;
                                        ebp55 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp55) | edx313);
                                    } while (*reinterpret_cast<signed char*>(&ebx312) < 0);
                                    ebx82 = esi73;
                                    edi309 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi310) + reinterpret_cast<unsigned char>(ebp55));
                                    goto addr_6e951cb8_306;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&edx77) == 0x94) {
                                        edx314 = eax89 + 2;
                                        eax315 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 1));
                                        if (*reinterpret_cast<unsigned char*>(&eax315) == 2) {
                                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*edi310)));
                                            eax89 = edx314;
                                            goto addr_6e951cb8_306;
                                        } else {
                                            if (*reinterpret_cast<unsigned char*>(&eax315) <= 2) {
                                                if (*reinterpret_cast<unsigned char*>(&eax315) != 1) 
                                                    goto addr_6e951d20_289;
                                                edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi310)));
                                                eax89 = edx314;
                                                goto addr_6e951cb8_306;
                                            } else {
                                                if (*reinterpret_cast<unsigned char*>(&eax315) == 4) 
                                                    goto addr_6e9521ad_327;
                                                if (*reinterpret_cast<unsigned char*>(&eax315) != 8) 
                                                    goto addr_6e951d20_289;
                                                addr_6e9521ad_327:
                                                edi309 = *edi310;
                                                eax89 = edx314;
                                                goto addr_6e951cb8_306;
                                            }
                                        }
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&edx77) != 32) 
                                            goto addr_6e951d20_289;
                                        edi309 = reinterpret_cast<void**>(~reinterpret_cast<uint32_t>(edi310));
                                        eax89 = esi73;
                                        goto addr_6e951cb8_306;
                                    }
                                }
                            }
                        }
                    case 0x6c:
                        edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 1))));
                        ebx82 = ebp55;
                        eax89 = eax89 + 2;
                        goto addr_6e951cb8_306;
                    case 0x6d:
                        edi309 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax89 + 1))));
                        ebx82 = ebp55;
                        eax89 = eax89 + 2;
                        goto addr_6e951cb8_306;
                    case 0x6e:
                        edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax89 + 1))));
                        ebx82 = ebp55;
                        eax89 = eax89 + 3;
                        goto addr_6e951cb8_306;
                    case 0x6f:
                        edi309 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax89 + 1))));
                        ebx82 = ebp55;
                        eax89 = eax89 + 3;
                        goto addr_6e951cb8_306;
                    case 0x72:
                    case 0x73:
                        edi309 = *reinterpret_cast<void***>(eax89 + 1);
                        ebx82 = ebp55;
                        eax89 = eax89 + 9;
                        goto addr_6e951cb8_306;
                    case 0x74:
                        eax89 = esi73;
                        edi309 = reinterpret_cast<void**>(0);
                        ecx68 = reinterpret_cast<void**>(0);
                        esi73 = esi73;
                        do {
                            ++eax89;
                            ebx316 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                            edx317 = (ebx316 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                            ecx68 = ecx68 + 7;
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi309) | edx317);
                        } while (*reinterpret_cast<signed char*>(&ebx316) < 0);
                        ebx82 = ebp55;
                        goto addr_6e951cb8_306;
                    case 0x75:
                        esp318 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp318->f0 = reinterpret_cast<void**>(0x6e951f7b);
                        eax89 = fun_6e950b70(esp318->f4, esp318->f8);
                        esp34 = reinterpret_cast<struct s13*>(&esp318->f4);
                        ebx82 = ebp55;
                        edi309 = esp34->f44;
                        goto addr_6e951cb8_306;
                    case 0x76:
                        if (!ebp55) 
                            goto addr_6e951d20_289;
                        edi309 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebp55) * 4 + 44);
                        addr_6e951f64_342:
                        ebx82 = ebp55;
                        eax89 = esi73;
                        goto addr_6e951cb8_306;
                    case 0x78:
                        if (reinterpret_cast<signed char>(ebp55) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_289;
                        edi309 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebp55) * 4 + 40);
                        ebx82 = ebp55;
                        eax89 = esi73;
                        goto addr_6e951cb8_306;
                    case 0x79:
                        eax319 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 1))));
                        ecx68 = ebp55 + 0xffffffff;
                        esp34->f40 = eax319;
                        if (reinterpret_cast<signed char>(eax319) >= reinterpret_cast<signed char>(ecx68)) 
                            goto addr_6e951d20_289;
                        ecx68 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) - reinterpret_cast<unsigned char>(eax319));
                        ebx82 = ebp55;
                        edi309 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ecx68) * 4 + 48);
                        eax89 = eax89 + 2;
                        goto addr_6e951cb8_306;
                    case 0x7e:
                    case 0x7f:
                    case 0x80:
                    case 0x81:
                    case 0x82:
                    case 0x85:
                    case 0x86:
                    case 0x88:
                    case 0x89:
                    case 0x8a:
                    case 0x8b:
                    case 0x8d:
                    case 0x8e:
                    case 0x8f:
                    case 0x90:
                    case 0x91:
                    case 0x92:
                        if (reinterpret_cast<signed char>(ebp55) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_289;
                        edx320 = reinterpret_cast<uint32_t>(edx77 - 26);
                        ecx68 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebp55) * 4 + 44);
                        ebx82 = ebp55 + 0xfffffffe;
                        eax89 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebx82) * 4 + 48);
                        if (*reinterpret_cast<unsigned char*>(&edx320) > 20) 
                            goto addr_6e951d20_289;
                        switch (*reinterpret_cast<unsigned char*>(&edx320)) {
                        case 0:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) & reinterpret_cast<unsigned char>(eax89));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 1:
                            __asm__("cdq ");
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax89) / reinterpret_cast<signed char>(ecx68));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 2:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) - reinterpret_cast<unsigned char>(ecx68));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 3:
                            edx321 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) % reinterpret_cast<unsigned char>(ecx68));
                            eax89 = esi73;
                            edi309 = edx321;
                            goto addr_6e951cb8_306;
                        case 4:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) * reinterpret_cast<unsigned char>(eax89));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 7:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) | reinterpret_cast<unsigned char>(eax89));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 8:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) + reinterpret_cast<unsigned char>(eax89));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 10:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) << *reinterpret_cast<unsigned char*>(&ecx68));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 11:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax89) >> *reinterpret_cast<unsigned char*>(&ecx68));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 12:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax89) >> *reinterpret_cast<unsigned char*>(&ecx68));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 13:
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx68) ^ reinterpret_cast<unsigned char>(eax89));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 15:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax89 == ecx68))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 16:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax89) >= reinterpret_cast<signed char>(ecx68)))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 17:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax89) > reinterpret_cast<signed char>(ecx68)))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 18:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax89) <= reinterpret_cast<signed char>(ecx68)))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 19:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax89) < reinterpret_cast<signed char>(ecx68)))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 20:
                            edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax89 != ecx68))));
                            eax89 = esi73;
                            goto addr_6e951cb8_306;
                        case 53:
                            goto 0x6e954c30;
                        case 49:
                            goto 0x6e954590;
                        case 44:
                        case 52:
                            goto 0x6e954580;
                        case 41:
                            goto 0x6e9545d0;
                        case 40:
                        case 43:
                        case 51:
                            goto 0x6e954550;
                        case 28:
                            goto 0x6e9533c3;
                        case 42:
                            goto 0x6e9545f6;
                        case 26:
                            goto 0x6e9524d6;
                        case 27:
                        case 30:
                        case 38:
                            goto 0x6e953370;
                        case 25:
                            goto 0x6e952425;
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                            goto 0x6e954601;
                        case 21:
                            goto 0x6e952442;
                        case 24:
                            goto 0x6e952480;
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                            goto 0x6e953400;
                        case 37:
                            goto 0x6e9533a7;
                        case 29:
                            goto 0x6e9533f0;
                        case 5:
                        case 6:
                        case 9:
                        case 14:
                            goto 0x6e951d20;
                        case 36:
                            goto 0x6e9533b0;
                        case 31:
                        case 39:
                            goto 0x6e9533a0;
                        case 23:
                            goto 0x6e952520;
                        case 50:
                            goto 0x6e954587;
                        case 22:
                            goto 0x6e952541;
                        }
                    case 0x94:
                    case 0x95:
                    case 0x96:
                    case 0x97:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9c:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                    case 0xa3:
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                    case 0xa7:
                    case 0xa8:
                    case 0xa9:
                    case 0xaa:
                    case 0xab:
                    case 0xac:
                    case 0xad:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                        edi309 = edi78 - 48;
                        ebx82 = ebp55;
                        eax89 = esi73;
                        goto addr_6e951cb8_306;
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                        eax322 = reinterpret_cast<struct s26*>(edi78 + 0xffffffb0);
                        if (reinterpret_cast<int32_t>(eax322) > reinterpret_cast<int32_t>(17)) 
                            goto addr_6e951d20_289;
                        ebx82 = esp34->f16;
                        edi309 = *reinterpret_cast<void***>(ebx82 + reinterpret_cast<uint32_t>(eax322) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(ebx82 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<uint32_t>(eax322) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax322) + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_289;
                            edi309 = *reinterpret_cast<void***>(edi309);
                            goto addr_6e951f64_342;
                        }
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xee:
                    case 0xef:
                    case 0xf0:
                    case 0xf1:
                    case 0xf2:
                    case 0xf3:
                        edi323 = reinterpret_cast<struct s27*>(edi78 - 0x70);
                        esp324 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp324->f0 = reinterpret_cast<void**>(0x6e951e8e);
                        eax89 = fun_6e950b70(esp324->f4, esp324->f8);
                        esp34 = reinterpret_cast<struct s13*>(&esp324->f4);
                        if (reinterpret_cast<int32_t>(edi323) > reinterpret_cast<int32_t>(17)) 
                            goto addr_6e951d20_289;
                        esi73 = esp34->f16;
                        ecx68 = *reinterpret_cast<void***>(esi73 + reinterpret_cast<uint32_t>(edi323) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(esi73 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi73) + reinterpret_cast<uint32_t>(edi323) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi323) + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_289;
                            ecx68 = *reinterpret_cast<void***>(ecx68);
                        }
                        ebx82 = ebp55;
                        edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp34->f40) + reinterpret_cast<unsigned char>(ecx68));
                        goto addr_6e951cb8_306;
                    case 0xf4:
                        eax89 = esi73;
                        ecx68 = reinterpret_cast<void**>(0);
                        esi73 = reinterpret_cast<void**>(0);
                        do {
                            ++eax89;
                            ebx82 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff))));
                            edx325 = (reinterpret_cast<unsigned char>(ebx82) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                            ecx68 = ecx68 + 7;
                            esi73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi73) | edx325);
                        } while (*reinterpret_cast<signed char*>(&ebx82) < reinterpret_cast<signed char>(0));
                        if (reinterpret_cast<signed char>(esi73) > reinterpret_cast<signed char>(17)) 
                            goto addr_6e951d20_289;
                        ebx82 = esp34->f16;
                        edi309 = *reinterpret_cast<void***>(ebx82 + reinterpret_cast<unsigned char>(esi73) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(ebx82 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx82) + reinterpret_cast<unsigned char>(esi73) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi73 + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_289;
                        } else {
                            addr_6e951e76_382:
                            ebx82 = ebp55;
                            goto addr_6e951cb8_306;
                        }
                        addr_6e951e74_383:
                        edi309 = *reinterpret_cast<void***>(edi309);
                        goto addr_6e951e76_382;
                    case 0xf6:
                        ebx82 = reinterpret_cast<void**>(0);
                        ecx68 = reinterpret_cast<void**>(0);
                        do {
                            ++esi73;
                            edx326 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi73 + 0xffffffff));
                            eax327 = (edx326 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                            ecx68 = ecx68 + 7;
                            ebx82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) | eax327);
                        } while (*reinterpret_cast<signed char*>(&edx326) < 0);
                        esp328 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp328->f0 = reinterpret_cast<void**>(0x6e951fd6);
                        eax89 = fun_6e950b70(esp328->f4, esp328->f8);
                        esp34 = reinterpret_cast<struct s13*>(&esp328->f4);
                        if (reinterpret_cast<signed char>(ebx82) > reinterpret_cast<signed char>(17)) 
                            goto addr_6e951d20_289;
                        esi73 = esp34->f16;
                        edi329 = *reinterpret_cast<void***>(esi73 + reinterpret_cast<unsigned char>(ebx82) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(esi73 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi73) + reinterpret_cast<unsigned char>(ebx82) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx82 + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_289;
                            edi329 = *reinterpret_cast<void***>(edi329);
                        }
                        edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi329) + reinterpret_cast<unsigned char>(esp34->f40));
                        ebx82 = ebp55;
                        goto addr_6e951cb8_306;
                    case 0x155:
                        esi73 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 1))));
                        ebx82 = esi73;
                        if (*reinterpret_cast<unsigned char*>(&ebx82) == 0xff) 
                            goto addr_6e951d20_289;
                        ebx82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx82) & 0x70);
                        if (*reinterpret_cast<unsigned char*>(&ebx82) == 32) {
                            esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 84);
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&ebx82) <= 32) {
                                if (!*reinterpret_cast<unsigned char*>(&ebx82)) 
                                    goto addr_6e95214b_396;
                                if (*reinterpret_cast<unsigned char*>(&ebx82) != 16) 
                                    goto addr_6e951d20_289; else 
                                    goto addr_6e95214b_396;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ebx82) == 64) {
                                    esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 92);
                                } else {
                                    esi73 = esi73;
                                    if (*reinterpret_cast<unsigned char*>(&ebx82) == 80) {
                                        addr_6e95214b_396:
                                        esp34->f24 = reinterpret_cast<void**>(0);
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&ebx82) != 48) 
                                            goto addr_6e951d20_289;
                                        esp34->f24 = *reinterpret_cast<void***>(esp34->f16 + 88);
                                    }
                                }
                            }
                        }
                        edx330 = esi73;
                        edi78 = eax89 + 2;
                        esp34->f20 = edi78;
                        if (*reinterpret_cast<signed char*>(&edx330) == 80) {
                            ebx82 = ebp55;
                            eax331 = reinterpret_cast<struct s28*>(reinterpret_cast<uint32_t>(eax89 + 5) & 0xfffffffc);
                            edi309 = eax331->f0;
                            eax89 = reinterpret_cast<void**>(&eax331->f4);
                            goto addr_6e951cb8_306;
                        } else {
                            edx332 = reinterpret_cast<unsigned char>(esi73) & 15;
                            if (*reinterpret_cast<unsigned char*>(&edx332) > 12) 
                                goto addr_6e951d20_289;
                            goto *reinterpret_cast<int32_t*>(*reinterpret_cast<unsigned char*>(&edx332) * 4 + 0x6e957910);
                        }
                    case 0x156:
                    case 0x159:
                    case 0x161:
                        edi309 = *reinterpret_cast<void***>(eax89 + 2);
                        eax89 = eax89 + 6;
                        addr_6e9520c6_408:
                        if (!edi309) 
                            goto addr_6e951e76_382;
                        edx333 = esp34->f24;
                        ebx334 = esi73;
                        if (*reinterpret_cast<unsigned char*>(&ebx82) == 16) {
                            edx333 = esp34->f20;
                        }
                        edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi309) + reinterpret_cast<unsigned char>(edx333));
                        if (*reinterpret_cast<signed char*>(&ebx334) < 0) 
                            goto addr_6e951e74_383;
                        ebx82 = ebp55;
                        goto addr_6e951cb8_306;
                    case 0x157:
                        eax89 = esp34->f20;
                        edi309 = reinterpret_cast<void**>(0);
                        ecx68 = reinterpret_cast<void**>(0);
                        esp34->f28 = ebp55;
                        ebp335 = ebx82;
                        do {
                            ++eax89;
                            ebx336 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax89 + 0xffffffff));
                            edx337 = (ebx336 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx68);
                            ecx68 = ecx68 + 7;
                            edi309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi309) | edx337);
                        } while (*reinterpret_cast<signed char*>(&ebx336) < 0);
                        ebx82 = ebp335;
                        ebp55 = reinterpret_cast<void**>(1);
                        goto addr_6e9520c6_408;
                    case 0x158:
                        edi309 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax89 + 2))));
                        eax89 = eax89 + 4;
                        goto addr_6e9520c6_408;
                    case 0x15a:
                    case 0x162:
                        edi309 = *reinterpret_cast<void***>(eax89 + 2);
                        eax89 = eax89 + 10;
                        goto addr_6e9520c6_408;
                    case 0x15f:
                        esp338 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp338->f0 = reinterpret_cast<void**>(0x6e9522a5);
                        eax89 = fun_6e950b70(esp338->f4, esp338->f8);
                        esp34 = reinterpret_cast<struct s13*>(&esp338->f4);
                        edi309 = esp34->f44;
                        goto addr_6e9520c6_408;
                    case 0x160:
                        edi309 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax89 + 2))));
                        eax89 = eax89 + 4;
                        goto addr_6e9520c6_408;
                    }
                }
                addr_6e951cca_304:
            } while (!ebp55);
            goto addr_6e951cce_420;
        case 0x17f:
            ebx339 = ecx68;
            ebp340 = reinterpret_cast<void**>(0);
            ecx341 = 0;
            esi73 = esi73;
            do {
                ++ebx339;
                edx342 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx339 + 0xffffffff));
                eax343 = (edx342 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx341);
                ecx341 = ecx341 + 7;
                ebp340 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp340) | eax343);
            } while (*reinterpret_cast<signed char*>(&edx342) < 0);
            edx344 = ebp340;
            goto addr_6e953375_424;
        case 0x180:
            edx344 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx68))));
            goto addr_6e953375_424;
        case 0x182:
        case 0x18a:
            edx344 = *reinterpret_cast<void***>(ecx68);
            goto addr_6e953375_424;
        case 0x183:
        case 0x184:
        case 0x185:
        case 0x186:
            esp345 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp345->f0 = reinterpret_cast<void**>(0x6e953405);
            fun_6e955970(ecx68, esp345->f4, esp345->f8, 0, esp345->f16, esp345->f20, esp345->f24, esp345->f28, esp345->f32);
            esp346 = reinterpret_cast<struct s13*>(&esp345->f4);
            *esp346->f64 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx68 + 3) & 0xfffffffc);
            goto *reinterpret_cast<int32_t*>(&esp346->f44 + 4 + 4 + 4 + 4);
        case 0x187:
            esp347 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp347->f0 = reinterpret_cast<void**>(0x6e9533bb);
            fun_6e953120(esp347->f4);
            esp34 = reinterpret_cast<struct s13*>(&esp347->f4);
            edx344 = esp34->f28;
            goto addr_6e953375_424;
        case 0x188:
            edx344 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx68))));
            goto addr_6e953375_424;
        case 0x18b:
        case 0x18e:
        case 0x196:
            edx348 = *reinterpret_cast<void***>(ecx68);
            goto addr_6e954555_432;
        case 0x18c:
            ebx349 = ecx68;
            edx348 = reinterpret_cast<void**>(0);
            ecx350 = 0;
            ebp351 = eax89;
            do {
                ++ebx349;
                eax352 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx349 + 0xffffffff));
                esi353 = (eax352 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx350);
                ecx350 = ecx350 + 7;
                edx348 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx348) | esi353);
            } while (*reinterpret_cast<signed char*>(&eax352) < 0);
            eax89 = ebp351;
            goto addr_6e954555_432;
        case 0x18d:
            edx348 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx68))));
            goto addr_6e954555_432;
        case 0x18f:
        case 0x197:
            edx348 = *reinterpret_cast<void***>(ecx68);
            goto addr_6e954555_432;
        case 0x190:
        case 0x191:
        case 0x192:
        case 0x193:
            esp354 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp354->f0 = reinterpret_cast<void**>(0x6e954606);
            fun_6e955970(ecx68, esp354->f4, esp354->f8, 0, esp354->f16, esp354->f20, esp354->f24, esp354->f28, esp354->f32);
            esp355 = reinterpret_cast<struct s13*>(&esp354->f4);
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp355->f48)) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx68 + 3) & 0xfffffffc);
            goto *reinterpret_cast<int32_t*>(&esp355->f28 + 4 + 4 + 4 + 4);
        case 0x194:
            ebx349 = ecx68;
            edx348 = reinterpret_cast<void**>(0);
            ecx356 = 0;
            ebp357 = eax89;
            do {
                ++ebx349;
                eax358 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx349 + 0xffffffff));
                esi359 = (eax358 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx356);
                ecx356 = ecx356 + 7;
                edx348 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx348) | esi359);
            } while (*reinterpret_cast<signed char*>(&eax358) < 0);
            eax89 = ebp357;
            if (ecx356 <= 31 && eax358 & 64) {
                edx348 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx348) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx356));
                goto addr_6e954555_432;
            }
        case 0x195:
            edx348 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx68))));
            goto addr_6e954555_432;
        case 0x198:
            esp360 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp360->f0 = ebx82;
            esp361 = reinterpret_cast<struct s29*>(reinterpret_cast<uint32_t>(esp360) - 24);
            zf362 = g6e956014 == 2;
            if (!zf362) {
                g6e956014 = 2;
            }
            if (0) {
                ebx363 = reinterpret_cast<int32_t*>(0x6e960028);
                if (!1) {
                    do {
                        eax364 = *ebx363;
                        if (eax364) {
                            esp365 = reinterpret_cast<struct s30*>(reinterpret_cast<uint32_t>(esp361) - 4);
                            esp365->f0 = 0x6e954c78;
                            eax364(esp365->f4);
                            esp361 = reinterpret_cast<struct s29*>(&esp365->f4);
                        }
                        ++ebx363;
                    } while (!reinterpret_cast<int1_t>(ebx363 == 0x6e960028));
                    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp361) + 24 + 4);
                }
            } else {
                if (0) {
                    eax366 = esp361->f40;
                    esp361->f4 = 1;
                    esp361->f8 = eax366;
                    esp361->f0 = esp361->f32;
                    esp367 = reinterpret_cast<struct s30*>(reinterpret_cast<uint32_t>(esp361) - 4);
                    esp367->f0 = 0x6e954cac;
                    fun_6e955550(esp367->f4, 1, esp367->f12);
                    esp361 = reinterpret_cast<struct s29*>(&esp367->f4);
                }
            }
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp361) + 24 + 4);
            addr_6e951cce_420:
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + 0x13c + 4 + 4 + 4 + 4);
            addr_6e951932_259:
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + 76 + 4 + 4 + 4 + 4);
            addr_6e951c00_277:
            eax368 = *reinterpret_cast<struct s31**>(reinterpret_cast<uint32_t>(ebx82 + 3) & 0xfffffffc);
            goto addr_6e951880_458;
        case 0x17e:
        case 0x181:
        case 0x189:
            goto 0x6e953370;
        case 0x17d:
            goto 0x6e9524d6;
        case 0x17b:
            goto 0x6e952480;
        case 0x179:
            goto 0x6e952541;
        case 0x178:
            goto 0x6e952442;
        case 0x176:
            goto 0x6e952276;
        case 0x175:
            goto 0x6e952265;
        case 0x174:
            goto 0x6e952254;
        case 0x172:
            goto 0x6e952203;
        case 0x166:
            goto 0x6e952236;
        case 0x165:
            goto 0x6e95222b;
        case 0x164:
            goto 0x6e95221f;
        case 0x170:
            goto 0x6e9521f8;
        case 82:
        case 83:
        case 84:
        case 85:
        case 95:
        case 96:
        case 97:
        case 98:
            goto 0x6e951746;
        case 0x8c:
            goto 0x6e952020;
        case 0x16f:
            goto 0x6e9521ed;
        case 0x77:
            goto 0x6e951f46;
        case 0x167:
            goto 0x6e9521b6;
        case 79:
            goto 0x6e9519c1;
        case 87:
            goto 0x6e9519b5;
        case 0x16d:
            goto 0x6e9521d7;
        case 0x173:
            goto 0x6e952243;
        case 0x17c:
            goto 0x6e952425;
        case 0x16e:
            goto 0x6e9521e2;
        case 0x17a:
            goto 0x6e952520;
        case 86:
            goto 0x6e95199d;
        case 0x177:
            goto 0x6e952287;
        case 0x7b:
            goto 0x6e952070;
        case 81:
        case 89:
            goto 0x6e951840;
        case 0x7a:
            goto 0x6e951ee0;
        case 0x16b:
            goto 0x6e9521cd;
        case 0x93:
            goto 0x6e952010;
        case 0x16a:
            goto 0x6e9521c2;
        case 78:
            goto 0x6e9519cd;
        case 0x163:
            goto 0x6e952214;
        }
    } else {
        if (!eax71) {
            if (v40) {
                __asm__("bsr eax, [esp+0x10]");
                v369 = (reinterpret_cast<unsigned char>(v40) ^ 31) + 32;
            } else {
                if (!v39) {
                    __asm__("bsr eax, [esp+0x1c]");
                    v369 = (reinterpret_cast<unsigned char>(v39) ^ 31) + 96;
                } else {
                    __asm__("bsr eax, [esp+0x18]");
                    v369 = (reinterpret_cast<unsigned char>(v39) ^ 31) + 64;
                }
            }
        } else {
            __asm__("bsr eax, eax");
            v369 = reinterpret_cast<unsigned char>(eax71) ^ 31;
        }
        edx370 = v369 - 12;
        ebx371 = v369 + 19;
        if (reinterpret_cast<int32_t>(edx370) >= reinterpret_cast<int32_t>(0)) {
            ebx371 = edx370;
        }
        eax372 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx370) >> 31) >> 27;
        ebx373 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx371) >> 5);
        edx374 = (edx370 + eax372 & 31) - eax372;
        v375 = ebx373;
        v376 = edx374;
        if (!edx374) 
            goto addr_6e94b970_469; else 
            goto addr_6e94b2ac_470;
    }
    edx344 = *reinterpret_cast<void***>(ecx68);
    addr_6e953375_424:
    if (edx344) {
        eax377 = reinterpret_cast<unsigned char>(esi73) & 0x70;
        eax378 = esi73;
        if (*reinterpret_cast<signed char*>(&eax377) != 16) {
            edi78 = esp34->f12;
        }
        edx344 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx344) + reinterpret_cast<unsigned char>(edi78));
        if (*reinterpret_cast<signed char*>(&eax378) < 0) {
            edx344 = *reinterpret_cast<void***>(edx344);
        }
    }
    *esp34->f64 = edx344;
    goto *reinterpret_cast<int32_t*>(&esp34->f44 + 4 + 4 + 4 + 4);
    addr_6e94b785_51:
    edx379 = reinterpret_cast<void*>(0x7fff);
    addr_6e94b39a_477:
    ecx380 = *reinterpret_cast<uint16_t*>(&v69 + 2);
    *reinterpret_cast<uint16_t*>(&v381) = *reinterpret_cast<uint16_t*>(&eax117);
    *reinterpret_cast<uint16_t*>(&ecx380) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx380) & 0x8000);
    ecx382 = ecx380 | reinterpret_cast<uint32_t>(edx379);
    *reinterpret_cast<uint16_t*>(&v381 + 2) = *reinterpret_cast<uint16_t*>(&ecx382);
    *reinterpret_cast<uint16_t*>(&ecx382) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx382) >> 8);
    ecx383 = ecx382 & 0x7f | static_cast<uint32_t>(v45) << 7;
    *reinterpret_cast<signed char*>(&v381 + 3) = *reinterpret_cast<signed char*>(&ecx383);
    if (v56) {
        fun_6e9478b0(v56);
    }
    *reinterpret_cast<void***>(a1) = ebx120;
    *reinterpret_cast<void***>(a1 + 4) = edi119;
    *reinterpret_cast<void***>(a1 + 8) = esi118;
    *reinterpret_cast<void***>(a1 + 12) = v381;
    goto v33;
    addr_6e954555_432:
    if (edx348) {
        ecx384 = reinterpret_cast<unsigned char>(eax89) & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx384) != 16) {
            edi78 = esp34->f12;
        }
        edx348 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx348) + reinterpret_cast<unsigned char>(edi78));
        if (*reinterpret_cast<signed char*>(&eax89) < 0) {
            edx348 = *reinterpret_cast<void***>(edx348);
        }
    }
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp34->f48)) = edx348;
    goto *reinterpret_cast<int32_t*>(&esp34->f28 + 4 + 4 + 4 + 4);
    addr_6e94b834_43:
    ecx385 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v90) + 0x3fff);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx385) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx385 == 0)) {
        ebp386 = 0xffffc002 - reinterpret_cast<uint32_t>(v90);
        if (reinterpret_cast<int32_t>(ebp386) > reinterpret_cast<int32_t>(0x74)) {
            edi119 = v112;
            ebx120 = v111;
            esi118 = v109;
            if (reinterpret_cast<unsigned char>(edi119) | reinterpret_cast<unsigned char>(ebx120) | reinterpret_cast<unsigned char>(esi118) | reinterpret_cast<unsigned char>(v110)) {
                v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 32);
                if (0) {
                    ebx120 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<unsigned char*>(&ebx120) = reinterpret_cast<uint1_t>(!!v88);
                } else {
                    ebx120 = reinterpret_cast<void**>(0);
                    if (0) {
                        ebx120 = reinterpret_cast<void**>(0);
                        *reinterpret_cast<unsigned char*>(&ebx120) = reinterpret_cast<uint1_t>(v88 == 0);
                    }
                }
                esi118 = reinterpret_cast<void**>(0);
                edi119 = reinterpret_cast<void**>(0);
            }
            edx379 = reinterpret_cast<void*>(0);
            v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 16);
            eax387 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v88)) & 1;
            v45 = *reinterpret_cast<unsigned char*>(&eax387);
            eax117 = 0;
            goto addr_6e94b39a_477;
        } else {
            eax388 = ebp386 + 31;
            if (reinterpret_cast<int32_t>(ebp386) >= reinterpret_cast<int32_t>(0)) {
                eax388 = ebp386;
            }
            edx389 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebp386) >> 31) >> 27;
            eax390 = reinterpret_cast<int32_t>(eax388) >> 5;
            ebp391 = (ebp386 + edx389 & 31) - edx389;
            if (reinterpret_cast<uint1_t>(eax390 < 0) | reinterpret_cast<uint1_t>(eax390 == 0)) {
                esi392 = 0;
                edx393 = 0;
            } else {
                edx394 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + 0x70);
                esi392 = 0;
                ecx395 = edx394 + eax390 * 4;
                do {
                    esi392 = esi392 | reinterpret_cast<unsigned char>(a10);
                    edx394 = edx394 + 4;
                } while (edx394 != ecx395);
                edx393 = eax390;
            }
            if (ebp391) {
                edx396 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + edx393 * 4 + 0x70);
                v397 = 32 - ebp391;
                ecx398 = *reinterpret_cast<unsigned char*>(&v397);
                esi392 = esi392 | edx396 << *reinterpret_cast<unsigned char*>(&ecx398);
                edx399 = 3 - eax390;
                v400 = edx399;
                if (!edx399) {
                    edx401 = 1;
                } else {
                    edx402 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x70);
                    v403 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx402) + edx399 * 4);
                    edi404 = esi392;
                    do {
                        edx402 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx402) + 4);
                    } while (edx402 != v403);
                    esi392 = edi404;
                    edx401 = 4 - eax390;
                }
                ecx405 = ebp391;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + v400 * 4 + 0x70) = reinterpret_cast<unsigned char>(v110) >> *reinterpret_cast<signed char*>(&ecx405);
            } else {
                edx406 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x70);
                ecx407 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + (3 - eax390) * 4 + 0x74);
                do {
                    edx406 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx406) + 4);
                } while (edx406 != ecx407);
                edx401 = 4 - eax390;
            }
            while (edx401 <= 3) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + edx401 * 4 + 0x70) = 0;
                ++edx401;
            }
            eax408 = 0;
            *reinterpret_cast<unsigned char*>(&eax408) = reinterpret_cast<uint1_t>(!!esi392);
            eax409 = reinterpret_cast<void**>(eax408 | reinterpret_cast<unsigned char>(v111));
            v410 = eax409;
            if (!(*reinterpret_cast<unsigned char*>(&eax409) & 7)) 
                goto addr_6e94bbc6_513;
            v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 32);
            if (!0) 
                goto addr_6e94bbb2_515;
        }
    } else {
        edx411 = v111;
        if (!(*reinterpret_cast<unsigned char*>(&edx411) & 7)) 
            goto addr_6e94b8d0_517;
        v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 32);
        if (0) 
            goto addr_6e94bae0_519; else 
            goto addr_6e94b86b_520;
    }
    if (v88) {
        addr_6e94be5b_522:
        eax412 = eax409 + 8;
        v410 = eax412;
        below_or_equal413 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax412) <= reinterpret_cast<unsigned char>(7));
    } else {
        goto addr_6e94bbc6_513;
    }
    addr_6e94be18_524:
    edx414 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal413)));
    eax415 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v112) + reinterpret_cast<unsigned char>(edx414));
    v112 = eax415;
    edx416 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx414) > reinterpret_cast<unsigned char>(eax415)))));
    eax417 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v109) + reinterpret_cast<unsigned char>(edx416));
    v109 = eax417;
    eax418 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx416) > reinterpret_cast<unsigned char>(eax417))) + reinterpret_cast<unsigned char>(v110));
    v110 = eax418;
    addr_6e94bbca_525:
    if (!(reinterpret_cast<unsigned char>(eax418) & 0x80000)) {
        eax419 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x70);
        ebx420 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x7c);
        do {
            eax419 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax419) + 4);
        } while (eax419 != ebx420);
        edx379 = reinterpret_cast<void*>(0);
        ebx120 = v410;
        edi119 = v112;
        esi118 = v109;
        eax117 = reinterpret_cast<unsigned char>(v110) >> 3;
    } else {
        v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 32);
        edx379 = reinterpret_cast<void*>(1);
        eax117 = 0;
        esi118 = reinterpret_cast<void**>(0);
        edi119 = reinterpret_cast<void**>(0);
        ebx120 = reinterpret_cast<void**>(0);
    }
    if (*reinterpret_cast<unsigned char*>(&v56) & 32 || !1) {
        v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 16);
    }
    ecx421 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v88)) & 1;
    v45 = *reinterpret_cast<unsigned char*>(&ecx421);
    goto addr_6e94b39a_477;
    addr_6e94bbb2_515:
    if (0) {
        if (v88) 
            goto addr_6e94bbc6_513; else 
            goto addr_6e94be5b_522;
    }
    if (!1 || (reinterpret_cast<unsigned char>(eax409) & 15) == 4) {
        addr_6e94bbc6_513:
        eax418 = v110;
        goto addr_6e94bbca_525;
    } else {
        eax422 = eax409 + 4;
        v410 = eax422;
        below_or_equal413 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax422) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e94be18_524;
    }
    addr_6e94bae0_519:
    if (!v88) {
        addr_6e94b8d0_517:
        eax423 = v110;
    } else {
        addr_6e94baec_536:
        edx424 = edx411 + 8;
        v111 = edx424;
        below_or_equal425 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx424) <= reinterpret_cast<unsigned char>(7));
        goto addr_6e94b88a_537;
    }
    addr_6e94b8d4_538:
    if (reinterpret_cast<unsigned char>(eax423) & 0x100000) {
        v110 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax423) & 0xffefffff);
        ecx385 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(v90) + 0x4000);
    }
    eax426 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x70);
    esi427 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp34) + 0x7c);
    do {
        eax426 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax426) + 4);
    } while (eax426 != esi427);
    eax117 = reinterpret_cast<unsigned char>(v110) >> 3;
    if (reinterpret_cast<int32_t>(ecx385) > reinterpret_cast<int32_t>(0x7ffe)) {
        *reinterpret_cast<uint16_t*>(&eax117) = 0;
        if (0) {
            if (!v88) {
                addr_6e94ba18_545:
                edx379 = reinterpret_cast<void*>(0x7ffe);
                eax117 = 0xffffffff;
                ebx120 = reinterpret_cast<void**>(0xffffffff);
            } else {
                addr_6e94bacd_546:
                edx379 = reinterpret_cast<void*>(0x7fff);
                eax117 = 0;
                ebx120 = reinterpret_cast<void**>(0);
            }
        } else {
            if (0) {
                if (!v88) 
                    goto addr_6e94bacd_546;
                goto addr_6e94ba18_545;
            } else {
                if (!1) 
                    goto addr_6e94ba18_545;
                edx379 = reinterpret_cast<void*>(0x7fff);
                ebx120 = reinterpret_cast<void**>(0);
            }
        }
        esi118 = ebx120;
        edi119 = ebx120;
        v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 40);
        ecx428 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v88)) & 1;
        v45 = *reinterpret_cast<unsigned char*>(&ecx428);
        goto addr_6e94b39a_477;
    } else {
        edx379 = ecx385;
        ebx120 = v111;
        *reinterpret_cast<uint16_t*>(&edx379) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx379) & 0x7fff);
        edi119 = v112;
        esi118 = v109;
        ecx429 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v88)) & 1;
        v45 = *reinterpret_cast<unsigned char*>(&ecx429);
        goto addr_6e94b39a_477;
    }
    addr_6e94b88a_537:
    edx430 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal425)));
    eax431 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v112) + reinterpret_cast<unsigned char>(edx430));
    v112 = eax431;
    edx432 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx430) > reinterpret_cast<unsigned char>(eax431)))));
    eax433 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v109) + reinterpret_cast<unsigned char>(edx432));
    v109 = eax433;
    eax423 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx432) > reinterpret_cast<unsigned char>(eax433))) + reinterpret_cast<unsigned char>(v110));
    v110 = eax423;
    goto addr_6e94b8d4_538;
    addr_6e94b86b_520:
    if (0) {
        if (!v88) 
            goto addr_6e94baec_536;
        goto addr_6e94b8d0_517;
    } else {
        if (0) 
            goto addr_6e94b8d0_517;
        if ((reinterpret_cast<unsigned char>(edx411) & 15) == 4) 
            goto addr_6e94b8d0_517;
        edx434 = edx411 + 4;
        v111 = edx434;
        below_or_equal425 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx434) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e94b88a_537;
    }
    addr_6e951880_458:
    *reinterpret_cast<struct s31**>(esp34->f16 + 80) = eax368;
    addr_6e951889_264:
    ecx435 = esp34->f16;
    if (!esi73) {
    }
    esp34->f0 = ebp55;
    esp436 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
    esp436->f0 = reinterpret_cast<void**>(0x6e9518a6);
    fun_6e950bb0(ecx435, 1);
    goto *reinterpret_cast<int32_t*>(&esp436->f12 + 4 + 76 + 4 + 4 + 4 + 4);
    addr_6e951864_281:
    eax368 = reinterpret_cast<struct s31*>(0);
    if (ecx296) {
        if (!reinterpret_cast<int1_t>(esp34->f20 == 16)) {
            ebx82 = esp34->f24;
        }
        eax368 = reinterpret_cast<struct s31*>(reinterpret_cast<unsigned char>(ecx296) + reinterpret_cast<unsigned char>(ebx82));
        ebx437 = edi78;
        if (*reinterpret_cast<signed char*>(&ebx437) < 0) {
            eax368 = *reinterpret_cast<struct s31**>(&eax368->f0);
            goto addr_6e951880_458;
        }
    }
    addr_6e94b4d8_45:
    ebp55 = ebx82;
    v111 = v70;
    v112 = v72;
    v109 = v74;
    v110 = v79;
    addr_6e94b378_49:
    if (!reinterpret_cast<int1_t>(ebp55 == 2)) {
        if (ebp55 == 3) {
            eax438 = *reinterpret_cast<uint16_t*>(&v110);
            ebx120 = v111;
            edi119 = v112;
            ecx439 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v46)) & 1;
            esi118 = v109;
            *reinterpret_cast<uint16_t*>(&eax117) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax438) | 0x8000);
            v45 = *reinterpret_cast<unsigned char*>(&ecx439);
            goto addr_6e94b785_51;
        } else {
            if (!reinterpret_cast<int1_t>(ebp55 == 1)) {
                v88 = v46;
                goto addr_6e94b834_43;
            } else {
                edx379 = reinterpret_cast<void*>(0);
                esi118 = reinterpret_cast<void**>(0);
                edi119 = reinterpret_cast<void**>(0);
                ebx120 = reinterpret_cast<void**>(0);
                eax440 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v46)) & 1;
                v45 = *reinterpret_cast<unsigned char*>(&eax440);
                eax117 = 0;
                goto addr_6e94b39a_477;
            }
        }
    } else {
        edx379 = reinterpret_cast<void*>(0x7fff);
        esi118 = reinterpret_cast<void**>(0);
        edi119 = reinterpret_cast<void**>(0);
        ebx120 = reinterpret_cast<void**>(0);
        eax441 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v46)) & 1;
        v45 = *reinterpret_cast<unsigned char*>(&eax441);
        eax117 = 0;
        goto addr_6e94b39a_477;
    }
    addr_6e94b970_469:
    if (reinterpret_cast<signed char>(ebx373) > reinterpret_cast<signed char>(3)) {
        ebx442 = reinterpret_cast<void**>(3);
        goto addr_6e94b312_572;
    } else {
        eax443 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34) + 0x6c);
        ecx68 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(ebx373) * 4 + 92);
        edx444 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(ebx373)) << 2);
        do {
            esi73 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax443) + reinterpret_cast<uint32_t>(edx444));
            eax443 = eax443 - 4;
            v79 = esi73;
        } while (eax443 != ecx68);
        ebx442 = ebx373 - 1;
    }
    addr_6e94b30e_576:
    if (reinterpret_cast<signed char>(ebx442) < reinterpret_cast<signed char>(0)) {
        addr_6e94b322_577:
        v56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v56) | 2);
        edx77 = reinterpret_cast<void**>(0xffffc011 - v369);
        ebx82 = reinterpret_cast<void**>(0);
        goto addr_6e94b332_30;
    } else {
        addr_6e94b312_572:
        esi73 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp34) + 96);
    }
    do {
        *reinterpret_cast<void***>(esi73 + reinterpret_cast<unsigned char>(ebx442) * 4) = reinterpret_cast<void**>(0);
        --ebx442;
    } while (reinterpret_cast<signed char>(ebx442) >= reinterpret_cast<signed char>(0));
    goto addr_6e94b322_577;
    addr_6e94b2ac_470:
    if (reinterpret_cast<signed char>(ebx373) > reinterpret_cast<signed char>(2)) {
        eax445 = v37;
        ebx442 = reinterpret_cast<void**>(2);
        v375 = reinterpret_cast<void**>(3);
    } else {
        esi446 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + 96);
        eax447 = esi446 + (3 - reinterpret_cast<unsigned char>(ebx373));
        v448 = 32 - v376;
        edi449 = ebp55;
        ebp450 = esi446;
        do {
            ecx451 = *reinterpret_cast<unsigned char*>(&v448);
            ecx452 = *reinterpret_cast<unsigned char*>(&v376);
            esi73 = reinterpret_cast<void**>(*eax447 << *reinterpret_cast<unsigned char*>(&ecx452));
            eax447[reinterpret_cast<unsigned char>(ebx373)] = *(eax447 - 1) >> *reinterpret_cast<signed char*>(&ecx451) | reinterpret_cast<unsigned char>(esi73);
            --eax447;
        } while (eax447 != ebp450);
        eax445 = v70;
        ebp55 = edi449;
        ebx442 = ebx373 - 1;
    }
    ecx68 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v376)));
    edi78 = v375;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(edi78) * 4 + 96) = reinterpret_cast<unsigned char>(eax445) << *reinterpret_cast<unsigned char*>(&ecx68);
    goto addr_6e94b30e_576;
    addr_6e94b943_14:
    if (ebp61 > 3) {
        ebp453 = 3;
        goto addr_6e94b159_585;
    } else {
        eax454 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + 92);
        ecx455 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + ebp61 * 4 + 76);
        edx456 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(-ebp61) << 2);
        do {
            eax454 = eax454 - 4;
            v51 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax454) + reinterpret_cast<uint32_t>(edx456));
        } while (eax454 != ecx455);
        ebp453 = ebp61 - 1;
    }
    addr_6e94b155_589:
    if (ebp453 < 0) {
        addr_6e94b169_590:
        ebp55 = reinterpret_cast<void**>(0);
        v54 = 0;
        v52 = reinterpret_cast<void*>(0xffffc011 - v57);
        v56 = reinterpret_cast<void**>(2);
        goto addr_6e94b1af_24;
    } else {
        addr_6e94b159_585:
        esi457 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + 80);
    }
    do {
        esi457[ebp453] = 0;
        --ebp453;
    } while (ebp453 >= 0);
    goto addr_6e94b169_590;
    addr_6e94b0f1_15:
    if (ebp61 > 2) {
        ebp453 = 2;
        v63 = 3;
    } else {
        esi458 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + 80);
        eax459 = esi458 + (3 - ebp61);
        v460 = 32 - v64;
        esi461 = edi41;
        edi462 = esi458;
        do {
            ecx463 = *reinterpret_cast<unsigned char*>(&v460);
            ecx464 = *reinterpret_cast<unsigned char*>(&v64);
            eax459[ebp61] = *(eax459 - 1) >> *reinterpret_cast<signed char*>(&ecx463) | *eax459 << *reinterpret_cast<unsigned char*>(&ecx464);
            --eax459;
        } while (eax459 != edi462);
        ebx35 = v48;
        edi41 = esi461;
        ebp453 = ebp61 - 1;
    }
    ecx465 = *reinterpret_cast<unsigned char*>(&v64);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp34) + v63 * 4 + 80) = reinterpret_cast<unsigned char>(ebx35) << *reinterpret_cast<unsigned char*>(&ecx465);
    goto addr_6e94b155_589;
    while (1) {
        addr_6e952519_597:
        while (1) {
            addr_6e952420_598:
            esp466 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
            esp466->f0 = reinterpret_cast<void**>(0x6e952425);
            fun_6e955970(ecx68, esp466->f4, esp466->f8, 0, esp466->f16, esp466->f20, esp466->f24, esp466->f28, esp466->f32);
            esp34 = reinterpret_cast<struct s13*>(&esp466->f4);
            while (1) {
                eax467 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp34->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)));
                if (*reinterpret_cast<unsigned char*>(esi73 + 0x6e95d028) > 4) 
                    break;
                while (1) {
                    *reinterpret_cast<void***>(esp34->f16) = reinterpret_cast<void**>(1);
                    while (1) {
                        edi78 = esp34->f12;
                        *reinterpret_cast<void***>(edi78) = eax467;
                        while (1) {
                            ++esi73;
                            ebx82 = ebx82 + 8;
                            esp34->f16 = esp34->f16 + 1;
                            esp34->f12 = esp34->f12 + 4;
                            if (reinterpret_cast<int1_t>(esi73 == 18)) 
                                goto addr_6e952457_603;
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82)) > reinterpret_cast<unsigned char>(5)) 
                                continue;
                            eax89 = *reinterpret_cast<void***>(ebx82);
                            switch (eax89) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        eax467 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp34->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)));
                        if (!(*reinterpret_cast<unsigned char*>(esp34->f20 + 99) & 64)) 
                            continue;
                        addr_6e9524ca_608:
                        *reinterpret_cast<void***>(esp34->f16) = reinterpret_cast<void**>(0);
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)) + 0x9c)) 
                            goto addr_6e952560_610;
                        eax467 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)) * 4 + 48);
                        if (!(*reinterpret_cast<unsigned char*>(esp34->f20 + 99) & 64)) 
                            continue;
                        goto addr_6e9524ca_608;
                        eax468 = *reinterpret_cast<void***>(ebx82 + 0xfffffffc);
                        edi469 = ebx82;
                        esi73 = esi73;
                        do {
                            ++eax468;
                            ebx470 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax468 + 0xffffffff));
                        } while (*reinterpret_cast<signed char*>(&ebx470) < 0);
                        ebx82 = edi469;
                        ecx68 = reinterpret_cast<void**>(&esp34->f48);
                        esp34->f0 = esp34->f24;
                        esp471 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                        esp471->f0 = reinterpret_cast<void**>(0x6e9524bc);
                        eax467 = fun_6e951c60(ecx68, esp471->f4);
                        esp34 = reinterpret_cast<struct s13*>(&esp471->f12 + 4);
                        if (*reinterpret_cast<unsigned char*>(esp34->f20 + 99) & 64) 
                            goto addr_6e9524ca_608;
                    }
                    eax472 = *reinterpret_cast<void***>(ebx82 + 0xfffffffc);
                    edi473 = ebx82;
                    do {
                        ++eax472;
                        ebx474 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax472 + 0xffffffff));
                    } while (*reinterpret_cast<signed char*>(&ebx474) < 0);
                    ebx82 = edi473;
                    ecx68 = reinterpret_cast<void**>(&esp34->f48);
                    esp34->f0 = esp34->f24;
                    esp475 = reinterpret_cast<struct s16*>(reinterpret_cast<uint32_t>(esp34) - 4);
                    esp475->f0 = reinterpret_cast<void**>(0x6e95250c);
                    eax467 = fun_6e951c60(ecx68, esp475->f4);
                    esp34 = reinterpret_cast<struct s13*>(&esp475->f12 + 4);
                    addr_6e95250c_619:
                    if (*reinterpret_cast<unsigned char*>(esi73 + 0x6e95d028) <= 4) 
                        continue; else 
                        goto addr_6e952519_597;
                    addr_6e952560_610:
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e952420_598;
                    edx476 = *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc) + 0x6e95d028);
                    eax467 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp34) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx82 + 0xfffffffc)) * 4 + 48);
                    if (!(esp34->f147 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx476) != 4) 
                            goto addr_6e952420_598;
                        eax467 = *reinterpret_cast<void***>(eax467);
                        goto addr_6e95250c_619;
                    }
                }
            }
        }
    }
    addr_6e952457_603:
    if (*reinterpret_cast<signed char*>(esp34->f28 + 0xbb)) {
        *reinterpret_cast<uint32_t*>(esp34->f20 + 96) = *reinterpret_cast<uint32_t*>(esp34->f20 + 96) | 0x80000000;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + 0xbc + 4 + 4 + 4 + 4);
    } else {
        *reinterpret_cast<uint32_t*>(esp34->f20 + 96) = *reinterpret_cast<uint32_t*>(esp34->f20 + 96) & 0x7fffffff;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp34) + 0xbc + 4 + 4 + 4 + 4);
    }
}

struct s32 {
    signed char[19] pad19;
    void** f19;
};

void __subtf3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    int32_t v13;
    void*** esp14;
    void** ebx15;
    void** v16;
    void** ecx17;
    void** edi18;
    void** esi19;
    void** edx20;
    void** v21;
    void** v22;
    void** eax23;
    uint32_t ecx24;
    unsigned char cl25;
    unsigned char v26;
    void** ebp27;
    void** v28;
    void*** ecx29;
    void** v30;
    void** v31;
    void** ecx32;
    void** ebx33;
    void** v34;
    void** eax35;
    void** v36;
    void** v37;
    void** esi38;
    uint32_t edx39;
    void** v40;
    void*** eax41;
    void*** edi42;
    void** v43;
    void** v44;
    void** v45;
    void** eax46;
    void** v47;
    void** v48;
    void** v49;
    void* eax50;
    void** ebx51;
    void** ecx52;
    void** edx53;
    void** v54;
    uint32_t eax55;
    void** ebp56;
    void** v57;
    void*** ebx58;
    int32_t ebp59;
    uint32_t v60;
    int32_t eax61;
    uint32_t edi62;
    void*** eax63;
    void** esi64;
    void*** edx65;
    void** ecx66;
    uint32_t eax67;
    uint32_t v68;
    uint32_t ecx69;
    int32_t eax70;
    int32_t v71;
    void** esi72;
    void* ebx73;
    void* v74;
    uint32_t ecx75;
    int32_t edx76;
    void** esi77;
    void* edx78;
    void* eax79;
    void** esi80;
    uint32_t ebx81;
    void** tmp32_82;
    void** tmp32_83;
    void** tmp32_84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** ebx89;
    void** ecx90;
    uint32_t eax91;
    void*** edi92;
    void** ecx93;
    void** ecx94;
    void** ebx95;
    void** v96;
    void** eax97;
    void** v98;
    void** eax99;
    void** ecx100;
    void** ebx101;
    void** eax102;
    void** tmp32_103;
    void** tmp32_104;
    void** tmp32_105;
    uint32_t eax106;
    void* edi107;
    void** tmp32_108;
    void** tmp32_109;
    void** tmp32_110;
    uint32_t ebp111;
    void* v112;
    void* edx113;
    void** v114;
    uint32_t eax115;
    void** eax116;
    void** ecx117;
    void** tmp32_118;
    void** tmp32_119;
    void** tmp32_120;
    void** edi121;
    void** v122;
    void** v123;
    int32_t ebx124;
    uint32_t v125;
    int32_t eax126;
    uint32_t esi127;
    void*** eax128;
    void*** edx129;
    void** v130;
    uint32_t eax131;
    uint32_t v132;
    uint32_t ecx133;
    int32_t eax134;
    int32_t v135;
    int32_t eax136;
    void*** eax137;
    void** v138;
    void*** ebp139;
    uint32_t v140;
    uint32_t ecx141;
    void*** eax142;
    void*** edx143;
    uint32_t eax144;
    void** ebx145;
    void** ecx146;
    void* eax147;
    uint32_t eax148;
    void** edi149;
    void** v150;
    void** ebp151;
    int32_t ebp152;
    uint32_t v153;
    int32_t eax154;
    uint32_t edi155;
    void*** eax156;
    void** esi157;
    void*** edx158;
    uint32_t eax159;
    uint32_t v160;
    uint32_t ecx161;
    int32_t eax162;
    int32_t v163;
    int32_t eax164;
    void** esi165;
    void* ebx166;
    void* v167;
    uint32_t ecx168;
    void** esi169;
    void* eax170;
    void* edx171;
    void** esi172;
    uint32_t eax173;
    void** ecx174;
    void** ebx175;
    uint1_t cf176;
    uint1_t cf177;
    void** ebx178;
    void** ecx179;
    uint32_t eax180;
    void** v181;
    void** ebp182;
    void** v183;
    uint32_t ecx184;
    void** eax185;
    uint1_t cf186;
    uint1_t cf187;
    void** eax188;
    uint1_t cf189;
    uint1_t cf190;
    uint32_t ebx191;
    uint32_t eax192;
    void** eax193;
    uint1_t cf194;
    uint1_t cf195;
    uint1_t cf196;
    uint1_t cf197;
    void** eax198;
    uint1_t below_or_equal199;
    void** eax200;
    void** ecx201;
    void** eax202;
    void** ecx203;
    void** eax204;
    void** edx205;
    void*** eax206;
    void*** esi207;
    uint32_t eax208;
    uint32_t ebp209;
    int1_t zf210;
    void** v211;
    uint32_t eax212;
    uint16_t v213;
    uint32_t eax214;
    uint32_t eax215;
    void** tmp32_216;
    void** tmp32_217;
    void** tmp32_218;
    uint32_t v219;
    void* eax220;
    void* edi221;
    uint32_t eax222;
    void** eax223;
    void* ebp224;
    void* ebx225;
    void*** eax226;
    void*** edi227;
    void** ebx228;
    void** eax229;
    void** ebp230;
    void** ecx231;
    void** v232;
    void** edx233;
    void*** eax234;
    void** edx235;
    void** edi236;
    void** tmp32_237;
    void** tmp32_238;
    void** tmp32_239;
    uint1_t cf240;
    uint1_t cf241;
    struct s32* edx242;
    void** ebx243;
    void** edx244;
    void* eax245;
    void** ebx246;
    uint32_t edi247;
    void** v248;
    void** v249;
    uint32_t v250;
    void** ebx251;
    void*** eax252;
    void*** ecx253;
    void* edx254;
    void*** edi255;
    void*** eax256;
    uint32_t v257;
    void** edi258;
    void*** ebp259;
    uint32_t ecx260;
    uint32_t ecx261;
    uint32_t ecx262;
    uint32_t eax263;
    uint32_t eax264;
    void* edx265;
    void* eax266;
    void* edx267;
    void* edx268;
    int32_t eax269;
    uint32_t v270;
    uint32_t esi271;
    int32_t edx272;
    void*** edx273;
    void*** ecx274;
    void** v275;
    uint32_t edx276;
    uint32_t v277;
    uint32_t ecx278;
    int32_t v279;
    int32_t edx280;
    void*** edx281;
    void*** v282;
    uint32_t ebp283;
    uint32_t ecx284;
    int32_t ecx285;
    void*** edx286;
    void*** ecx287;
    uint32_t eax288;
    uint32_t eax289;
    uint32_t eax290;
    void** ebx291;
    void** eax292;
    void*** eax293;
    void** ecx294;
    uint32_t eax295;
    uint32_t eax296;
    void* ebp297;
    void* ecx298;
    void*** eax299;
    void*** ecx300;
    void** ebx301;
    void** edx302;
    void** edi303;
    void** ebp304;
    void** eax305;
    void** ecx306;
    void** v307;
    void** edx308;
    void*** eax309;
    uint32_t eax310;
    void** edi311;
    void** v312;
    void** v313;
    int32_t ebx314;
    uint32_t v315;
    int32_t eax316;
    uint32_t esi317;
    void*** eax318;
    void*** edx319;
    void** v320;
    uint32_t eax321;
    uint32_t v322;
    uint32_t ecx323;
    int32_t eax324;
    int32_t v325;
    int32_t eax326;
    void*** eax327;
    void*** v328;
    uint32_t v329;
    uint32_t ecx330;
    void*** eax331;
    void*** edx332;
    uint32_t eax333;
    uint1_t cf334;
    uint1_t cf335;
    uint1_t cf336;
    uint1_t cf337;

    v13 = reinterpret_cast<int32_t>(__return_address());
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x8c);
    ebx15 = a7;
    v16 = a11;
    ecx17 = a8;
    edi18 = a9;
    esi19 = a10;
    edx20 = a12;
    __asm__("fnstcw word [esp+0x3e]");
    v21 = a5;
    v22 = a6;
    eax23 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&ecx17)));
    ecx24 = reinterpret_cast<unsigned char>(ecx17) >> 24;
    cl25 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx24) >> 7);
    v26 = cl25;
    ebp27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) >> 16 & 0x7fff);
    v28 = reinterpret_cast<void**>(static_cast<uint32_t>(cl25));
    ecx29 = esp14 + 92;
    v30 = ebx15;
    while (ecx29 = ecx29 - 4, v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx15) >> 29 | reinterpret_cast<unsigned char>(eax23) << 3), ecx29 != esp14 + 80) {
        eax23 = v30;
        ebx15 = v22;
    }
    ecx32 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edx20)));
    ebx33 = v16;
    v34 = esi19;
    eax35 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v21) << 3);
    v36 = eax35;
    v37 = eax35;
    esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx20) >> 16 & 0x7fff);
    edx39 = reinterpret_cast<unsigned char>(edx20) >> 24;
    *reinterpret_cast<unsigned char*>(&edx39) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx39) >> 7);
    v40 = edi18;
    eax41 = esp14 + 0x6c;
    edi42 = esp14 + 96;
    v43 = ebx33;
    while (eax41 = eax41 - 4, v44 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx33) >> 29 | reinterpret_cast<unsigned char>(ecx32) << 3), eax41 != edi42) {
        ecx32 = v43;
        ebx33 = v34;
    }
    v45 = esi38;
    eax46 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v40) << 3);
    v47 = eax46;
    v48 = eax46;
    if (esi38 != 0x7fff || !(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v44) | reinterpret_cast<unsigned char>(v47))) {
        edx39 = edx39 ^ 1;
    }
    v49 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx39)));
    if (v28 == v49) {
        eax50 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp27) - reinterpret_cast<unsigned char>(v45));
        if (reinterpret_cast<int32_t>(eax50) <= reinterpret_cast<int32_t>(0)) {
            if (eax50) {
                if (ebp27) {
                    if (v45 == 0x7fff) {
                        ebx51 = v43;
                        ecx52 = v34;
                        edx53 = v44;
                        v54 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(ebx51) | reinterpret_cast<unsigned char>(ecx52) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                            v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                        }
                    } else {
                        v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) | 0x80000);
                        eax55 = -reinterpret_cast<uint32_t>(eax50);
                        v54 = reinterpret_cast<void**>(0);
                        goto addr_6e94d8c7_18;
                    }
                } else {
                    if (reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v22) | reinterpret_cast<unsigned char>(v31) | reinterpret_cast<unsigned char>(v36)) {
                        eax55 = reinterpret_cast<uint32_t>(eax50) ^ 0xffffffff;
                        if (eax55) {
                            v54 = reinterpret_cast<void**>(2);
                            if (!reinterpret_cast<int1_t>(v45 == 0x7fff)) {
                                addr_6e94d8c7_18:
                                if (reinterpret_cast<int32_t>(eax55) > reinterpret_cast<int32_t>(0x74)) {
                                    ebp56 = v22;
                                    v57 = v30;
                                    esi38 = v31;
                                    ebx58 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(ebp56) | reinterpret_cast<unsigned char>(v31) | reinterpret_cast<unsigned char>(v36));
                                    if (ebx58) {
                                        ebx58 = reinterpret_cast<void***>(1);
                                        ebp56 = reinterpret_cast<void**>(0);
                                        v57 = reinterpret_cast<void**>(0);
                                        esi38 = reinterpret_cast<void**>(0);
                                        goto addr_6e94d97a_24;
                                    }
                                } else {
                                    ebp59 = reinterpret_cast<int32_t>(eax55) >> 5;
                                    v60 = eax55 & 31;
                                    if (!ebp59) {
                                        eax61 = 0;
                                        edi62 = 0;
                                    } else {
                                        eax63 = esp14 + 84;
                                        edi62 = 0;
                                        esi64 = v45;
                                        edx65 = esp14 + ebp59 * 4 + 80;
                                        ecx66 = v36;
                                        while (edi62 = edi62 | reinterpret_cast<unsigned char>(ecx66), eax63 != edx65) {
                                            ecx66 = a11;
                                            eax63 = eax63 + 4;
                                        }
                                        v45 = esi64;
                                        eax61 = ebp59;
                                    }
                                    if (v60) {
                                        eax67 = *reinterpret_cast<uint32_t*>(esp14 + eax61 * 4 + 80);
                                        v68 = 32 - v60;
                                        ecx69 = *reinterpret_cast<unsigned char*>(&v68);
                                        edi62 = edi62 | eax67 << *reinterpret_cast<unsigned char*>(&ecx69);
                                        eax70 = 3 - ebp59;
                                        v71 = eax70;
                                        if (eax70) {
                                            esi72 = v45;
                                            ebx73 = reinterpret_cast<void*>(esp14 + 80);
                                            v74 = reinterpret_cast<void*>(esp14 + eax70 * 4 + 80);
                                            do {
                                                ebx73 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx73) + 4);
                                            } while (ebx73 != v74);
                                            v45 = esi72;
                                        }
                                        ecx75 = *reinterpret_cast<unsigned char*>(&v60);
                                        edx76 = v71 + 1;
                                        *reinterpret_cast<uint32_t*>(esp14 + v71 * 4 + 80) = reinterpret_cast<unsigned char>(v31) >> *reinterpret_cast<signed char*>(&ecx75);
                                    } else {
                                        esi77 = v45;
                                        edx78 = reinterpret_cast<void*>(esp14 + 80);
                                        eax79 = reinterpret_cast<void*>(esp14 + (3 - ebp59) * 4 + 84);
                                        do {
                                            edx78 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx78) + 4);
                                        } while (edx78 != eax79);
                                        v45 = esi77;
                                        edx76 = 4 - ebp59;
                                    }
                                    if (edx76 != 4) {
                                        esi80 = v45;
                                        do {
                                            *reinterpret_cast<int32_t*>(esp14 + edx76 * 4 + 80) = 0;
                                            ++edx76;
                                        } while (edx76 <= 3);
                                        v45 = esi80;
                                    }
                                    ebx81 = 0;
                                    ebp56 = v22;
                                    *reinterpret_cast<unsigned char*>(&ebx81) = reinterpret_cast<uint1_t>(!!edi62);
                                    ebx58 = reinterpret_cast<void***>(ebx81 | reinterpret_cast<unsigned char>(v37));
                                    esi38 = v31;
                                    v57 = v30;
                                    goto addr_6e94d97a_24;
                                }
                            } else {
                                ebx51 = v43;
                                ecx52 = v34;
                                edx53 = v44;
                                if (reinterpret_cast<unsigned char>(ebx51) | reinterpret_cast<unsigned char>(ecx52) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                                    v54 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx53) << 13) >> 31) + 3);
                                }
                            }
                        } else {
                            v54 = reinterpret_cast<void**>(2);
                            tmp32_82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(v36));
                            tmp32_83 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) + reinterpret_cast<unsigned char>(v22) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_82) < reinterpret_cast<unsigned char>(v47)));
                            tmp32_84 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) + reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_83) < reinterpret_cast<unsigned char>(v34)));
                            ebp27 = v45;
                            v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) + reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_84) < reinterpret_cast<unsigned char>(v43)));
                            v86 = tmp32_84;
                            v87 = tmp32_83;
                            v88 = tmp32_82;
                            goto addr_6e94d265_48;
                        }
                    } else {
                        if (v45 == 0x7fff) {
                            ebx89 = v43;
                            ecx90 = v34;
                            edx53 = v44;
                            v54 = reinterpret_cast<void**>(0);
                            if (reinterpret_cast<unsigned char>(ebx89) | reinterpret_cast<unsigned char>(ecx90) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                                v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                            }
                        } else {
                            edx53 = v44;
                            ebx89 = v43;
                            ecx90 = v34;
                            v54 = reinterpret_cast<void**>(0);
                        }
                        v87 = ecx90;
                        ebp27 = v45;
                        v86 = ebx89;
                        v85 = edx53;
                        v88 = v47;
                        eax91 = 0;
                        v36 = v47;
                        edi92 = esp14 + 0x70;
                        goto addr_6e94c66b_54;
                    }
                }
            } else {
                ecx93 = ebp27 + 1;
                if (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ecx93) & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
                    if (ebp27) {
                        if (ebp27 == 0x7fff) {
                            ecx94 = v22;
                            ebx95 = v31;
                            v54 = reinterpret_cast<void**>(0);
                            v96 = v30;
                            eax97 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(ecx94) | reinterpret_cast<unsigned char>(ebx95) | reinterpret_cast<unsigned char>(v36));
                            ebp27 = eax97;
                            if (eax97) {
                                v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebx95) >> 18 ^ 1) & 1);
                            }
                        } else {
                            ebx95 = v31;
                            ecx94 = v22;
                            v54 = reinterpret_cast<void**>(0);
                            v96 = v30;
                            ebp27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(ebx95) | reinterpret_cast<unsigned char>(ecx94) | reinterpret_cast<unsigned char>(v36));
                        }
                        if (v45 == 0x7fff) {
                            esi38 = v34;
                            edx53 = v44;
                            v98 = v43;
                            if (reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(esi38) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                                eax99 = reinterpret_cast<void**>(1);
                                if (reinterpret_cast<unsigned char>(edx53) & 0x40000) {
                                    eax99 = v54;
                                }
                                v54 = eax99;
                            }
                        } else {
                            edx53 = v44;
                            esi38 = v34;
                            v98 = v43;
                        }
                        if (ebp27) 
                            goto addr_6e94dfce_68; else 
                            goto addr_6e94db1c_69;
                    } else {
                        ecx100 = v30;
                        ebx101 = v22;
                        edx53 = v31;
                        if (reinterpret_cast<unsigned char>(ecx100) | reinterpret_cast<unsigned char>(ebx101) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v36)) {
                            eax102 = v36;
                            if (!(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v44) | reinterpret_cast<unsigned char>(v47))) {
                                addr_6e94db8c_72:
                                v88 = eax102;
                                edi92 = esp14 + 0x70;
                                eax91 = 0;
                                v87 = ebx101;
                                v86 = ecx100;
                                v85 = edx53;
                                v54 = reinterpret_cast<void**>(2);
                                goto addr_6e94c66b_54;
                            } else {
                                tmp32_103 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax102) + reinterpret_cast<unsigned char>(v47));
                                tmp32_104 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx101) + reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_103) < reinterpret_cast<unsigned char>(eax102)));
                                tmp32_105 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx100) + reinterpret_cast<unsigned char>(v43) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_104) < reinterpret_cast<unsigned char>(ebx101)));
                                edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) + reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_105) < reinterpret_cast<unsigned char>(ecx100)));
                                v85 = edx53;
                                v86 = tmp32_105;
                                v87 = tmp32_104;
                                v88 = tmp32_103;
                                if (!(reinterpret_cast<unsigned char>(edx53) & 0x80000)) {
                                    v36 = tmp32_103;
                                    edi92 = esp14 + 0x70;
                                    eax91 = reinterpret_cast<unsigned char>(tmp32_103) & 7;
                                    v54 = reinterpret_cast<void**>(2);
                                    goto addr_6e94c66b_54;
                                } else {
                                    edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) & 0xfff7ffff);
                                    ebp27 = reinterpret_cast<void**>(1);
                                    v36 = tmp32_103;
                                    edi92 = esp14 + 0x70;
                                    eax91 = reinterpret_cast<unsigned char>(tmp32_103) & 7;
                                    v85 = edx53;
                                    v54 = reinterpret_cast<void**>(2);
                                    goto addr_6e94c66b_54;
                                }
                            }
                        } else {
                            edx53 = v44;
                            eax106 = reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47);
                            eax91 = 0;
                            v54 = reinterpret_cast<void**>(~(eax106 - (eax106 + reinterpret_cast<uint1_t>(eax106 < eax106 + reinterpret_cast<uint1_t>(eax106 < 1)))) & 2);
                            v88 = v47;
                            v36 = v47;
                            edi92 = esp14 + 0x70;
                            v87 = v34;
                            v86 = v43;
                            v85 = edx53;
                            goto addr_6e94c66b_54;
                        }
                    }
                } else {
                    edi107 = reinterpret_cast<void*>(esp14 + 0x7c);
                    tmp32_108 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) + reinterpret_cast<unsigned char>(v47));
                    tmp32_109 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_108) < reinterpret_cast<unsigned char>(v36)));
                    tmp32_110 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v43) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_109) < reinterpret_cast<unsigned char>(v22)));
                    v87 = tmp32_109;
                    ebp111 = reinterpret_cast<unsigned char>(tmp32_108) << 31;
                    v112 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v31) + reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_110) < reinterpret_cast<unsigned char>(v30)));
                    edx113 = reinterpret_cast<void*>(esp14 + 0x74);
                    v86 = tmp32_110;
                    v114 = tmp32_108;
                    while (edx113 != edi107) {
                        edx113 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx113) + 4);
                    }
                    eax115 = 0;
                    edx53 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(v112) >> 1);
                    *reinterpret_cast<unsigned char*>(&eax115) = reinterpret_cast<uint1_t>(!!ebp111);
                    v36 = reinterpret_cast<void**>(eax115 | reinterpret_cast<unsigned char>(v114));
                    v85 = edx53;
                    v88 = v36;
                    if (ecx93 == 0x7fff) 
                        goto addr_6e94d841_81; else 
                        goto addr_6e94d509_82;
                }
            }
        } else {
            if (!v45) {
                if (!(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v44) | reinterpret_cast<unsigned char>(v47))) {
                    addr_6e94c62e_85:
                    if (ebp27 == 0x7fff) {
                        addr_6e94c9e4_86:
                        eax116 = v30;
                        ecx117 = v22;
                        edx53 = v31;
                        v54 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(eax116) | reinterpret_cast<unsigned char>(ecx117) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v36)) {
                            v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                            goto addr_6e94c64e_88;
                        }
                    } else {
                        edx53 = v31;
                        eax116 = v30;
                        ecx117 = v22;
                        v54 = reinterpret_cast<void**>(0);
                        goto addr_6e94c64e_88;
                    }
                } else {
                    eax50 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax50) - 1);
                    if (!eax50) {
                        v54 = reinterpret_cast<void**>(2);
                        tmp32_118 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) + reinterpret_cast<unsigned char>(v47));
                        tmp32_119 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_118) < reinterpret_cast<unsigned char>(v36)));
                        tmp32_120 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v43) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_119) < reinterpret_cast<unsigned char>(v22)));
                        v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) + reinterpret_cast<unsigned char>(v31) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_120) < reinterpret_cast<unsigned char>(v30)));
                        v86 = tmp32_120;
                        v87 = tmp32_119;
                        v88 = tmp32_118;
                        goto addr_6e94d265_48;
                    } else {
                        v54 = reinterpret_cast<void**>(2);
                        if (!reinterpret_cast<int1_t>(ebp27 == 0x7fff)) {
                            addr_6e94c81a_93:
                            if (reinterpret_cast<int32_t>(eax50) > reinterpret_cast<int32_t>(0x74)) {
                                edi121 = v44;
                                v122 = v34;
                                esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(edi121) | reinterpret_cast<unsigned char>(v47));
                                v123 = v43;
                                if (esi38) {
                                    esi38 = reinterpret_cast<void**>(1);
                                    edi121 = reinterpret_cast<void**>(0);
                                    v122 = reinterpret_cast<void**>(0);
                                    v123 = reinterpret_cast<void**>(0);
                                    goto addr_6e94d239_96;
                                }
                            } else {
                                ebx124 = reinterpret_cast<int32_t>(eax50) >> 5;
                                v125 = reinterpret_cast<uint32_t>(eax50) & 31;
                                if (!ebx124) {
                                    eax126 = 0;
                                    esi127 = 0;
                                } else {
                                    eax128 = esp14 + 100;
                                    edx129 = edi42 + ebx124 * 4;
                                    esi127 = reinterpret_cast<unsigned char>(v47);
                                    if (eax128 != edx129) {
                                        do {
                                            eax128 = eax128 + 4;
                                            esi127 = esi127 | reinterpret_cast<unsigned char>(v130);
                                        } while (eax128 != edx129);
                                    }
                                    eax126 = ebx124;
                                }
                                if (v125) {
                                    eax131 = *reinterpret_cast<uint32_t*>(esp14 + eax126 * 4 + 96);
                                    v132 = 32 - v125;
                                    ecx133 = *reinterpret_cast<unsigned char*>(&v132);
                                    esi127 = esi127 | eax131 << *reinterpret_cast<unsigned char*>(&ecx133);
                                    eax134 = 3 - ebx124;
                                    v135 = eax134;
                                    if (!eax134) {
                                        eax136 = 1;
                                    } else {
                                        eax137 = edi42;
                                        v138 = ebp27;
                                        ebp139 = edi42 + eax134 * 4;
                                        v140 = esi127;
                                        do {
                                            eax137 = eax137 + 4;
                                        } while (eax137 != ebp139);
                                        esi127 = v140;
                                        ebp27 = v138;
                                        eax136 = 4 - ebx124;
                                    }
                                    ecx141 = *reinterpret_cast<unsigned char*>(&v125);
                                    *reinterpret_cast<uint32_t*>(esp14 + v135 * 4 + 96) = reinterpret_cast<unsigned char>(v44) >> *reinterpret_cast<signed char*>(&ecx141);
                                } else {
                                    eax142 = edi42;
                                    edx143 = esp14 + (3 - ebx124) * 4 + 100;
                                    do {
                                        eax142 = eax142 + 4;
                                    } while (eax142 != edx143);
                                    eax136 = 4 - ebx124;
                                }
                                if (eax136 != 4) {
                                    esi127 = esi127;
                                    do {
                                        edi42[eax136 * 4] = reinterpret_cast<void**>(0);
                                        ++eax136;
                                    } while (eax136 <= 3);
                                }
                                eax144 = 0;
                                *reinterpret_cast<unsigned char*>(&eax144) = reinterpret_cast<uint1_t>(!!esi127);
                                edi121 = v44;
                                esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) | eax144);
                                v123 = v43;
                                v122 = v34;
                                goto addr_6e94d239_96;
                            }
                        } else {
                            addr_6e94c999_116:
                            ebx145 = v30;
                            ecx146 = v22;
                            edx53 = v31;
                            if (reinterpret_cast<unsigned char>(ebx145) | reinterpret_cast<unsigned char>(ecx146) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v36)) {
                                v54 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx53) << 13) >> 31) + 3);
                                goto addr_6e94c9c4_118;
                            }
                        }
                    }
                }
            } else {
                if (ebp27 == 0x7fff) {
                    ebx145 = v30;
                    ecx146 = v22;
                    edx53 = v31;
                    v54 = reinterpret_cast<void**>(0);
                    if (reinterpret_cast<unsigned char>(ebx145) | reinterpret_cast<unsigned char>(ecx146) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v36)) {
                        v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                        goto addr_6e94c9c4_118;
                    }
                } else {
                    v44 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) | 0x80000);
                    v54 = reinterpret_cast<void**>(0);
                    goto addr_6e94c81a_93;
                }
            }
        }
    } else {
        eax147 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(ebp27) - reinterpret_cast<unsigned char>(v45));
        if (reinterpret_cast<int32_t>(eax147) <= reinterpret_cast<int32_t>(0)) {
            if (eax147) {
                if (!ebp27) {
                    if (reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v22) | reinterpret_cast<unsigned char>(v31) | reinterpret_cast<unsigned char>(v36)) {
                        eax148 = reinterpret_cast<uint32_t>(eax147) ^ 0xffffffff;
                        if (eax148) {
                            v54 = reinterpret_cast<void**>(2);
                            if (!reinterpret_cast<int1_t>(v45 == 0x7fff)) {
                                addr_6e94d0be_129:
                                if (reinterpret_cast<int32_t>(eax148) > reinterpret_cast<int32_t>(0x74)) {
                                    edi149 = v31;
                                    v150 = v22;
                                    esi38 = v30;
                                    ebp151 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v22) | reinterpret_cast<unsigned char>(edi149) | reinterpret_cast<unsigned char>(v36));
                                    if (ebp151) {
                                        ebp151 = reinterpret_cast<void**>(1);
                                        esi38 = reinterpret_cast<void**>(0);
                                        v150 = reinterpret_cast<void**>(0);
                                        edi149 = reinterpret_cast<void**>(0);
                                        goto addr_6e94d177_132;
                                    }
                                } else {
                                    ebp152 = reinterpret_cast<int32_t>(eax148) >> 5;
                                    v153 = eax148 & 31;
                                    if (!ebp152) {
                                        eax154 = 0;
                                        edi155 = 0;
                                    } else {
                                        eax156 = esp14 + 84;
                                        esi157 = v45;
                                        edx158 = esp14 + ebp152 * 4 + 80;
                                        edi155 = reinterpret_cast<unsigned char>(v36);
                                        if (eax156 != edx158) {
                                            do {
                                                eax156 = eax156 + 4;
                                                edi155 = edi155 | reinterpret_cast<unsigned char>(a11);
                                            } while (eax156 != edx158);
                                        }
                                        v45 = esi157;
                                        eax154 = ebp152;
                                    }
                                    if (v153) {
                                        eax159 = *reinterpret_cast<uint32_t*>(esp14 + eax154 * 4 + 80);
                                        v160 = 32 - v153;
                                        ecx161 = *reinterpret_cast<unsigned char*>(&v160);
                                        edi155 = edi155 | eax159 << *reinterpret_cast<unsigned char*>(&ecx161);
                                        eax162 = 3 - ebp152;
                                        v163 = eax162;
                                        if (!eax162) {
                                            eax164 = 1;
                                        } else {
                                            esi165 = v45;
                                            ebx166 = reinterpret_cast<void*>(esp14 + 80);
                                            v167 = reinterpret_cast<void*>(esp14 + eax162 * 4 + 80);
                                            do {
                                                ebx166 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx166) + 4);
                                            } while (ebx166 != v167);
                                            v45 = esi165;
                                            eax164 = 4 - ebp152;
                                        }
                                        ecx168 = *reinterpret_cast<unsigned char*>(&v153);
                                        *reinterpret_cast<uint32_t*>(esp14 + v163 * 4 + 80) = reinterpret_cast<unsigned char>(v31) >> *reinterpret_cast<signed char*>(&ecx168);
                                    } else {
                                        esi169 = v45;
                                        eax170 = reinterpret_cast<void*>(esp14 + 80);
                                        edx171 = reinterpret_cast<void*>(esp14 + (3 - ebp152) * 4 + 84);
                                        do {
                                            eax170 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax170) + 4);
                                        } while (eax170 != edx171);
                                        v45 = esi169;
                                        eax164 = 4 - ebp152;
                                    }
                                    if (eax164 != 4) {
                                        esi172 = v45;
                                        do {
                                            *reinterpret_cast<int32_t*>(esp14 + eax164 * 4 + 80) = 0;
                                            ++eax164;
                                        } while (eax164 <= 3);
                                        v45 = esi172;
                                    }
                                    eax173 = 0;
                                    *reinterpret_cast<unsigned char*>(&eax173) = reinterpret_cast<uint1_t>(!!edi155);
                                    edi149 = v31;
                                    ebp151 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v37) | eax173);
                                    esi38 = v30;
                                    v150 = v22;
                                    goto addr_6e94d177_132;
                                }
                            } else {
                                ecx174 = v43;
                                ebx175 = v34;
                                edx53 = v44;
                                if (reinterpret_cast<unsigned char>(ecx174) | reinterpret_cast<unsigned char>(ebx175) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                                    v54 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx53) << 13) >> 31) + 3);
                                    goto addr_6e94dbf1_155;
                                }
                            }
                        } else {
                            v54 = reinterpret_cast<void**>(2);
                            cf176 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(v36))));
                            cf177 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + cf176));
                            v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - reinterpret_cast<unsigned char>(v36));
                            v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) - (reinterpret_cast<unsigned char>(v31) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v44) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v31) + cf177))));
                            ebp27 = v45;
                            v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - (reinterpret_cast<unsigned char>(v30) + cf177));
                            v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) - (reinterpret_cast<unsigned char>(v22) + cf176));
                            v28 = v49;
                            goto addr_6e94c925_157;
                        }
                    } else {
                        if (v45 == 0x7fff) {
                            ebx178 = v43;
                            ecx179 = v34;
                            edx53 = v44;
                            v54 = reinterpret_cast<void**>(0);
                            if (reinterpret_cast<unsigned char>(ebx178) | reinterpret_cast<unsigned char>(ecx179) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                                v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                            }
                        } else {
                            edx53 = v44;
                            ebx178 = v43;
                            ecx179 = v34;
                            v54 = reinterpret_cast<void**>(0);
                        }
                        v86 = ebx178;
                        v87 = ecx179;
                        ebp27 = v45;
                        v85 = edx53;
                        eax180 = reinterpret_cast<unsigned char>(v49) & 1;
                        v26 = *reinterpret_cast<unsigned char*>(&eax180);
                        v88 = v47;
                        eax91 = 0;
                        v36 = v47;
                        edi92 = esp14 + 0x70;
                        v28 = v49;
                        goto addr_6e94c66b_54;
                    }
                } else {
                    if (v45 == 0x7fff) {
                        ecx174 = v43;
                        ebx175 = v34;
                        edx53 = v44;
                        v54 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(ecx174) | reinterpret_cast<unsigned char>(ebx175) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
                            v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx53) >> 18 ^ 1) & 1);
                            goto addr_6e94dbf1_155;
                        }
                    } else {
                        v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) | 0x80000);
                        eax148 = -reinterpret_cast<uint32_t>(eax147);
                        v54 = reinterpret_cast<void**>(0);
                        goto addr_6e94d0be_129;
                    }
                }
            } else {
                if (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(ebp27 + 1) & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
                    if (ebp27) {
                        if (ebp27 == 0x7fff) {
                            v54 = reinterpret_cast<void**>(0);
                            v181 = v22;
                            ebp182 = v31;
                            v183 = v30;
                            ecx184 = reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v22) | reinterpret_cast<unsigned char>(v31) | reinterpret_cast<unsigned char>(v36);
                            if (ecx184) {
                                v54 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v31) >> 18 ^ 1) & 1);
                            }
                        } else {
                            v54 = reinterpret_cast<void**>(0);
                            ebp182 = v31;
                            v181 = v22;
                            ecx184 = reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v31) | reinterpret_cast<unsigned char>(v22) | reinterpret_cast<unsigned char>(v36);
                            v183 = v30;
                        }
                        if (v45 == 0x7fff) 
                            goto addr_6e94dcf7_174; else 
                            goto addr_6e94d70c_175;
                    } else {
                        ecx100 = v30;
                        ebx101 = v22;
                        edx53 = v31;
                        if (reinterpret_cast<unsigned char>(ecx100) | reinterpret_cast<unsigned char>(ebx101) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v36)) {
                            eax102 = v36;
                            if (!(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v44) | reinterpret_cast<unsigned char>(v47))) 
                                goto addr_6e94db8c_72;
                            eax185 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax102) - reinterpret_cast<unsigned char>(v47));
                            cf186 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ebx101) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax102) < reinterpret_cast<unsigned char>(v47))));
                            cf187 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx100) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v43) + cf186));
                            edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) - (reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx53) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v44) + cf187))));
                            v85 = edx53;
                            v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx100) - (reinterpret_cast<unsigned char>(v43) + cf187));
                            v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx101) - (reinterpret_cast<unsigned char>(v34) + cf186));
                            v88 = eax185;
                            if (!(reinterpret_cast<unsigned char>(edx53) & 0x80000)) {
                                v36 = eax185;
                                if (!(reinterpret_cast<unsigned char>(eax185) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v87) | reinterpret_cast<unsigned char>(v86))) {
                                    v28 = reinterpret_cast<void**>(0);
                                    v26 = 0;
                                }
                                edi92 = esp14 + 0x70;
                                v54 = reinterpret_cast<void**>(2);
                                eax91 = reinterpret_cast<unsigned char>(v36) & 7;
                                goto addr_6e94c66b_54;
                            } else {
                                eax188 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) - reinterpret_cast<unsigned char>(v37));
                                cf189 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v48) < reinterpret_cast<unsigned char>(v37))));
                                cf190 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + cf189));
                                edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) - (reinterpret_cast<unsigned char>(v31) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v44) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v31) + cf190))));
                                v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - (reinterpret_cast<unsigned char>(v30) + cf190));
                                ebx191 = reinterpret_cast<unsigned char>(v49) & 1;
                                v88 = eax188;
                                v36 = eax188;
                                eax91 = reinterpret_cast<unsigned char>(eax188) & 7;
                                v28 = v49;
                                edi92 = esp14 + 0x70;
                                v85 = edx53;
                                v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) - (reinterpret_cast<unsigned char>(v22) + cf189));
                                v26 = *reinterpret_cast<unsigned char*>(&ebx191);
                                v54 = reinterpret_cast<void**>(2);
                                goto addr_6e94c66b_54;
                            }
                        } else {
                            edx53 = v44;
                            v87 = v34;
                            v88 = v47;
                            v86 = v43;
                            v85 = edx53;
                            if (!(reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47))) {
                                v54 = reinterpret_cast<void**>(0);
                                v28 = reinterpret_cast<void**>(0);
                                edi92 = esp14 + 0x70;
                                v26 = 0;
                                goto addr_6e94c6a0_185;
                            } else {
                                v36 = v47;
                                v54 = reinterpret_cast<void**>(2);
                                eax192 = reinterpret_cast<unsigned char>(v49) & 1;
                                v26 = *reinterpret_cast<unsigned char*>(&eax192);
                                eax91 = 0;
                                v28 = v49;
                                edi92 = esp14 + 0x70;
                                goto addr_6e94c66b_54;
                            }
                        }
                    }
                } else {
                    eax193 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) - reinterpret_cast<unsigned char>(v47));
                    cf194 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v22) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v36) < reinterpret_cast<unsigned char>(v47))));
                    cf195 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v43) + cf194));
                    edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) - (reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v31) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v44) + cf195))));
                    v85 = edx53;
                    v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v43) + cf195));
                    v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) - (reinterpret_cast<unsigned char>(v34) + cf194));
                    v88 = eax193;
                    if (!(reinterpret_cast<unsigned char>(edx53) & 0x80000)) {
                        v36 = eax193;
                        if (reinterpret_cast<unsigned char>(eax193) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v87) | reinterpret_cast<unsigned char>(v86)) {
                            v54 = reinterpret_cast<void**>(0);
                            goto addr_6e94cb43_190;
                        } else {
                            edi92 = esp14 + 0x70;
                            v54 = reinterpret_cast<void**>(0);
                            ebp27 = reinterpret_cast<void**>(0);
                            v28 = reinterpret_cast<void**>(0);
                            v26 = 0;
                            eax91 = reinterpret_cast<unsigned char>(v36) & 7;
                            goto addr_6e94c66b_54;
                        }
                    } else {
                        cf196 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v48) < reinterpret_cast<unsigned char>(v37))));
                        cf197 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + cf196));
                        edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) - (reinterpret_cast<unsigned char>(v31) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v44) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v31) + cf197))));
                        v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) - reinterpret_cast<unsigned char>(v37));
                        v85 = edx53;
                        v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - (reinterpret_cast<unsigned char>(v30) + cf197));
                        v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) - (reinterpret_cast<unsigned char>(v22) + cf196));
                        v28 = v49;
                        v54 = reinterpret_cast<void**>(0);
                        goto addr_6e94cb43_190;
                    }
                }
            }
        } else {
            if (v45) {
                if (ebp27 == 0x7fff) 
                    goto addr_6e94c9e4_86;
                v44 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) | 0x80000);
                v54 = reinterpret_cast<void**>(0);
                goto addr_6e94c73c_196;
            } else {
                if (!(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(v44) | reinterpret_cast<unsigned char>(v47))) 
                    goto addr_6e94c62e_85;
                eax147 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax147) - 1);
                if (eax147) 
                    goto addr_6e94cf13_199; else 
                    goto addr_6e94c8e9_200;
            }
        }
    }
    ebp27 = reinterpret_cast<void**>(0x7fff);
    v87 = ecx52;
    v86 = ebx51;
    v85 = edx53;
    v88 = v47;
    eax91 = 0;
    v36 = v47;
    edi92 = esp14 + 0x70;
    addr_6e94c66b_54:
    if (!eax91) 
        goto addr_6e94c6a0_185;
    v54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v54) | 32);
    addr_6e94c67d_203:
    if (0) {
        if (v28) {
            addr_6e94cd6f_205:
            eax198 = v36 + 8;
            v88 = eax198;
            below_or_equal199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax198) <= reinterpret_cast<unsigned char>(7));
        } else {
            goto addr_6e94c6a0_185;
        }
    } else {
        if (0) {
            if (v28) 
                goto addr_6e94c6a0_185; else 
                goto addr_6e94cd6f_205;
        }
        if (!1) {
            goto addr_6e94c6a0_185;
        }
        if ((reinterpret_cast<unsigned char>(v36) & 15) == 4) {
            addr_6e94c6a0_185:
            if (!ebp27 && (reinterpret_cast<unsigned char>(v87) | reinterpret_cast<unsigned char>(v88) | reinterpret_cast<unsigned char>(v86) | reinterpret_cast<unsigned char>(edx53) && (*reinterpret_cast<unsigned char*>(&v54) & 32 || !1))) {
                v54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v54) | 16);
                goto addr_6e94c6d0_213;
            }
        } else {
            eax200 = v36 + 4;
            v88 = eax200;
            below_or_equal199 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax200) <= reinterpret_cast<unsigned char>(3));
        }
    }
    ecx201 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal199)));
    eax202 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v87) + reinterpret_cast<unsigned char>(ecx201));
    v87 = eax202;
    ecx203 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx201) > reinterpret_cast<unsigned char>(eax202)))));
    eax204 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v86) + reinterpret_cast<unsigned char>(ecx203));
    v86 = eax204;
    edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) + static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx203) > reinterpret_cast<unsigned char>(eax204))));
    v85 = edx53;
    goto addr_6e94c6a0_185;
    addr_6e94c6d0_213:
    if (!(reinterpret_cast<unsigned char>(edx53) & 0x80000) || (++ebp27, v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) & 0xfff7ffff), ebp27 != 0x7fff)) {
        addr_6e94c6ed_216:
        edx205 = ebp27;
        *reinterpret_cast<uint16_t*>(&edx205) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx205) & 0x7fff);
    } else {
        if (1) {
            addr_6e94ce70_218:
            v85 = reinterpret_cast<void**>(0);
            edx205 = reinterpret_cast<void**>(0x7fff);
            v86 = reinterpret_cast<void**>(0);
            v87 = reinterpret_cast<void**>(0);
            v88 = reinterpret_cast<void**>(0);
        } else {
            if (0) {
                if (v28) {
                    addr_6e94ccd3_221:
                    v85 = reinterpret_cast<void**>(0xffffffff);
                    edx205 = reinterpret_cast<void**>(0x7ffe);
                    v86 = reinterpret_cast<void**>(0xffffffff);
                    ebp27 = reinterpret_cast<void**>(0x7ffe);
                    v87 = reinterpret_cast<void**>(0xffffffff);
                    v88 = reinterpret_cast<void**>(0xffffffff);
                } else {
                    goto addr_6e94ce70_218;
                }
            } else {
                if (!0) 
                    goto addr_6e94ccd3_221;
                if (!v28) 
                    goto addr_6e94ccd3_221;
                goto addr_6e94ce70_218;
            }
        }
        v54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v54) | 40);
    }
    eax206 = edi92;
    esi207 = esp14 + 0x7c;
    while (eax206 = eax206 + 4, eax206 != esi207) {
    }
    eax208 = reinterpret_cast<unsigned char>(v85) >> 3;
    if (ebp27 == 0x7fff) {
        ebp209 = eax208 | 0x8000;
        zf210 = (reinterpret_cast<unsigned char>(v87) | reinterpret_cast<unsigned char>(v88) | reinterpret_cast<unsigned char>(v86) | eax208) == 0;
        eax208 = 0;
        if (!zf210) {
            eax208 = ebp209;
        }
    }
    *reinterpret_cast<int16_t*>(&v211) = *reinterpret_cast<int16_t*>(&eax208);
    eax212 = v213;
    *reinterpret_cast<uint16_t*>(&eax212) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax212) & 0x8000);
    eax214 = eax212 | reinterpret_cast<unsigned char>(edx205);
    *reinterpret_cast<uint16_t*>(&v211 + 2) = *reinterpret_cast<uint16_t*>(&eax214);
    *reinterpret_cast<uint16_t*>(&eax214) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax214) >> 8);
    eax215 = eax214 & 0x7f | static_cast<uint32_t>(v26) << 7;
    *reinterpret_cast<signed char*>(&v211 + 3) = *reinterpret_cast<signed char*>(&eax215);
    if (v54) {
        fun_6e9478b0(v54);
    }
    *reinterpret_cast<void***>(a1) = v88;
    *reinterpret_cast<void***>(a1 + 4) = v87;
    *reinterpret_cast<void***>(a1 + 8) = v86;
    *reinterpret_cast<void***>(a1 + 12) = v211;
    goto v13;
    addr_6e94d97a_24:
    tmp32_216 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint32_t>(ebx58));
    tmp32_217 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) + reinterpret_cast<unsigned char>(ebp56) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_216) < reinterpret_cast<unsigned char>(v47)));
    tmp32_218 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) + reinterpret_cast<unsigned char>(v57) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_217) < reinterpret_cast<unsigned char>(v34)));
    ebp27 = v45;
    v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) + reinterpret_cast<unsigned char>(esi38) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_218) < reinterpret_cast<unsigned char>(v43)));
    v86 = tmp32_218;
    v87 = tmp32_217;
    v88 = tmp32_216;
    addr_6e94d265_48:
    edx53 = v85;
    if (reinterpret_cast<unsigned char>(edx53) & 0x80000) {
        ++ebp27;
        v219 = reinterpret_cast<unsigned char>(edx53) & 0xfff7ffff;
        eax220 = reinterpret_cast<void*>(esp14 + 0x74);
        edi221 = reinterpret_cast<void*>(esp14 + 0x7c);
        esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v88) << 31);
        while (eax220 != edi221) {
            eax220 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax220) + 4);
        }
        eax222 = 0;
        edx53 = reinterpret_cast<void**>(v219 >> 1);
        *reinterpret_cast<unsigned char*>(&eax222) = reinterpret_cast<uint1_t>(!!esi38);
        v36 = reinterpret_cast<void**>(eax222 | reinterpret_cast<unsigned char>(v88));
        eax223 = v36;
        v85 = edx53;
        v88 = eax223;
        if (reinterpret_cast<int1_t>(ebp27 == 0x7fff)) 
            goto addr_6e94d471_241;
    } else {
        edi92 = esp14 + 0x70;
        v36 = v88;
        eax91 = reinterpret_cast<unsigned char>(v88) & 7;
        goto addr_6e94c66b_54;
    }
    addr_6e94c94d_243:
    eax91 = reinterpret_cast<unsigned char>(eax223) & 7;
    edi92 = esp14 + 0x70;
    goto addr_6e94c66b_54;
    addr_6e94d471_241:
    if (1) 
        goto addr_6e94d812_244;
    if (0) {
        if (v28) {
            addr_6e94d494_247:
            v85 = reinterpret_cast<void**>(0xffffffff);
            eax91 = 7;
            ebp27 = reinterpret_cast<void**>(0x7ffe);
            v86 = reinterpret_cast<void**>(0xffffffff);
            v87 = reinterpret_cast<void**>(0xffffffff);
            v88 = reinterpret_cast<void**>(0xffffffff);
            v36 = reinterpret_cast<void**>(0xffffffff);
        } else {
            addr_6e94d812_244:
            v85 = reinterpret_cast<void**>(0);
            eax91 = 0;
            v86 = reinterpret_cast<void**>(0);
            v87 = reinterpret_cast<void**>(0);
            v88 = reinterpret_cast<void**>(0);
            v36 = reinterpret_cast<void**>(0);
        }
        v54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v54) | 40);
        edx53 = v36;
        edi92 = esp14 + 0x70;
        goto addr_6e94c66b_54;
    } else {
        if (!0) 
            goto addr_6e94d494_247;
        if (!v28) 
            goto addr_6e94d494_247;
        goto addr_6e94d812_244;
    }
    addr_6e94dfce_68:
    if (reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v98) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(esi38)) {
        ebp224 = reinterpret_cast<void*>(esp14 + 80);
        ebx225 = reinterpret_cast<void*>(esp14 + 92);
        while (ebp224 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp224) + 4), ebp224 != ebx225) {
        }
        eax226 = edi42;
        edi227 = esp14 + 0x6c;
        ebx228 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) >> 3);
        while (eax226 = eax226 + 4, eax226 != edi227) {
        }
        esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) >> 3);
        if (reinterpret_cast<unsigned char>(ebx228) <= reinterpret_cast<unsigned char>(esi38)) 
            goto addr_6e94e2a3_259;
    } else {
        edx53 = ebx95;
        ebp27 = reinterpret_cast<void**>(0x7fff);
        v87 = ecx94;
        v85 = ebx95;
        v88 = v36;
        eax91 = 0;
        v86 = v96;
        edi92 = esp14 + 0x70;
        goto addr_6e94c66b_54;
    }
    eax229 = v37;
    ebp230 = v30;
    ecx231 = v22;
    addr_6e94e345_262:
    v232 = eax229;
    edx233 = ebp230;
    v87 = ecx231;
    v86 = ebp230;
    addr_6e94e2c9_263:
    edi92 = esp14 + 0x70;
    eax234 = esp14 + 0x7c;
    while (eax234 = eax234 - 4, v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx233) >> 29 | reinterpret_cast<unsigned char>(ebx228) << 3), eax234 != edi92) {
        ebx228 = v86;
        edx233 = v87;
    }
    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v232) << 3);
    ebp27 = reinterpret_cast<void**>(0x7fff);
    edx53 = v85;
    goto addr_6e94c6a0_185;
    addr_6e94e2a3_259:
    if (ebx228 != esi38) {
        edx235 = v34;
        edi236 = v43;
        goto addr_6e94e2b1_268;
    }
    ebp230 = v30;
    edi236 = v43;
    if (reinterpret_cast<unsigned char>(ebp230) > reinterpret_cast<unsigned char>(edi236)) {
        eax229 = v37;
        ecx231 = v22;
        goto addr_6e94e345_262;
    } else {
        if (ebp230 != edi236) {
            edx235 = v34;
            goto addr_6e94e2b1_268;
        }
        ecx231 = v22;
        edx235 = v34;
        if (reinterpret_cast<unsigned char>(ecx231) > reinterpret_cast<unsigned char>(edx235)) 
            goto addr_6e94e439_274;
    }
    if (ecx231 != edx235 || (eax229 = v37, reinterpret_cast<unsigned char>(eax229) <= reinterpret_cast<unsigned char>(v48))) {
        addr_6e94e2b1_268:
        ebx228 = esi38;
        v87 = edx235;
        edx233 = edi236;
        v86 = edi236;
        v232 = v48;
        goto addr_6e94e2c9_263;
    } else {
        goto addr_6e94e345_262;
    }
    addr_6e94e439_274:
    eax229 = v37;
    goto addr_6e94e345_262;
    addr_6e94db1c_69:
    *reinterpret_cast<int16_t*>(&ebp27) = 0x7fff;
    v87 = esi38;
    v85 = edx53;
    v88 = v47;
    v86 = v98;
    eax91 = 0;
    v36 = v47;
    edi92 = esp14 + 0x70;
    goto addr_6e94c66b_54;
    addr_6e94d841_81:
    if (1) 
        goto addr_6e94db56_277;
    if (0) {
        if (v28) {
            addr_6e94d864_280:
            v85 = reinterpret_cast<void**>(0xffffffff);
            edx53 = reinterpret_cast<void**>(0xffffffff);
            ebp27 = reinterpret_cast<void**>(0x7ffe);
            v86 = reinterpret_cast<void**>(0xffffffff);
            edi92 = esp14 + 0x70;
            v87 = reinterpret_cast<void**>(0xffffffff);
            v88 = reinterpret_cast<void**>(0xffffffff);
            v54 = reinterpret_cast<void**>(40);
            v36 = reinterpret_cast<void**>(0xffffffff);
            goto addr_6e94c67d_203;
        } else {
            addr_6e94db56_277:
            v85 = reinterpret_cast<void**>(0);
            ebp27 = reinterpret_cast<void**>(0x7fff);
            v86 = reinterpret_cast<void**>(0);
            edi92 = esp14 + 0x70;
            v87 = reinterpret_cast<void**>(0);
            v88 = reinterpret_cast<void**>(0);
            v54 = reinterpret_cast<void**>(40);
            goto addr_6e94c6ed_216;
        }
    } else {
        if (!0) 
            goto addr_6e94d864_280;
        if (!v28) 
            goto addr_6e94d864_280;
        goto addr_6e94db56_277;
    }
    addr_6e94d509_82:
    eax91 = reinterpret_cast<unsigned char>(v36) & 7;
    ebp27 = ecx93;
    v54 = reinterpret_cast<void**>(0);
    edi92 = esp14 + 0x70;
    goto addr_6e94c66b_54;
    addr_6e94c64e_88:
    v86 = eax116;
    v87 = ecx117;
    v85 = edx53;
    v88 = v36;
    eax91 = 0;
    edi92 = esp14 + 0x70;
    goto addr_6e94c66b_54;
    addr_6e94d239_96:
    tmp32_237 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) + reinterpret_cast<unsigned char>(esi38));
    tmp32_238 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) + reinterpret_cast<unsigned char>(v122) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_237) < reinterpret_cast<unsigned char>(v36)));
    tmp32_239 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v123) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_238) < reinterpret_cast<unsigned char>(v22)));
    v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) + reinterpret_cast<unsigned char>(edi121) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_239) < reinterpret_cast<unsigned char>(v30)));
    v86 = tmp32_239;
    v87 = tmp32_238;
    v88 = tmp32_237;
    goto addr_6e94d265_48;
    addr_6e94c9c4_118:
    edi92 = esp14 + 0x70;
    v87 = ecx146;
    v86 = ebx145;
    v85 = edx53;
    v88 = v36;
    eax91 = 0;
    goto addr_6e94c66b_54;
    addr_6e94d177_132:
    cf240 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v34) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v150) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(ebp151))));
    cf241 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi38) + cf240));
    v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v34) - (reinterpret_cast<unsigned char>(v150) + cf240));
    v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) - (reinterpret_cast<unsigned char>(edi149) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v44) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi149) + cf241))));
    ebp27 = v45;
    v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - (reinterpret_cast<unsigned char>(esi38) + cf241));
    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - reinterpret_cast<unsigned char>(ebp151));
    v28 = v49;
    addr_6e94c925_157:
    edx53 = v85;
    if (reinterpret_cast<unsigned char>(edx53) & 0x80000) {
        edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx53) & 0x7ffff);
        v85 = edx53;
        if (edx53) {
            addr_6e94cb4b_285:
            __asm__("bsr edx, edx");
            edx242 = reinterpret_cast<struct s32*>(reinterpret_cast<unsigned char>(edx53) ^ 31);
        } else {
            addr_6e94cc94_286:
            if (!v86) {
                if (!v87) {
                    __asm__("bsr edx, [esp+0x70]");
                    edx242 = reinterpret_cast<struct s32*>((reinterpret_cast<unsigned char>(edx53) ^ 31) + 96);
                } else {
                    __asm__("bsr eax, eax");
                    edx242 = reinterpret_cast<struct s32*>((reinterpret_cast<unsigned char>(v87) ^ 31) + 64);
                }
            } else {
                __asm__("bsr eax, eax");
                edx242 = reinterpret_cast<struct s32*>((reinterpret_cast<unsigned char>(v86) ^ 31) + 32);
            }
        }
        ebx243 = reinterpret_cast<void**>(&edx242->f19);
        edx244 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx242) - 12);
        if (reinterpret_cast<signed char>(edx244) >= reinterpret_cast<signed char>(0)) {
            ebx243 = edx244;
        }
        eax245 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(reinterpret_cast<signed char>(edx244) >> 31) >> 27);
        ebx246 = reinterpret_cast<void**>(reinterpret_cast<signed char>(ebx243) >> 5);
        edi247 = (reinterpret_cast<unsigned char>(edx244) + reinterpret_cast<uint32_t>(eax245) & 31) - reinterpret_cast<uint32_t>(eax245);
        v248 = edx244;
        v249 = ebx246;
        v250 = edi247;
        if (!edi247) {
            if (reinterpret_cast<signed char>(ebx246) > reinterpret_cast<signed char>(3)) {
                ebx251 = reinterpret_cast<void**>(3);
                edi92 = esp14 + 0x70;
            } else {
                eax252 = esp14 + 0x7c;
                ecx253 = esp14 + reinterpret_cast<unsigned char>(ebx246) * 4 + 0x6c;
                edx254 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(ebx246)) << 2);
                do {
                    eax252 = eax252 - 4;
                    v85 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax252) + reinterpret_cast<uint32_t>(edx254));
                } while (eax252 != ecx253);
                ebx251 = ebx246 - 1;
                edi92 = esp14 + 0x70;
                goto addr_6e94cbe7_299;
            }
        } else {
            if (reinterpret_cast<signed char>(ebx246) > reinterpret_cast<signed char>(2)) {
                ebx251 = reinterpret_cast<void**>(2);
                v249 = reinterpret_cast<void**>(3);
                edi92 = esp14 + 0x70;
            } else {
                edi255 = esp14 + 0x70;
                eax256 = edi255 + (3 - reinterpret_cast<unsigned char>(ebx246)) * 4;
                v257 = 32 - v250;
                edi258 = ebp27;
                ebp259 = edi255;
                do {
                    ecx260 = *reinterpret_cast<unsigned char*>(&v257);
                    ecx261 = *reinterpret_cast<unsigned char*>(&v250);
                    eax256[reinterpret_cast<unsigned char>(ebx246) * 4] = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(eax256 - 4) >> *reinterpret_cast<signed char*>(&ecx260) | reinterpret_cast<unsigned char>(*eax256) << *reinterpret_cast<unsigned char*>(&ecx261));
                    eax256 = eax256 - 4;
                } while (eax256 != ebp259);
                ebx251 = ebx246 - 1;
                ebp27 = edi258;
                edi92 = ebp259;
            }
            ecx262 = *reinterpret_cast<unsigned char*>(&v250);
            *reinterpret_cast<uint32_t*>(esp14 + reinterpret_cast<unsigned char>(v249) * 4 + 0x70) = reinterpret_cast<unsigned char>(v88) << *reinterpret_cast<unsigned char*>(&ecx262);
            goto addr_6e94cbe7_299;
        }
    } else {
        v36 = v88;
        eax263 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v28)) & 1;
        v26 = *reinterpret_cast<unsigned char*>(&eax263);
        eax223 = v88;
        goto addr_6e94c94d_243;
    }
    do {
        addr_6e94cbf0_307:
        edi92[reinterpret_cast<unsigned char>(ebx251) * 4] = reinterpret_cast<void**>(0);
        --ebx251;
    } while (reinterpret_cast<signed char>(ebx251) >= reinterpret_cast<signed char>(0));
    goto addr_6e94cbfc_308;
    addr_6e94cbe7_299:
    if (reinterpret_cast<signed char>(ebx251) < reinterpret_cast<signed char>(0)) {
        addr_6e94cbfc_308:
        if (reinterpret_cast<signed char>(ebp27) > reinterpret_cast<signed char>(v248)) {
            ebp27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp27) - reinterpret_cast<unsigned char>(v248));
            v36 = v88;
            edx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v85) & 0xfff7ffff);
            v85 = edx53;
            eax264 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v28)) & 1;
            v26 = *reinterpret_cast<unsigned char*>(&eax264);
            eax91 = reinterpret_cast<unsigned char>(v88) & 7;
            goto addr_6e94c66b_54;
        } else {
            edx265 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v248) - reinterpret_cast<unsigned char>(ebp27));
            eax266 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx265) + 32);
            edx267 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx265) + 1);
            if (reinterpret_cast<int32_t>(edx267) >= reinterpret_cast<int32_t>(0)) {
                eax266 = edx267;
            }
            edx268 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx267) >> 31) >> 27);
            eax269 = reinterpret_cast<int32_t>(eax266) >> 5;
            v270 = (reinterpret_cast<uint32_t>(edx267) + reinterpret_cast<uint32_t>(edx268) & 31) - reinterpret_cast<uint32_t>(edx268);
            if (reinterpret_cast<uint1_t>(eax269 < 0) | reinterpret_cast<uint1_t>(eax269 == 0)) {
                esi271 = 0;
                edx272 = 0;
            } else {
                edx273 = edi92;
                esi271 = 0;
                ecx274 = edi92 + eax269 * 4;
                do {
                    esi271 = esi271 | reinterpret_cast<unsigned char>(v275);
                    edx273 = edx273 + 4;
                } while (edx273 != ecx274);
                edx272 = eax269;
            }
            if (v270) {
                edx276 = *reinterpret_cast<uint32_t*>(esp14 + edx272 * 4 + 0x70);
                v277 = 32 - v270;
                ecx278 = *reinterpret_cast<unsigned char*>(&v277);
                v279 = 3 - eax269;
                esi271 = esi271 | edx276 << *reinterpret_cast<unsigned char*>(&ecx278);
                if (reinterpret_cast<uint1_t>(v279 < 0) | reinterpret_cast<uint1_t>(v279 == 0)) {
                    edx280 = 1;
                    v279 = 0;
                } else {
                    edx281 = edi92;
                    v282 = edi92 + v279 * 4;
                    ebp283 = esi271;
                    do {
                        edx281 = edx281 + 4;
                    } while (edx281 != v282);
                    esi271 = ebp283;
                    edx280 = 4 - eax269;
                }
                ecx284 = *reinterpret_cast<unsigned char*>(&v270);
                *reinterpret_cast<uint32_t*>(esp14 + v279 * 4 + 0x70) = reinterpret_cast<unsigned char>(v85) >> *reinterpret_cast<signed char*>(&ecx284);
            } else {
                ecx285 = 3 - eax269;
                if (ecx285 < 0) {
                    edx280 = 0;
                    goto addr_6e94cfb1_326;
                } else {
                    edx286 = edi92;
                    ecx287 = esp14 + ecx285 * 4 + 0x74;
                    do {
                        edx286 = edx286 + 4;
                    } while (edx286 != ecx287);
                    edx280 = 4 - eax269;
                }
            }
            while (edx280 <= 3) {
                addr_6e94cfb1_326:
                edi92[edx280 * 4] = reinterpret_cast<void**>(0);
                ++edx280;
            }
            eax288 = 0;
            edx53 = v85;
            *reinterpret_cast<unsigned char*>(&eax288) = reinterpret_cast<uint1_t>(!!esi271);
            ebp27 = reinterpret_cast<void**>(0);
            v36 = reinterpret_cast<void**>(eax288 | reinterpret_cast<unsigned char>(v88));
            eax289 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v28)) & 1;
            v26 = *reinterpret_cast<unsigned char*>(&eax289);
            v88 = v36;
            eax91 = reinterpret_cast<unsigned char>(v36) & 7;
            goto addr_6e94c66b_54;
        }
    } else {
        goto addr_6e94cbf0_307;
    }
    addr_6e94dbf1_155:
    ebp27 = reinterpret_cast<void**>(0x7fff);
    v87 = ebx175;
    v86 = ecx174;
    eax290 = reinterpret_cast<unsigned char>(v49) & 1;
    v26 = *reinterpret_cast<unsigned char*>(&eax290);
    v88 = v47;
    eax91 = 0;
    v36 = v47;
    edi92 = esp14 + 0x70;
    v85 = edx53;
    v28 = v49;
    goto addr_6e94c66b_54;
    addr_6e94dcf7_174:
    esi38 = v43;
    ebx291 = v34;
    edx53 = v44;
    if (reinterpret_cast<unsigned char>(esi38) | reinterpret_cast<unsigned char>(ebx291) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(v47)) {
        eax292 = reinterpret_cast<void**>(1);
        if (reinterpret_cast<unsigned char>(edx53) & 0x40000) {
            eax292 = v54;
        }
        v54 = eax292;
        if (ecx184) 
            goto addr_6e94de14_336;
    } else {
        if (!ecx184) {
            addr_6e94d732_338:
            edi92 = esp14 + 0x70;
            v86 = reinterpret_cast<void**>(0);
            eax293 = esp14 + 0x7c;
            ecx294 = reinterpret_cast<void**>(0x8000);
            v87 = reinterpret_cast<void**>(0);
            goto addr_6e94d761_339;
        } else {
            goto addr_6e94da54_341;
        }
    }
    addr_6e94dd84_342:
    v86 = esi38;
    ebp27 = reinterpret_cast<void**>(0x7fff);
    v87 = ebx291;
    v85 = edx53;
    eax295 = reinterpret_cast<unsigned char>(v49) & 1;
    v26 = *reinterpret_cast<unsigned char*>(&eax295);
    v88 = v47;
    eax91 = 0;
    v36 = v47;
    edi92 = esp14 + 0x70;
    v28 = v49;
    goto addr_6e94c66b_54;
    addr_6e94d761_339:
    while (eax293 = eax293 - 4, v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx294) << 3), eax293 != edi92) {
        ecx294 = reinterpret_cast<void**>(0);
    }
    v88 = reinterpret_cast<void**>(0);
    ebp27 = reinterpret_cast<void**>(0x7fff);
    edx53 = v85;
    v26 = 1;
    v28 = reinterpret_cast<void**>(1);
    v54 = reinterpret_cast<void**>(1);
    goto addr_6e94c6a0_185;
    addr_6e94d70c_175:
    esi38 = v43;
    edx53 = v44;
    ebx291 = v34;
    eax296 = reinterpret_cast<unsigned char>(esi38) | reinterpret_cast<unsigned char>(edx53) | reinterpret_cast<unsigned char>(ebx291) | reinterpret_cast<unsigned char>(v47);
    if (ecx184) {
        if (eax296) {
            addr_6e94de14_336:
            ebp297 = reinterpret_cast<void*>(esp14 + 80);
            ecx298 = reinterpret_cast<void*>(esp14 + 92);
        } else {
            addr_6e94da54_341:
            edx53 = ebp182;
            v85 = ebp182;
            ebp27 = reinterpret_cast<void**>(0x7fff);
            v87 = v181;
            v88 = v36;
            eax91 = 0;
            v86 = v183;
            edi92 = esp14 + 0x70;
            goto addr_6e94c66b_54;
        }
    } else {
        if (eax296) 
            goto addr_6e94dd84_342; else 
            goto addr_6e94d732_338;
    }
    while (ebp297 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp297) + 4), ebp297 != ecx298) {
    }
    eax299 = edi42;
    ecx300 = esp14 + 0x6c;
    esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) >> 3);
    while (eax299 = eax299 + 4, eax299 != ecx300) {
    }
    ebx301 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) >> 3);
    if (reinterpret_cast<unsigned char>(esi38) <= reinterpret_cast<unsigned char>(ebx301)) {
        if (esi38 != ebx301) {
            edx302 = v34;
            edi303 = v43;
            goto addr_6e94e093_355;
        }
        ebp304 = v30;
        edi303 = v43;
        if (reinterpret_cast<unsigned char>(ebp304) > reinterpret_cast<unsigned char>(edi303)) 
            goto addr_6e94e39b_357;
    } else {
        eax305 = v37;
        ebp304 = v30;
        ecx306 = v22;
        goto addr_6e94de85_359;
    }
    if (ebp304 != edi303) {
        edx302 = v34;
        goto addr_6e94e093_355;
    }
    ecx306 = v22;
    edx302 = v34;
    if (reinterpret_cast<unsigned char>(ecx306) > reinterpret_cast<unsigned char>(edx302)) 
        goto addr_6e94e44e_363;
    if (ecx306 != edx302 || (eax305 = v37, reinterpret_cast<unsigned char>(eax305) <= reinterpret_cast<unsigned char>(v48))) {
        addr_6e94e093_355:
        ebp304 = edi303;
        esi38 = ebx301;
        v87 = edx302;
        v86 = edi303;
        v307 = v48;
        v28 = v49;
    } else {
        goto addr_6e94de85_359;
    }
    addr_6e94de95_366:
    edi92 = esp14 + 0x70;
    edx308 = ebp304;
    eax309 = esp14 + 0x7c;
    while (eax309 = eax309 - 4, v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx308) >> 29 | reinterpret_cast<unsigned char>(esi38) * 8), eax309 != edi92) {
        esi38 = v86;
        edx308 = v87;
    }
    ebp27 = reinterpret_cast<void**>(0x7fff);
    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v307) << 3);
    edx53 = v85;
    eax310 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v28)) & 1;
    v26 = *reinterpret_cast<unsigned char*>(&eax310);
    goto addr_6e94c6a0_185;
    addr_6e94de85_359:
    v307 = eax305;
    v87 = ecx306;
    v86 = ebp304;
    goto addr_6e94de95_366;
    addr_6e94e44e_363:
    eax305 = v37;
    goto addr_6e94de85_359;
    addr_6e94e39b_357:
    eax305 = v37;
    ecx306 = v22;
    goto addr_6e94de85_359;
    addr_6e94cb43_190:
    if (!edx53) 
        goto addr_6e94cc94_286; else 
        goto addr_6e94cb4b_285;
    addr_6e94c73c_196:
    if (reinterpret_cast<int32_t>(eax147) > reinterpret_cast<int32_t>(0x74)) {
        edi311 = v44;
        v312 = v34;
        esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) | reinterpret_cast<unsigned char>(v34) | reinterpret_cast<unsigned char>(edi311) | reinterpret_cast<unsigned char>(v47));
        v313 = v43;
        if (esi38) {
            esi38 = reinterpret_cast<void**>(1);
            edi311 = reinterpret_cast<void**>(0);
            v312 = reinterpret_cast<void**>(0);
            v313 = reinterpret_cast<void**>(0);
        }
    } else {
        ebx314 = reinterpret_cast<int32_t>(eax147) >> 5;
        v315 = reinterpret_cast<uint32_t>(eax147) & 31;
        if (!ebx314) {
            eax316 = 0;
            esi317 = 0;
        } else {
            eax318 = esp14 + 100;
            edx319 = edi42 + ebx314 * 4;
            esi317 = reinterpret_cast<unsigned char>(v47);
            if (eax318 != edx319) {
                do {
                    eax318 = eax318 + 4;
                    esi317 = esi317 | reinterpret_cast<unsigned char>(v320);
                } while (eax318 != edx319);
            }
            eax316 = ebx314;
        }
        if (v315) {
            eax321 = *reinterpret_cast<uint32_t*>(esp14 + eax316 * 4 + 96);
            v322 = 32 - v315;
            ecx323 = *reinterpret_cast<unsigned char*>(&v322);
            esi317 = esi317 | eax321 << *reinterpret_cast<unsigned char*>(&ecx323);
            eax324 = 3 - ebx314;
            v325 = eax324;
            if (!eax324) {
                eax326 = 1;
            } else {
                eax327 = edi42;
                v328 = edi42 + eax324 * 4;
                v329 = esi317;
                do {
                    eax327 = eax327 + 4;
                } while (eax327 != v328);
                esi317 = v329;
                eax326 = 4 - ebx314;
            }
            ecx330 = *reinterpret_cast<unsigned char*>(&v315);
            *reinterpret_cast<uint32_t*>(esp14 + v325 * 4 + 96) = reinterpret_cast<unsigned char>(v44) >> *reinterpret_cast<signed char*>(&ecx330);
        } else {
            eax331 = edi42;
            edx332 = esp14 + (3 - ebx314) * 4 + 100;
            do {
                eax331 = eax331 + 4;
            } while (eax331 != edx332);
            eax326 = 4 - ebx314;
        }
        if (eax326 != 4) {
            esi317 = esi317;
            do {
                edi42[eax326 * 4] = reinterpret_cast<void**>(0);
                ++eax326;
            } while (eax326 <= 3);
        }
        eax333 = 0;
        *reinterpret_cast<unsigned char*>(&eax333) = reinterpret_cast<uint1_t>(!!esi317);
        edi311 = v44;
        esi38 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v48) | eax333);
        v313 = v43;
        v312 = v34;
    }
    cf334 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v22) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v312) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v36) < reinterpret_cast<unsigned char>(esi38))));
    cf335 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v313) + cf334));
    v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) - (reinterpret_cast<unsigned char>(edi311) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v31) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi311) + cf335))));
    v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v313) + cf335));
    v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) - (reinterpret_cast<unsigned char>(v312) + cf334));
    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) - reinterpret_cast<unsigned char>(esi38));
    goto addr_6e94c925_157;
    addr_6e94cf13_199:
    v54 = reinterpret_cast<void**>(2);
    if (reinterpret_cast<int1_t>(ebp27 == 0x7fff)) {
        goto addr_6e94c999_116;
    }
    addr_6e94c8e9_200:
    v54 = reinterpret_cast<void**>(2);
    cf336 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v22) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v34) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v36) < reinterpret_cast<unsigned char>(v47))));
    cf337 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v43) + cf336));
    v85 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) - (reinterpret_cast<unsigned char>(v44) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v31) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v44) + cf337))));
    ebp27 = ebp27;
    v86 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v43) + cf337));
    v87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) - (reinterpret_cast<unsigned char>(v34) + cf336));
    v88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) - reinterpret_cast<unsigned char>(v47));
    goto addr_6e94c925_157;
}

uint32_t __netf2(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** ecx13;
    uint32_t edx14;
    uint32_t ecx15;
    uint32_t v16;
    void** eax17;
    void** esi18;
    uint32_t v19;
    uint32_t eax20;
    uint32_t ecx21;
    uint32_t ebx22;
    uint32_t eax23;

    ecx13 = a4;
    edx14 = reinterpret_cast<unsigned char>(ecx13) >> 16 & 0x7fff;
    ecx15 = reinterpret_cast<unsigned char>(ecx13) >> 24;
    v16 = *reinterpret_cast<uint16_t*>(&ecx13);
    eax17 = a8;
    esi18 = eax17;
    v19 = *reinterpret_cast<uint16_t*>(&eax17);
    eax20 = reinterpret_cast<unsigned char>(eax17) >> 24;
    ecx21 = reinterpret_cast<unsigned char>(eax17) >> 16 & 0x7fff;
    *reinterpret_cast<unsigned char*>(&eax20) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax20) >> 7);
    ebx22 = eax20;
    if (edx14 != 0x7fff || !(reinterpret_cast<unsigned char>(a2) | reinterpret_cast<unsigned char>(a1) | reinterpret_cast<unsigned char>(a3) | v16)) {
        if (ecx21 == 0x7fff && reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(a5) | reinterpret_cast<unsigned char>(a7) | v19) {
            if (edx14 != 0x7fff) 
                goto addr_6e94aa08_4;
            goto addr_6e94aa60_6;
        }
        if (edx14 != ecx21) 
            goto addr_6e94aa00_8;
        if (a1 != a5) 
            goto addr_6e94aa00_8;
        if (a2 != a6) 
            goto addr_6e94aa00_8;
        if (a3 != a7) 
            goto addr_6e94aa00_8;
        if (v16 == v19) 
            goto addr_6e94aad2_13;
    } else {
        if (*reinterpret_cast<int16_t*>(&ecx13) < reinterpret_cast<int16_t>(0)) 
            goto addr_6e94aa08_4; else 
            goto addr_6e94aa38_15;
    }
    addr_6e94aa00_8:
    if (edx14 == 0x7fff) {
        addr_6e94aa60_6:
        if (!(v16 | (reinterpret_cast<unsigned char>(a1) | reinterpret_cast<unsigned char>(a2) | reinterpret_cast<unsigned char>(a3)))) {
            if (ecx21 != 0x7fff) 
                goto addr_6e94aa10_17; else 
                goto addr_6e94aa78_18;
        }
    } else {
        addr_6e94aa08_4:
        if (ecx21 == 0x7fff) {
            addr_6e94aa78_18:
            eax23 = 1;
            if (!(v19 | (reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(a5) | reinterpret_cast<unsigned char>(a7)))) {
                addr_6e94aa15_19:
                return eax23;
            } else {
                if (*reinterpret_cast<int16_t*>(&esi18) >= 0) {
                    addr_6e94aa38_15:
                    fun_6e9478b0(1);
                    goto addr_6e94aa10_17;
                } else {
                    goto addr_6e94aa15_19;
                }
            }
        } else {
            addr_6e94aa10_17:
            eax23 = 1;
            goto addr_6e94aa15_19;
        }
    }
    addr_6e94aad2_13:
    eax23 = 0;
    if (*reinterpret_cast<unsigned char*>(&ecx15) >> 7 == *reinterpret_cast<unsigned char*>(&ebx22)) 
        goto addr_6e94aa15_19;
    if (edx14) 
        goto addr_6e94aa00_8;
    if (!(v16 | (reinterpret_cast<unsigned char>(a1) | reinterpret_cast<unsigned char>(a2) | reinterpret_cast<unsigned char>(a3)))) {
        eax23 = edx14;
        goto addr_6e94aa15_19;
    }
}

void fun_6e947820(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    void** v13;
    uint32_t edx14;

    v13 = a8;
    edx14 = reinterpret_cast<unsigned char>(a8) >> 24 & 0x7f | reinterpret_cast<unsigned char>(a12) >> 24 & 0xffffff80;
    *reinterpret_cast<signed char*>(&v13 + 3) = *reinterpret_cast<signed char*>(&edx14);
    *reinterpret_cast<void***>(a1) = a5;
    *reinterpret_cast<void***>(a1 + 4) = a6;
    *reinterpret_cast<void***>(a1 + 8) = a7;
    *reinterpret_cast<void***>(a1 + 12) = v13;
    return;
}

struct s33 {
    void** f0;
    signed char[11] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
    signed char[3] pad44;
    void** f44;
    signed char[3] pad48;
    void** f48;
    signed char[11] pad60;
    void** f60;
    signed char[3] pad64;
    void*** f64;
    signed char[79] pad147;
    unsigned char f147;
};

struct s34 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s35 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s36 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
};

struct s37 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s38 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s39 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s40 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s41 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s42 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s43 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s44 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s45 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s46 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    signed char[20] pad32;
    int32_t f32;
    int32_t f36;
    int32_t f40;
};

struct s47 {
    int32_t f0;
    int32_t f4;
    signed char[4] pad12;
    void** f12;
};

void __divtf3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12) {
    int32_t v13;
    struct s33* esp14;
    void** ebx15;
    void** v16;
    void** v17;
    void** edx18;
    void** eax19;
    void** v20;
    void** edi21;
    void** esi22;
    uint32_t eax23;
    unsigned char al24;
    unsigned char v25;
    void** v26;
    uint32_t eax27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    uint32_t v32;
    uint32_t eax33;
    void** ebp34;
    void** v35;
    void** v36;
    uint32_t v37;
    uint32_t edx38;
    uint32_t ebp39;
    uint32_t eax40;
    int32_t ebp41;
    uint32_t edx42;
    int32_t v43;
    uint32_t v44;
    void** esi45;
    void*** ecx46;
    void*** eax47;
    void** v48;
    void** v49;
    void** eax50;
    void** v51;
    void** v52;
    void** ecx53;
    void** edi54;
    void** ebx55;
    unsigned char bl56;
    void** edx57;
    void** esi58;
    void** v59;
    unsigned char v60;
    void** v61;
    void** ebx62;
    void** eax63;
    void** esi64;
    void** eax65;
    void** ebx66;
    uint32_t eax67;
    void** v68;
    void** eax69;
    void** ecx70;
    void** edx71;
    uint32_t v72;
    void** ebx73;
    void** eax74;
    void** esi75;
    void** edi76;
    void* ecx77;
    void* eax78;
    void** eax79;
    int32_t ebp80;
    void** edx81;
    void** v82;
    void** v83;
    void*** v84;
    uint1_t cf85;
    uint1_t cf86;
    void* edi87;
    void** v88;
    void* v89;
    uint1_t cf90;
    uint1_t cf91;
    void** ebx92;
    void** ecx93;
    void** v94;
    void** tmp32_95;
    void** edi96;
    void** edx97;
    void** tmp32_98;
    void** eax99;
    void** ebx100;
    void** edi101;
    void** v102;
    void** tmp32_103;
    void** tmp32_104;
    void** tmp32_105;
    void** ecx106;
    void** tmp32_107;
    void** tmp32_108;
    void** tmp32_109;
    uint1_t cf110;
    uint1_t cf111;
    void** tmp32_112;
    void** tmp32_113;
    void** tmp32_114;
    void** v115;
    uint32_t v116;
    uint32_t edx117;
    void** ebx118;
    void** esi119;
    void** edi120;
    uint32_t eax121;
    uint32_t eax122;
    void** v123;
    void** v124;
    void** v125;
    void** eax126;
    void** ecx127;
    void** ecx128;
    uint32_t ecx129;
    void** eax130;
    uint32_t eax131;
    uint32_t v132;
    void*** tmp32_133;
    void* tmp32_134;
    void** tmp32_135;
    void*** tmp32_136;
    void** v137;
    void*** tmp32_138;
    void*** tmp32_139;
    void** ebp140;
    void** tmp32_141;
    void** v142;
    void** edi143;
    void* edi144;
    uint32_t ebx145;
    void* edx146;
    uint32_t edx147;
    void** edx148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    void* ebx153;
    uint32_t v154;
    void* eax155;
    uint32_t eax156;
    void** v157;
    void** v158;
    uint32_t eax159;
    void** esi160;
    void** edi161;
    void** ebx162;
    void** eax163;
    void** ecx164;
    void** ecx165;
    uint32_t ecx166;
    void** eax167;
    uint32_t esi168;
    uint32_t edi169;
    int32_t ecx170;
    uint32_t ebx171;
    uint32_t edx172;
    uint32_t edx173;
    void** edi174;
    struct s34* edx175;
    struct s35* ebx176;
    void** edx177;
    uint32_t edx178;
    void** edi179;
    void** edx180;
    void** ebx181;
    int32_t ecx182;
    uint32_t ebx183;
    uint32_t edx184;
    struct s36* esp185;
    uint32_t esi186;
    int32_t ecx187;
    uint32_t edx188;
    uint32_t eax189;
    int32_t ecx190;
    uint32_t ebx191;
    uint32_t edx192;
    uint32_t esi193;
    int32_t ecx194;
    uint32_t ebx195;
    uint32_t edx196;
    uint32_t esi197;
    int32_t ecx198;
    uint32_t ebx199;
    uint32_t edx200;
    int32_t ecx201;
    uint32_t ebx202;
    uint32_t edx203;
    int32_t ecx204;
    uint32_t esi205;
    uint32_t edx206;
    uint32_t eax207;
    void** edi208;
    int32_t ecx209;
    uint32_t esi210;
    uint32_t ebx211;
    uint32_t edx212;
    struct s37* edx213;
    struct s36* esp214;
    uint32_t eax215;
    struct s18* eax216;
    void** esi217;
    struct s18* edi218;
    int32_t ecx219;
    int32_t ecx220;
    void** edi221;
    struct s18* eax222;
    struct s18* esi223;
    struct s18* edi224;
    uint32_t esi225;
    int32_t ecx226;
    uint32_t edx227;
    uint32_t eax228;
    int32_t ecx229;
    uint32_t esi230;
    uint32_t ebx231;
    uint32_t edx232;
    void** edi233;
    int32_t ecx234;
    uint32_t esi235;
    uint32_t ebx236;
    uint32_t edx237;
    void** edi238;
    uint32_t esi239;
    int32_t ecx240;
    uint32_t ebx241;
    uint32_t edx242;
    void** eax243;
    void* esi244;
    int32_t ecx245;
    uint32_t edx246;
    uint32_t eax247;
    uint32_t esi248;
    int32_t ecx249;
    uint32_t edx250;
    uint32_t eax251;
    struct s38* eax252;
    void* esi253;
    int32_t ecx254;
    uint32_t edx255;
    uint32_t eax256;
    uint32_t esi257;
    int32_t ecx258;
    uint32_t edx259;
    uint32_t eax260;
    struct s36* esp261;
    void** edx262;
    struct s39* ecx263;
    uint32_t esi264;
    int32_t ecx265;
    uint32_t edx266;
    uint32_t eax267;
    struct s36* esp268;
    void** edi269;
    uint32_t edx270;
    struct s36* esp271;
    uint32_t esi272;
    int32_t ecx273;
    uint32_t edx274;
    uint32_t eax275;
    uint32_t edi276;
    int32_t ecx277;
    uint32_t ebx278;
    uint32_t edx279;
    void** edi280;
    struct s40* edx281;
    uint32_t esi282;
    int32_t ecx283;
    uint32_t edx284;
    uint32_t eax285;
    struct s36* esp286;
    void** edx287;
    struct s41* ecx288;
    int32_t ecx289;
    uint32_t esi290;
    uint32_t edx291;
    uint32_t eax292;
    struct s42* eax293;
    void* esi294;
    int32_t ecx295;
    uint32_t edx296;
    uint32_t eax297;
    uint32_t esi298;
    int32_t ecx299;
    uint32_t ebx300;
    uint32_t edx301;
    uint32_t esi302;
    int32_t ecx303;
    uint32_t edx304;
    uint32_t eax305;
    uint32_t edi306;
    int32_t ecx307;
    uint32_t ebx308;
    uint32_t edx309;
    struct s43* edx310;
    void** edi311;
    struct s36* esp312;
    void** eax313;
    void** edx314;
    uint32_t eax315;
    uint32_t eax316;
    uint32_t eax317;
    uint32_t eax318;
    uint32_t eax319;
    struct s44* eax320;
    uint32_t eax321;
    void** esi322;
    uint32_t eax323;
    uint32_t edx324;
    struct s36* esp325;
    void** eax326;
    void** eax327;
    struct s36* esp328;
    uint32_t eax329;
    uint32_t eax330;
    uint32_t eax331;
    void** eax332;
    uint32_t eax333;
    uint32_t eax334;
    void** eax335;
    uint32_t eax336;
    struct s36* esp337;
    void** ecx338;
    void** edx339;
    int32_t ecx340;
    void** esi341;
    uint32_t ebx342;
    uint32_t eax343;
    struct s36* esp344;
    struct s36* esp345;
    uint16_t* eax346;
    void** edx347;
    void** eax348;
    uint16_t* edx349;
    int32_t edi350;
    void** edi351;
    void*** edi352;
    uint32_t edx353;
    uint32_t ebx354;
    uint32_t edx355;
    void** edx356;
    uint32_t eax357;
    uint32_t ebx358;
    uint32_t edx359;
    struct s36* esp360;
    void** eax361;
    uint32_t edx362;
    void** edx363;
    struct s26* eax364;
    struct s27* edi365;
    struct s36* esp366;
    uint32_t edx367;
    uint32_t edx368;
    uint32_t eax369;
    struct s36* esp370;
    void** edi371;
    void** edx372;
    struct s45* eax373;
    uint32_t edx374;
    void** edx375;
    void** ebx376;
    void** ebp377;
    uint32_t ebx378;
    uint32_t edx379;
    struct s36* esp380;
    void** edx381;
    void** ebx382;
    void** ebp383;
    int32_t ecx384;
    uint32_t edx385;
    uint32_t eax386;
    struct s36* esp387;
    struct s33* esp388;
    struct s36* esp389;
    void** edx390;
    void** ebx391;
    int32_t ecx392;
    void** ebp393;
    uint32_t eax394;
    uint32_t esi395;
    struct s36* esp396;
    struct s33* esp397;
    uint32_t ecx398;
    void** ebp399;
    uint32_t eax400;
    uint32_t esi401;
    struct s31* eax402;
    void* edx403;
    void* ebx404;
    void* eax405;
    void** ebx406;
    void** edx407;
    struct s36* esp408;
    struct s46* esp409;
    int1_t zf410;
    int32_t eax411;
    int32_t* ebx412;
    int32_t eax413;
    struct s47* esp414;
    int32_t eax415;
    struct s47* esp416;
    uint32_t ecx417;
    uint32_t eax418;
    void** eax419;
    void** ebx420;
    void** ecx421;
    struct s36* esp422;
    uint32_t ecx423;
    void** v424;
    uint32_t ecx425;
    uint32_t ecx426;
    void* edx427;
    uint32_t ecx428;
    void** v429;
    uint32_t ecx430;
    uint32_t ecx431;
    void* ecx432;
    uint32_t ebp433;
    uint32_t eax434;
    uint32_t eax435;
    uint32_t edx436;
    int32_t eax437;
    uint32_t ebp438;
    uint32_t esi439;
    int32_t edx440;
    uint32_t* edx441;
    uint32_t* ecx442;
    uint32_t v443;
    uint32_t edx444;
    uint32_t v445;
    uint32_t ecx446;
    int32_t edx447;
    int32_t v448;
    int32_t edx449;
    void* edx450;
    void* v451;
    uint32_t edi452;
    uint32_t ecx453;
    void* edx454;
    void* ecx455;
    uint32_t eax456;
    void** eax457;
    void** v458;
    void** edx459;
    void** eax460;
    uint1_t below_or_equal461;
    void** edx462;
    void** eax463;
    void** edx464;
    void** eax465;
    void** eax466;
    void* eax467;
    void* ebx468;
    uint32_t ecx469;
    void** eax470;
    void** eax471;
    void** edx472;
    uint1_t below_or_equal473;
    void* eax474;
    void* esi475;
    uint32_t ecx476;
    uint32_t ecx477;
    void** edx478;
    void** eax479;
    void** edx480;
    void** eax481;
    void** edx482;
    uint32_t eax483;
    uint32_t ecx484;
    uint32_t eax485;
    uint32_t eax486;
    uint32_t eax487;
    uint32_t ecx488;
    uint32_t ecx489;
    uint32_t ebp490;
    void** eax491;
    void** eax492;
    uint32_t eax493;
    uint32_t eax494;
    uint32_t edx495;
    int32_t eax496;
    uint32_t ebp497;
    uint32_t esi498;
    int32_t edx499;
    uint32_t* edx500;
    uint32_t* ecx501;
    uint32_t v502;
    uint32_t edx503;
    uint32_t v504;
    uint32_t ecx505;
    int32_t edx506;
    int32_t v507;
    int32_t edx508;
    void* edx509;
    void* edi510;
    uint32_t v511;
    uint32_t ecx512;
    void* edx513;
    void* ecx514;
    int32_t* eax515;
    uint32_t eax516;
    void** eax517;
    void** v518;
    void** edx519;
    uint32_t eax520;
    void** eax521;
    uint1_t below_or_equal522;
    void** edx523;
    void** eax524;
    void** edx525;
    void** eax526;
    void** eax527;
    void* eax528;
    void* ebx529;
    uint32_t ecx530;
    void** eax531;
    void** eax532;
    void** edx533;
    uint1_t below_or_equal534;
    void* eax535;
    void* esi536;
    uint32_t ecx537;
    uint32_t ecx538;
    void** edx539;
    void** eax540;
    void** edx541;
    void** eax542;
    void** edx543;
    void** ebx544;
    void** eax545;
    void* edx546;
    void** eax547;
    uint32_t* esi548;
    uint32_t* eax549;
    void** edi550;
    uint32_t* ebp551;
    uint32_t ecx552;
    uint32_t ecx553;
    int32_t ebp554;
    void*** eax555;
    void*** ecx556;
    void* edx557;
    int32_t* esi558;
    uint32_t* esi559;
    uint32_t* eax560;
    uint32_t v561;
    void** esi562;
    uint32_t* edi563;
    uint32_t ecx564;
    uint32_t ecx565;
    uint32_t ecx566;
    struct s36* esp567;
    void** eax568;
    void** eax569;
    void** edi570;
    uint32_t ebx571;
    struct s36* esp572;
    void** eax573;
    void** edi574;
    uint32_t ebx575;
    struct s36* esp576;
    uint32_t edx577;

    v13 = reinterpret_cast<int32_t>(__return_address());
    esp14 = reinterpret_cast<struct s33*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x9c);
    ebx15 = a5;
    v16 = a9;
    v17 = a10;
    edx18 = a7;
    eax19 = a8;
    v20 = a11;
    edi21 = a12;
    __asm__("fnstcw word [esp+0x4e]");
    esi22 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax19)));
    eax23 = reinterpret_cast<unsigned char>(eax19) >> 24;
    al24 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax23) >> 7);
    v25 = al24;
    v26 = reinterpret_cast<void**>(static_cast<uint32_t>(al24));
    eax27 = reinterpret_cast<unsigned char>(eax19) >> 16 & 0x7fff;
    v28 = ebx15;
    v29 = a6;
    v30 = edx18;
    v31 = esi22;
    v32 = eax27;
    if (!eax27) {
        eax33 = reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(ebx15) | reinterpret_cast<unsigned char>(edx18) | reinterpret_cast<unsigned char>(esi22);
        if (!eax33) {
            ebp34 = reinterpret_cast<void**>(4);
            v35 = reinterpret_cast<void**>(1);
            v36 = reinterpret_cast<void**>(0);
        } else {
            if (!esi22) {
                if (edx18) {
                    __asm__("bsr edx, edx");
                    v37 = (reinterpret_cast<unsigned char>(edx18) ^ 31) + 32;
                } else {
                    if (!a6) {
                        __asm__("bsr eax, ebx");
                        v37 = (eax33 ^ 31) + 96;
                    } else {
                        __asm__("bsr ecx, ecx");
                        v37 = (reinterpret_cast<unsigned char>(a6) ^ 31) + 64;
                    }
                }
            } else {
                __asm__("bsr eax, esi");
                v37 = eax33 ^ 31;
            }
            edx38 = v37 - 12;
            ebp39 = v37 + 19;
            if (reinterpret_cast<int32_t>(edx38) >= reinterpret_cast<int32_t>(0)) {
                ebp39 = edx38;
            }
            eax40 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx38) >> 31) >> 27;
            ebp41 = reinterpret_cast<int32_t>(ebp39) >> 5;
            edx42 = (edx38 + eax40 & 31) - eax40;
            v43 = ebp41;
            v44 = edx42;
            if (!edx42) 
                goto addr_6e94a3b0_14; else 
                goto addr_6e949a21_15;
        }
    } else {
        if (eax27 == 0x7fff) {
            if (reinterpret_cast<unsigned char>(a6) | reinterpret_cast<unsigned char>(ebx15) | reinterpret_cast<unsigned char>(edx18) | reinterpret_cast<unsigned char>(esi22)) {
                ebp34 = reinterpret_cast<void**>(12);
                v35 = reinterpret_cast<void**>(3);
                v36 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(~static_cast<int32_t>(*reinterpret_cast<int16_t*>(&esi22))) >> 31);
            } else {
                ebp34 = reinterpret_cast<void**>(8);
                v35 = reinterpret_cast<void**>(2);
                v36 = reinterpret_cast<void**>(0);
            }
        } else {
            esi45 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi22) | 0x10000);
            ecx46 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + 80);
            eax47 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + 92);
            while (eax47 = eax47 - 4, v31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx18) >> 29 | reinterpret_cast<unsigned char>(esi45) << 3), eax47 != ecx46) {
                esi45 = v30;
                edx18 = v29;
            }
            v28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v28) << 3);
            ebp34 = reinterpret_cast<void**>(0);
            v32 = v32 - 0x3fff;
            v35 = reinterpret_cast<void**>(0);
            v36 = reinterpret_cast<void**>(0);
        }
    }
    addr_6e949adf_24:
    v48 = edi21;
    v49 = v16;
    eax50 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edi21)));
    v51 = v17;
    v52 = v20;
    ecx53 = edi21;
    edi54 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi21) >> 24);
    ebx55 = edi54;
    bl56 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx55) >> 7);
    edx57 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi21) >> 16 & 0x7fff);
    esi58 = reinterpret_cast<void**>(static_cast<uint32_t>(bl56));
    v59 = eax50;
    v60 = bl56;
    v61 = esi58;
    if (edx57) {
        if (edx57 == 0x7fff) {
            ebx62 = reinterpret_cast<void**>(2);
            esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v17) | reinterpret_cast<unsigned char>(v16) | reinterpret_cast<unsigned char>(v20) | reinterpret_cast<unsigned char>(eax50));
            if (esi58) {
                edi54 = v36;
                *reinterpret_cast<unsigned char*>(&ebx62) = 3;
                eax63 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi54) | 1);
                if (*reinterpret_cast<int16_t*>(&ecx53) < 0) {
                    eax63 = edi54;
                }
                v36 = eax63;
                goto addr_6e949c62_30;
            }
        } else {
            esi64 = v20;
            eax65 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax50) | 0x10000);
            ebx66 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 96);
            ecx53 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 0x6c);
            while (ecx53 = ecx53 - 4, esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi64) >> 29 | reinterpret_cast<unsigned char>(eax65) << 3), v59 = esi58, ecx53 != ebx66) {
                eax65 = v52;
                esi64 = v51;
            }
            v49 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v49) << 3);
            edx57 = edx57 - 0x3fff;
            ebx62 = reinterpret_cast<void**>(0);
            goto addr_6e949c62_30;
        }
    }
    ebx62 = reinterpret_cast<void**>(1);
    ecx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v17) | reinterpret_cast<unsigned char>(v16) | reinterpret_cast<unsigned char>(v20) | reinterpret_cast<unsigned char>(eax50));
    if (!ecx53) {
        addr_6e949c62_30:
        eax67 = v60;
        v68 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax67) ^ v25)));
        eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp34) | reinterpret_cast<unsigned char>(ebx62));
        switch (eax69) {
        case 0:
            ecx70 = v31;
            v48 = reinterpret_cast<void**>(0);
            edx71 = v59;
            v72 = v32 - reinterpret_cast<unsigned char>(edx57);
            if (reinterpret_cast<unsigned char>(ecx70) <= reinterpret_cast<unsigned char>(edx71)) {
                ebx73 = v52;
                if (ecx70 != edx71) 
                    goto addr_6e94a45b_38;
                eax74 = ebx73;
                if (reinterpret_cast<unsigned char>(v30) <= reinterpret_cast<unsigned char>(ebx73)) 
                    goto addr_6e94a4f7_40;
            } else {
                eax74 = v52;
            }
            esi75 = v29;
            ebx73 = eax74;
            edi76 = v28;
            addr_6e949eb4_43:
            v48 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi76) << 31);
            ecx77 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 92);
            v28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi75) << 31 | reinterpret_cast<unsigned char>(edi76) >> 1);
            eax78 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 80 + 4);
            if (eax78 != ecx77) {
                do {
                    eax78 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax78) + 4);
                } while (eax78 != ecx77);
            }
            ecx70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v31) >> 1);
            addr_6e949ef5_46:
            esi58 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 96);
            eax79 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 0x6c);
            while (eax79 = eax79 - 4, eax79 != esi58) {
                edx71 = v52;
                ebx73 = v51;
            }
            ebp80 = 3;
            edx81 = ecx70;
            v82 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v49) << 12);
            v83 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx73) >> 20 | reinterpret_cast<unsigned char>(edx71) << 12);
            v84 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + 0x70);
            while (1) {
                if (edx81 == v83) {
                    v84[ebp80 * 4] = reinterpret_cast<void**>(0xffffffff);
                    if (!ebp80) 
                        goto addr_6e949f5e_52;
                    cf85 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v82) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v28) + reinterpret_cast<uint1_t>(0 < reinterpret_cast<uint32_t>(*reinterpret_cast<void****>(reinterpret_cast<uint32_t>(esp14) + ebp80 * 4 + 0x80)))));
                    cf86 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v51) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v29) + cf85));
                    edi87 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v51) - (reinterpret_cast<unsigned char>(v29) + cf86));
                    esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v52) - (reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v52) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + cf86))));
                    v88 = reinterpret_cast<void**>(-*reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + ebp80 * 4 + 0x80));
                    v89 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v82) - (reinterpret_cast<unsigned char>(v28) + cf85));
                    cf90 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v51) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(v89) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v82) < reinterpret_cast<unsigned char>(v88))));
                    cf91 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v52) < reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(edi87) + cf90));
                    ebx92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v52) - (reinterpret_cast<uint32_t>(edi87) + cf91));
                    edx81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx81) - (reinterpret_cast<unsigned char>(esi58) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx81) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi58) + cf91))));
                    v30 = ebx92;
                    v29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v51) - (reinterpret_cast<uint32_t>(v89) + cf90));
                    v28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v82) - reinterpret_cast<unsigned char>(v88));
                    if (reinterpret_cast<unsigned char>(edx81) > reinterpret_cast<unsigned char>(v83)) 
                        goto addr_6e94a1be_54;
                } else {
                    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + ebp80 * 4 + 0x70) = reinterpret_cast<unsigned char>(v30) / reinterpret_cast<unsigned char>(v83);
                    ecx93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) % reinterpret_cast<unsigned char>(v83));
                    esi58 = v84[ebp80 * 4];
                    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) * reinterpret_cast<unsigned char>(v82));
                    tmp32_95 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(__intrinsic()) + reinterpret_cast<unsigned char>(esi58) * reinterpret_cast<unsigned char>(v51));
                    edi96 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_95) < reinterpret_cast<unsigned char>(__intrinsic())));
                    edx97 = ecx93;
                    tmp32_98 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi96) + reinterpret_cast<unsigned char>(esi58) * reinterpret_cast<unsigned char>(v52));
                    eax99 = v29;
                    ebx100 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + ebp80 * 4 + 0x80);
                    edi101 = v28;
                    v102 = ebx100;
                    if (reinterpret_cast<unsigned char>(ecx93) >= reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96)))) {
                        if (ecx93 != reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96))) 
                            goto addr_6e94a01b_57;
                        if (reinterpret_cast<unsigned char>(eax99) < reinterpret_cast<unsigned char>(tmp32_98)) 
                            goto addr_6e94a0de_59; else 
                            goto addr_6e94a27c_60;
                    } else {
                        addr_6e94a0de_59:
                        v84[ebp80 * 4] = esi58 - 1;
                        tmp32_103 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v82) + reinterpret_cast<unsigned char>(v102));
                        tmp32_104 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v51) + reinterpret_cast<unsigned char>(edi101) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_103) < reinterpret_cast<unsigned char>(v82)));
                        tmp32_105 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v52) + reinterpret_cast<unsigned char>(eax99) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_104) < reinterpret_cast<unsigned char>(v51)));
                        ecx106 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx93) + reinterpret_cast<unsigned char>(v83) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_105) < reinterpret_cast<unsigned char>(v52)));
                        edx97 = ecx106;
                        if (reinterpret_cast<unsigned char>(ecx106) > reinterpret_cast<unsigned char>(v83)) {
                            addr_6e94a200_61:
                            eax99 = tmp32_105;
                            edi101 = tmp32_104;
                            v102 = tmp32_103;
                            goto addr_6e94a210_62;
                        } else {
                            if (ecx106 != v83) {
                                v102 = tmp32_103;
                                edi101 = tmp32_104;
                                eax99 = tmp32_105;
                                goto addr_6e94a01b_57;
                            }
                            eax99 = tmp32_105;
                            if (reinterpret_cast<unsigned char>(tmp32_105) > reinterpret_cast<unsigned char>(v52)) 
                                goto addr_6e94a200_61; else 
                                goto addr_6e94a2bc_66;
                        }
                    }
                }
                addr_6e94a047_67:
                --ebp80;
                continue;
                addr_6e94a1be_54:
                v84[ebp80 * 4] = reinterpret_cast<void**>(0xfffffffe);
                tmp32_107 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v82) + reinterpret_cast<unsigned char>(v28));
                tmp32_108 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v51) + reinterpret_cast<unsigned char>(v29) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_107) < reinterpret_cast<unsigned char>(v82)));
                tmp32_109 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v52) + reinterpret_cast<unsigned char>(ebx92) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_108) < reinterpret_cast<unsigned char>(v51)));
                edx81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v83) + reinterpret_cast<unsigned char>(edx81) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_109) < reinterpret_cast<unsigned char>(v52)));
                v30 = tmp32_109;
                v29 = tmp32_108;
                v28 = tmp32_107;
                goto addr_6e94a047_67;
                addr_6e94a27c_60:
                if (eax99 != tmp32_98) 
                    goto addr_6e94a01b_57;
                if (reinterpret_cast<unsigned char>(tmp32_95) > reinterpret_cast<unsigned char>(edi101)) 
                    goto addr_6e94a0de_59;
                esi58 = esi58;
                if (tmp32_95 != edi101) 
                    goto addr_6e94a01b_57;
                if (reinterpret_cast<unsigned char>(v94) > reinterpret_cast<unsigned char>(ebx100)) 
                    goto addr_6e94a0de_59;
                addr_6e94a2a0_71:
                edi101 = tmp32_95;
                goto addr_6e94a01b_57;
                addr_6e94a210_62:
                if (reinterpret_cast<unsigned char>(ecx106) < reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96)))) 
                    goto addr_6e94a241_72;
                if (!reinterpret_cast<int1_t>(ecx106 == reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96)))) {
                    addr_6e94a01b_57:
                    cf110 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edi101) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp32_95) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v102) < reinterpret_cast<unsigned char>(v94))));
                    cf111 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax99) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(tmp32_98) + cf110));
                    edx81 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx97) - (reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx97) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96))) + cf111))));
                    v30 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax99) - (reinterpret_cast<unsigned char>(tmp32_98) + cf111));
                    v29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi101) - (reinterpret_cast<unsigned char>(tmp32_95) + cf110));
                    v28 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v102) - reinterpret_cast<unsigned char>(v94));
                    if (!ebp80) 
                        break; else 
                        goto addr_6e94a047_67;
                } else {
                    if (reinterpret_cast<unsigned char>(tmp32_98) > reinterpret_cast<unsigned char>(eax99)) 
                        goto addr_6e94a241_72;
                    if (tmp32_98 != eax99) 
                        goto addr_6e94a01b_57;
                }
                if (reinterpret_cast<unsigned char>(tmp32_95) > reinterpret_cast<unsigned char>(edi101)) 
                    goto addr_6e94a241_72;
                if (tmp32_95 != edi101) 
                    goto addr_6e94a238_78;
                if (reinterpret_cast<unsigned char>(v94) > reinterpret_cast<unsigned char>(v102)) {
                    addr_6e94a241_72:
                    v84[ebp80 * 4] = v84[ebp80 * 4] - 1;
                    tmp32_112 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v82) + reinterpret_cast<unsigned char>(v102));
                    tmp32_113 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v51) + reinterpret_cast<unsigned char>(edi101) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_112) < reinterpret_cast<unsigned char>(v82)));
                    tmp32_114 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v52) + reinterpret_cast<unsigned char>(eax99) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_113) < reinterpret_cast<unsigned char>(v51)));
                    edx97 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v83) + reinterpret_cast<unsigned char>(ecx106) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_114) < reinterpret_cast<unsigned char>(v52)));
                    v102 = tmp32_112;
                    edi101 = tmp32_113;
                    eax99 = tmp32_114;
                    goto addr_6e94a01b_57;
                } else {
                    eax99 = tmp32_98;
                    goto addr_6e94a2a0_71;
                }
                addr_6e94a238_78:
                eax99 = tmp32_98;
                goto addr_6e94a01b_57;
                addr_6e94a2bc_66:
                if (tmp32_105 != v52) {
                    v102 = tmp32_103;
                    edi101 = tmp32_104;
                    goto addr_6e94a01b_57;
                }
                edi101 = tmp32_104;
                if (reinterpret_cast<unsigned char>(tmp32_104) > reinterpret_cast<unsigned char>(v51)) 
                    goto addr_6e94a200_61;
                v102 = tmp32_103;
                if (tmp32_104 != v51) 
                    goto addr_6e94a01b_57;
                if (reinterpret_cast<unsigned char>(tmp32_103) < reinterpret_cast<unsigned char>(v82)) 
                    goto addr_6e94a01b_57;
                goto addr_6e94a210_62;
            }
            if (v94 != v28 || (tmp32_95 != v29 || (v30 != tmp32_98 || !reinterpret_cast<int1_t>(edx81 == reinterpret_cast<int32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_98) < reinterpret_cast<unsigned char>(edi96)))))) {
                v115 = reinterpret_cast<void**>(v116 | 1);
                goto addr_6e949f5e_52;
            } else {
                goto addr_6e949f5e_52;
            }
            addr_6e94a4f7_40:
            if (v30 != ebx73) 
                goto addr_6e94a45b_38;
            esi75 = v29;
            if (reinterpret_cast<unsigned char>(esi75) <= reinterpret_cast<unsigned char>(v51)) 
                goto addr_6e94a50b_90;
            edi76 = v28;
            goto addr_6e949eb4_43;
            addr_6e94a50b_90:
            if (esi75 != v51 || (edi76 = v28, reinterpret_cast<unsigned char>(edi76) <= reinterpret_cast<unsigned char>(v49))) {
                addr_6e94a45b_38:
                --v72;
                goto addr_6e949ef5_46;
            } else {
                goto addr_6e949eb4_43;
            }
        case 1:
            v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 4);
            addr_6e949d06_94:
        case 8:
        case 9:
            edx117 = 0x7fff;
            ebx118 = reinterpret_cast<void**>(0);
            esi119 = reinterpret_cast<void**>(0);
            edi120 = reinterpret_cast<void**>(0);
            eax121 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
            v25 = *reinterpret_cast<unsigned char*>(&eax121);
            eax122 = 0;
            goto addr_6e949d1f_95;
        case 3:
        case 7:
        case 11:
            v35 = ebx62;
            v115 = v49;
            v123 = v51;
            v124 = v52;
            v125 = v59;
            v26 = v61;
            goto addr_6e949dcc_97;
        case 5:
        case 10:
            v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 1);
            eax122 = 0xffff8000;
            ebx118 = reinterpret_cast<void**>(0);
            esi119 = reinterpret_cast<void**>(0);
            v25 = 1;
            edi120 = reinterpret_cast<void**>(0);
            goto addr_6e949e25_99;
        case 12:
        case 13:
        case 14:
            v115 = v28;
            v123 = v29;
            v124 = v30;
            v125 = v31;
            goto addr_6e949dcc_97;
        case 15:
            eax126 = v31;
            if (reinterpret_cast<unsigned char>(eax126) <= reinterpret_cast<unsigned char>(v59)) {
                if (eax126 != v59) {
                    ebx118 = v52;
                    ecx127 = v51;
                    goto addr_6e94a473_104;
                }
                ecx128 = v30;
                ebx118 = v52;
                if (reinterpret_cast<unsigned char>(ecx128) <= reinterpret_cast<unsigned char>(ebx118)) 
                    goto addr_6e94a535_106;
            } else {
                ecx128 = v30;
            }
            esi119 = v29;
            ebx118 = ecx128;
            edi120 = v28;
            addr_6e949f3e_109:
            *reinterpret_cast<uint16_t*>(&eax122) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax126) | 0x8000);
            goto addr_6e949e25_99;
            addr_6e94a535_106:
            ecx127 = v51;
            if (ecx128 != ebx118) 
                goto addr_6e94a473_104;
            esi119 = v29;
            if (reinterpret_cast<unsigned char>(esi119) <= reinterpret_cast<unsigned char>(ecx127)) 
                goto addr_6e94a54b_111;
            edi120 = v28;
            goto addr_6e949f3e_109;
            addr_6e94a54b_111:
            if (esi119 != ecx127 || (edi120 = v28, reinterpret_cast<unsigned char>(edi120) <= reinterpret_cast<unsigned char>(v49))) {
                addr_6e94a473_104:
                esi119 = ecx127;
                ecx129 = v60;
                eax130 = v59;
                edi120 = v49;
                *reinterpret_cast<uint16_t*>(&eax122) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax130) | 0x8000);
                v25 = *reinterpret_cast<unsigned char*>(&ecx129);
                goto addr_6e949e25_99;
            } else {
                goto addr_6e949f3e_109;
            }
        case 16:
            v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx57) + reinterpret_cast<unsigned char>(v61));
            eax131 = reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v49);
            v132 = eax131;
            tmp32_133 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v51) + reinterpret_cast<uint32_t>(__intrinsic()));
            tmp32_134 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(__intrinsic()) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_133) < reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v51)));
            tmp32_135 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v29) * reinterpret_cast<unsigned char>(v49)) + reinterpret_cast<uint32_t>(tmp32_133));
            tmp32_136 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(__intrinsic()) + reinterpret_cast<uint32_t>(tmp32_134) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_135) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v29) * reinterpret_cast<unsigned char>(v49))));
            v137 = tmp32_135;
            tmp32_138 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v29) * reinterpret_cast<unsigned char>(v51) + reinterpret_cast<uint32_t>(tmp32_136));
            tmp32_139 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v52) + reinterpret_cast<uint32_t>(tmp32_138));
            ebp140 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) * reinterpret_cast<unsigned char>(v49));
            tmp32_141 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp140) + reinterpret_cast<uint32_t>(tmp32_139));
            v142 = tmp32_141;
            edi143 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) * reinterpret_cast<unsigned char>(v51) + (reinterpret_cast<unsigned char>(v29) * reinterpret_cast<unsigned char>(v52) + (reinterpret_cast<unsigned char>(v31) * reinterpret_cast<unsigned char>(v49) + (reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v59) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<int32_t>(__intrinsic()) + (reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_134) < reinterpret_cast<uint32_t>(__intrinsic())) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_136) < reinterpret_cast<uint32_t>(__intrinsic()))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_138) < reinterpret_cast<unsigned char>(v29) * reinterpret_cast<unsigned char>(v51))) + reinterpret_cast<uint1_t>(reinterpret_cast<uint32_t>(tmp32_139) < reinterpret_cast<unsigned char>(v28) * reinterpret_cast<unsigned char>(v52))) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_141) < reinterpret_cast<unsigned char>(ebp140)))))));
            v48 = edi143;
            edi144 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x9c);
            ebx145 = reinterpret_cast<unsigned char>(tmp32_135) | eax131 | reinterpret_cast<unsigned char>(tmp32_141) | reinterpret_cast<unsigned char>(edi143) << 13;
            edx146 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x90);
            while (edx146 != edi144) {
                edx146 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx146) + 4);
            }
            edx147 = 0;
            *reinterpret_cast<unsigned char*>(&edx147) = reinterpret_cast<uint1_t>(!!ebx145);
            edx148 = reinterpret_cast<void**>(edx147 | v132);
            v149 = v142;
            v150 = v48;
            v151 = edx148;
            v152 = v137;
            if (reinterpret_cast<unsigned char>(v48) & 0x100000) {
                ebx153 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x7c);
                v154 = reinterpret_cast<unsigned char>(v137) << 31 | reinterpret_cast<unsigned char>(edx148) >> 1;
                eax155 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70 + 4);
                esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx148) << 31);
                if (eax155 != ebx153) {
                    do {
                        eax155 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax155) + 4);
                    } while (eax155 != ebx153);
                }
                eax156 = 0;
                ++v36;
                v150 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v150) >> 1);
                *reinterpret_cast<unsigned char*>(&eax156) = reinterpret_cast<uint1_t>(!!esi58);
                v151 = reinterpret_cast<void**>(v154 | eax156);
                goto addr_6e94b834_121;
            }
        case 17:
        case 18:
            v157 = v17;
            goto addr_6e94b4d8_123;
        case 19:
        case 23:
        case 27:
            v157 = v158;
            goto addr_6e94b4d8_123;
        case 20:
        case 21:
        case 24:
        case 26:
            v157 = v17;
        case 28:
        case 29:
        case 30:
            v151 = v28;
            v152 = v29;
            v149 = v30;
            v150 = v31;
            goto addr_6e94b378_127;
        case 22:
        case 25:
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 1);
            eax159 = 0xffff8000;
            esi160 = reinterpret_cast<void**>(0);
            edi161 = reinterpret_cast<void**>(0);
            *reinterpret_cast<unsigned char*>(&v20) = 1;
            ebx162 = reinterpret_cast<void**>(0);
            goto addr_6e94b785_129;
        case 31:
            eax163 = v31;
            if (reinterpret_cast<unsigned char>(eax163) <= reinterpret_cast<unsigned char>(v59)) {
                if (eax163 != v59) {
                    esi160 = v52;
                    ecx164 = v51;
                    goto addr_6e94ba4b_133;
                }
                ecx165 = v30;
                esi160 = v52;
                if (reinterpret_cast<unsigned char>(ecx165) <= reinterpret_cast<unsigned char>(esi160)) 
                    goto addr_6e94baa6_135;
            } else {
                ecx165 = v30;
            }
            edi161 = v29;
            esi160 = ecx165;
            ebx162 = v28;
            goto addr_6e94b7ae_138;
            addr_6e94baa6_135:
            ecx164 = v51;
            if (ecx165 != esi160) {
                addr_6e94ba4b_133:
                ebx162 = v49;
                edi161 = ecx164;
                if (v28 != ebx162 || (v29 != ecx164 || (v30 != esi160 || eax163 != v59))) {
                    ecx166 = *reinterpret_cast<unsigned char*>(&v35);
                    eax167 = v59;
                    *reinterpret_cast<uint16_t*>(&eax159) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax167) | 0x8000);
                    *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&ecx166);
                    goto addr_6e94b785_129;
                } else {
                    goto addr_6e94b7ae_138;
                }
            } else {
                edi161 = v29;
                if (reinterpret_cast<unsigned char>(edi161) > reinterpret_cast<unsigned char>(ecx164)) {
                    ebx162 = v28;
                    goto addr_6e94b7ae_138;
                }
                if (edi161 != ecx164) 
                    goto addr_6e94ba4b_133;
            }
            ebx162 = v28;
            if (reinterpret_cast<unsigned char>(ebx162) > reinterpret_cast<unsigned char>(v49)) {
                addr_6e94b7ae_138:
                *reinterpret_cast<uint16_t*>(&eax159) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax163) | 0x8000);
                goto addr_6e94b785_129;
            } else {
                goto addr_6e94ba4b_133;
            }
            while (1) {
                addr_6e950cd5_146:
            case 32:
            case 77:
                eax69 = ebx62;
                while (reinterpret_cast<unsigned char>(eax69) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp34 + 0xffffffd4)) && (edi54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4), reinterpret_cast<unsigned char>(edi54) < reinterpret_cast<unsigned char>((*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 96) >> 31) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 76))))) {
                    edx57 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69))));
                    ebx62 = eax69 + 1;
                    ecx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx57) & 0xffffffc0);
                    if (*reinterpret_cast<unsigned char*>(&ecx53) == 64) {
                        *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4) = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx57) & 63) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi54));
                        eax69 = ebx62;
                        continue;
                    }
                    if (*reinterpret_cast<unsigned char*>(&ecx53) == 0x80) {
                        eax69 = ebx62;
                        esi168 = reinterpret_cast<unsigned char>(edx57) & 63;
                        edi169 = 0;
                        ecx170 = 0;
                        do {
                            ++eax69;
                            ebx171 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                            edx172 = (ebx171 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx170);
                            ecx170 = ecx170 + 7;
                            edi169 = edi169 | edx172;
                        } while (*reinterpret_cast<signed char*>(&ebx171) < 0);
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ecx53) == 0xc0) {
                            edx173 = reinterpret_cast<unsigned char>(edx57) & 63;
                            if (edx173 > 17) 
                                goto addr_6e950cd5_146;
                            *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp34 + 8) + edx173 * 8) + 4) = 0;
                            eax69 = ebx62;
                            continue;
                        }
                        if (*reinterpret_cast<unsigned char*>(&edx57) > 47) 
                            goto addr_6e950ccc_157;
                        esi58 = *reinterpret_cast<void***>(ebp34 + 0xffffffd0);
                        goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx57) * 4 + 0x6e9573f8);
                    }
                    addr_6e950c87_159:
                    edi174 = reinterpret_cast<void**>(edi169 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac));
                    if (esi168 > 17) 
                        continue;
                    edx175 = reinterpret_cast<struct s34*>(*reinterpret_cast<void***>(ebp34 + 8) + esi168 * 8);
                    edx175->f4 = 1;
                    edx175->f0 = edi174;
                    continue;
                case 33:
                    edi54 = *reinterpret_cast<void***>(ebp34 + 8);
                    esi58 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edi54 + 0xb8)));
                    ecx53 = esi58;
                    if (*reinterpret_cast<unsigned char*>(&ecx53) == 0xff) 
                        goto addr_6e950ccc_157;
                    ecx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) & 0x70);
                    *reinterpret_cast<unsigned char*>(ebp34 + 0xffffffcb) = *reinterpret_cast<unsigned char*>(&ecx53);
                    if (*reinterpret_cast<unsigned char*>(&ecx53) == 32) {
                        edi54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 84);
                        *reinterpret_cast<void***>(ebp34 + 0xffffffc4) = edi54;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ecx53) <= 32) {
                            if (!*reinterpret_cast<unsigned char*>(&ecx53)) 
                                goto addr_6e9512db_166;
                            if (*reinterpret_cast<unsigned char*>(&ecx53) == 16) 
                                goto addr_6e9512db_166; else 
                                goto addr_6e950ccc_157;
                        } else {
                            edi54 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebp34 + 0xffffffcb)));
                            ecx53 = edi54;
                            if (*reinterpret_cast<unsigned char*>(&ecx53) == 64) {
                                edi54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 92);
                                *reinterpret_cast<void***>(ebp34 + 0xffffffc4) = edi54;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ecx53) == 80) {
                                    addr_6e9512db_166:
                                    *reinterpret_cast<void***>(ebp34 + 0xffffffc4) = reinterpret_cast<void**>(0);
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&ecx53) != 48) 
                                        goto addr_6e950ccc_157;
                                    edi54 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 88);
                                    *reinterpret_cast<void***>(ebp34 + 0xffffffc4) = edi54;
                                }
                            }
                        }
                    }
                    ecx53 = esi58;
                    if (*reinterpret_cast<unsigned char*>(&ecx53) == 80) {
                        ebx176 = reinterpret_cast<struct s35*>(reinterpret_cast<uint32_t>(ebx62 + 3) & 0xfffffffc);
                        eax69 = reinterpret_cast<void**>(&ebx176->f4);
                        edx177 = ebx176->f0;
                    } else {
                        edx178 = reinterpret_cast<unsigned char>(esi58) & 15;
                        if (*reinterpret_cast<unsigned char*>(&edx178) > 12) 
                            goto addr_6e950ccc_157;
                        edx57 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx178)));
                        goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx57) * 4 + 0x6e9574b8);
                    }
                    addr_6e9512c5_177:
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4) = edx177;
                    continue;
                case 80:
                case 83:
                case 91:
                    edi179 = *reinterpret_cast<void***>(eax69 + 1);
                    eax69 = eax69 + 5;
                    addr_6e9512ab_179:
                    edx177 = reinterpret_cast<void**>(0);
                    if (edi179) {
                        edx180 = *reinterpret_cast<void***>(ebp34 + 0xffffffc4);
                        if (*reinterpret_cast<unsigned char*>(ebp34 + 0xffffffcb) == 16) {
                            edx180 = ebx62;
                        }
                        ebx181 = esi58;
                        edx177 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx180) + reinterpret_cast<unsigned char>(edi179));
                        if (*reinterpret_cast<signed char*>(&ebx181) < 0) {
                            edx177 = *reinterpret_cast<void***>(edx177);
                            goto addr_6e9512c5_177;
                        }
                    }
                case 81:
                    eax69 = ebx62;
                    edi179 = reinterpret_cast<void**>(0);
                    ecx182 = 0;
                    *reinterpret_cast<void***>(ebp34 + 0xffffffc0) = ebx62;
                    do {
                        ++eax69;
                        ebx183 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx184 = (ebx183 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx182);
                        ecx182 = ecx182 + 7;
                        edi179 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi179) | edx184);
                    } while (*reinterpret_cast<signed char*>(&ebx183) < 0);
                    ebx62 = *reinterpret_cast<void***>(ebp34 + 0xffffffc0);
                    goto addr_6e9512ab_179;
                case 82:
                    edi179 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax69 + 1))));
                    eax69 = eax69 + 3;
                    goto addr_6e9512ab_179;
                case 84:
                case 92:
                    edi179 = *reinterpret_cast<void***>(eax69 + 1);
                    eax69 = eax69 + 9;
                    goto addr_6e9512ab_179;
                case 89:
                    esp185 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp185->f0 = reinterpret_cast<void**>(0x6e9512fa);
                    eax69 = fun_6e950b70(esp185->f4, esp185->f8);
                    esp14 = reinterpret_cast<struct s33*>(&esp185->f4);
                    edi179 = *reinterpret_cast<void***>(ebp34 + 0xffffffe4);
                    goto addr_6e9512ab_179;
                case 90:
                    edi179 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax69 + 1))));
                    eax69 = eax69 + 3;
                    goto addr_6e9512ab_179;
                case 34:
                    eax69 = eax69 + 2;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi54));
                    continue;
                case 35:
                    eax69 = eax69 + 3;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4) = reinterpret_cast<void**>(*reinterpret_cast<uint16_t*>(eax69 + 0xfffffffe) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi54));
                    continue;
                case 36:
                    eax69 = eax69 + 5;
                    *reinterpret_cast<void***>(*reinterpret_cast<void***>(ebp34 + 8) + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xfffffffc)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xb0) + reinterpret_cast<unsigned char>(edi54));
                    continue;
                case 37:
                    esi186 = 0;
                    ecx187 = 0;
                    do {
                        ++ebx62;
                        edx188 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax189 = (edx188 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx187);
                        ecx187 = ecx187 + 7;
                        esi186 = esi186 | eax189;
                    } while (*reinterpret_cast<signed char*>(&edx188) < 0);
                    eax69 = ebx62;
                    edi169 = 0;
                    ecx190 = 0;
                    esi168 = esi186;
                    do {
                        ++eax69;
                        ebx191 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx192 = (ebx191 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx190);
                        ecx190 = ecx190 + 7;
                        edi169 = edi169 | edx192;
                    } while (*reinterpret_cast<signed char*>(&ebx191) < 0);
                    goto addr_6e950c87_159;
                case 38:
                    eax69 = ebx62;
                    esi193 = 0;
                    ecx194 = 0;
                    do {
                        ++eax69;
                        ebx195 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx196 = (ebx195 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx194);
                        ecx194 = ecx194 + 7;
                        esi193 = esi193 | edx196;
                    } while (*reinterpret_cast<signed char*>(&ebx195) < 0);
                    addr_6e950df9_201:
                    if (esi193 > 17) 
                        continue;
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp34 + 8) + esi193 * 8) + 4) = 0;
                    continue;
                case 39:
                    eax69 = ebx62;
                    esi197 = 0;
                    ecx198 = 0;
                    do {
                        ++eax69;
                        ebx199 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx200 = (ebx199 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx198);
                        ecx198 = ecx198 + 7;
                        esi197 = esi197 | edx200;
                    } while (*reinterpret_cast<signed char*>(&ebx199) < 0);
                    if (esi197 > 17) 
                        continue;
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(*reinterpret_cast<void***>(ebp34 + 8) + esi197 * 8) + 4) = 6;
                    continue;
                case 40:
                    eax69 = ebx62;
                    esi193 = 0;
                    ecx201 = 0;
                    do {
                        ++eax69;
                        ebx202 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx203 = (ebx202 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx201);
                        ecx201 = ecx201 + 7;
                        esi193 = esi193 | edx203;
                    } while (*reinterpret_cast<signed char*>(&ebx202) < 0);
                    goto addr_6e950df9_201;
                case 41:
                    ecx204 = 0;
                    esi205 = 0;
                    do {
                        ++ebx62;
                        edx206 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax207 = (edx206 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx204);
                        ecx204 = ecx204 + 7;
                        esi205 = esi205 | eax207;
                    } while (*reinterpret_cast<signed char*>(&edx206) < 0);
                    eax69 = ebx62;
                    edi208 = reinterpret_cast<void**>(0);
                    ecx209 = 0;
                    esi210 = esi205;
                    do {
                        ++eax69;
                        ebx211 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx212 = (ebx211 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx209);
                        ecx209 = ecx209 + 7;
                        edi208 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi208) | edx212);
                    } while (*reinterpret_cast<signed char*>(&ebx211) < 0);
                    if (esi210 > 17) 
                        continue;
                    edx213 = reinterpret_cast<struct s37*>(*reinterpret_cast<void***>(ebp34 + 8) + esi210 * 8);
                    edx213->f4 = 2;
                    edx213->f0 = edi208;
                    continue;
                case 42:
                    if (!*reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc)) {
                        esp214 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp214->f0 = reinterpret_cast<void**>(0x6e951363);
                        eax215 = fun_6e941590(ecx53);
                        esp14 = reinterpret_cast<struct s33*>(reinterpret_cast<uint32_t>(&esp214->f4) - eax215);
                        eax216 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esp14) + 15 & 0xfffffff0);
                    } else {
                        eax216 = *reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc);
                        *reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc) = (*reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc))->f144;
                    }
                    esi217 = *reinterpret_cast<void***>(ebp34 + 8);
                    edi218 = eax216;
                    ecx219 = 41;
                    while (ecx219) {
                        --ecx219;
                        edi218->f0 = *reinterpret_cast<void***>(esi217);
                        edi218 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(edi218) + 4);
                        esi217 = esi217 + 4;
                    }
                    *reinterpret_cast<struct s18**>(*reinterpret_cast<void***>(ebp34 + 8) + 0x90) = eax216;
                    eax69 = ebx62;
                    continue;
                case 43:
                    ecx220 = 41;
                    edi221 = *reinterpret_cast<void***>(ebp34 + 8);
                    eax222 = *reinterpret_cast<struct s18**>(*reinterpret_cast<void***>(ebp34 + 8) + 0x90);
                    esi223 = eax222;
                    while (ecx220) {
                        --ecx220;
                        *reinterpret_cast<void***>(edi221) = esi223->f0;
                        edi221 = edi221 + 4;
                        esi223 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esi223) + 4);
                    }
                    edi224 = *reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc);
                    *reinterpret_cast<struct s18**>(ebp34 + 0xffffffcc) = eax222;
                    eax222->f144 = edi224;
                    eax69 = ebx62;
                    continue;
                case 44:
                    esi225 = 0;
                    ecx226 = 0;
                    do {
                        ++ebx62;
                        edx227 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax228 = (edx227 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx226);
                        ecx226 = ecx226 + 7;
                        esi225 = esi225 | eax228;
                    } while (*reinterpret_cast<signed char*>(&edx227) < 0);
                    ecx229 = 0;
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0x98) = esi225;
                    eax69 = ebx62;
                    esi230 = 0;
                    do {
                        ++eax69;
                        ebx231 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx232 = (ebx231 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx229);
                        ecx229 = ecx229 + 7;
                        esi230 = esi230 | edx232;
                    } while (*reinterpret_cast<signed char*>(&ebx231) < 0);
                    edi233 = *reinterpret_cast<void***>(ebp34 + 8);
                    *reinterpret_cast<uint32_t*>(edi233 + 0x94) = esi230;
                    *reinterpret_cast<int32_t*>(edi233 + 0xa0) = 1;
                    continue;
                case 45:
                    eax69 = ebx62;
                    ecx234 = 0;
                    esi235 = 0;
                    do {
                        ++eax69;
                        ebx236 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx237 = (ebx236 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx234);
                        ecx234 = ecx234 + 7;
                        esi235 = esi235 | edx237;
                    } while (*reinterpret_cast<signed char*>(&ebx236) < 0);
                    edi238 = *reinterpret_cast<void***>(ebp34 + 8);
                    *reinterpret_cast<uint32_t*>(edi238 + 0x98) = esi235;
                    *reinterpret_cast<int32_t*>(edi238 + 0xa0) = 1;
                    continue;
                case 46:
                    eax69 = ebx62;
                    esi239 = 0;
                    ecx240 = 0;
                    do {
                        ++eax69;
                        ebx241 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx242 = (ebx241 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx240);
                        ecx240 = ecx240 + 7;
                        esi239 = esi239 | edx242;
                    } while (*reinterpret_cast<signed char*>(&ebx241) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0x94) = esi239;
                    continue;
                case 47:
                    eax243 = *reinterpret_cast<void***>(ebp34 + 8);
                    esi244 = reinterpret_cast<void*>(0);
                    ecx245 = 0;
                    *reinterpret_cast<void***>(eax243 + 0x9c) = ebx62;
                    *reinterpret_cast<int32_t*>(eax243 + 0xa0) = 2;
                    do {
                        ++ebx62;
                        edx246 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax247 = (edx246 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx245);
                        ecx245 = ecx245 + 7;
                        esi244 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi244) | eax247);
                    } while (*reinterpret_cast<signed char*>(&edx246) < 0);
                    eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<uint32_t>(esi244));
                    continue;
                case 48:
                    esi248 = 0;
                    ecx249 = 0;
                    do {
                        ++ebx62;
                        edx250 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax251 = (edx250 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx249);
                        ecx249 = ecx249 + 7;
                        esi248 = esi248 | eax251;
                    } while (*reinterpret_cast<signed char*>(&edx250) < 0);
                    if (esi248 <= 17) {
                        eax252 = reinterpret_cast<struct s38*>(*reinterpret_cast<void***>(ebp34 + 8) + esi248 * 8);
                        eax252->f4 = 3;
                        eax252->f0 = ebx62;
                    }
                    esi253 = reinterpret_cast<void*>(0);
                    ecx254 = 0;
                    do {
                        ++ebx62;
                        edx255 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax256 = (edx255 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx254);
                        ecx254 = ecx254 + 7;
                        esi253 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi253) | eax256);
                    } while (*reinterpret_cast<signed char*>(&edx255) < 0);
                    eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<uint32_t>(esi253));
                    continue;
                case 49:
                    esi257 = 0;
                    ecx258 = 0;
                    do {
                        ++ebx62;
                        edx259 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax260 = (edx259 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx258);
                        ecx258 = ecx258 + 7;
                        esi257 = esi257 | eax260;
                    } while (*reinterpret_cast<signed char*>(&edx259) < 0);
                    esp261 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp261->f0 = reinterpret_cast<void**>(0x6e951087);
                    eax69 = fun_6e950b70(esp261->f4, esp261->f8);
                    esp14 = reinterpret_cast<struct s33*>(&esp261->f4);
                    edx262 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac) * reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp34 + 0xffffffe4)));
                    if (esi257 > 17) 
                        continue;
                    ecx263 = reinterpret_cast<struct s39*>(*reinterpret_cast<void***>(ebp34 + 8) + esi257 * 8);
                    ecx263->f4 = 1;
                    ecx263->f0 = edx262;
                    continue;
                case 50:
                    esi264 = 0;
                    ecx265 = 0;
                    do {
                        ++ebx62;
                        edx266 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax267 = (edx266 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx265);
                        ecx265 = ecx265 + 7;
                        esi264 = esi264 | eax267;
                    } while (*reinterpret_cast<signed char*>(&edx266) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0x98) = esi264;
                    esp268 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp268->f0 = reinterpret_cast<void**>(0x6e9510dc);
                    eax69 = fun_6e950b70(esp268->f4, esp268->f8);
                    esp14 = reinterpret_cast<struct s33*>(&esp268->f4);
                    edi269 = *reinterpret_cast<void***>(ebp34 + 8);
                    edx270 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp34 + 0xffffffe4)) * *reinterpret_cast<uint32_t*>(edi269 + 0xac);
                    *reinterpret_cast<int32_t*>(edi269 + 0xa0) = 1;
                    *reinterpret_cast<uint32_t*>(edi269 + 0x94) = edx270;
                    continue;
                case 51:
                    esp271 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp271->f0 = reinterpret_cast<void**>(0x6e951108);
                    eax69 = fun_6e950b70(esp271->f4, esp271->f8);
                    esp14 = reinterpret_cast<struct s33*>(&esp271->f4);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0x94) = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp34 + 0xffffffe4)) * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac);
                    continue;
                case 52:
                    esi272 = 0;
                    ecx273 = 0;
                    do {
                        ++ebx62;
                        edx274 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax275 = (edx274 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx273);
                        ecx273 = ecx273 + 7;
                        esi272 = esi272 | eax275;
                    } while (*reinterpret_cast<signed char*>(&edx274) < 0);
                    eax69 = ebx62;
                    edi276 = 0;
                    ecx277 = 0;
                    do {
                        ++eax69;
                        ebx278 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx279 = (ebx278 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx277);
                        ecx277 = ecx277 + 7;
                        edi276 = edi276 | edx279;
                    } while (*reinterpret_cast<signed char*>(&ebx278) < 0);
                    edi280 = reinterpret_cast<void**>(edi276 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac));
                    if (esi272 > 17) 
                        continue;
                    edx281 = reinterpret_cast<struct s40*>(*reinterpret_cast<void***>(ebp34 + 8) + esi272 * 8);
                    edx281->f4 = 4;
                    edx281->f0 = edi280;
                    continue;
                case 53:
                    esi282 = 0;
                    ecx283 = 0;
                    do {
                        ++ebx62;
                        edx284 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax285 = (edx284 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx283);
                        ecx283 = ecx283 + 7;
                        esi282 = esi282 | eax285;
                    } while (*reinterpret_cast<signed char*>(&edx284) < 0);
                    esp286 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp286->f0 = reinterpret_cast<void**>(0x6e9511a1);
                    eax69 = fun_6e950b70(esp286->f4, esp286->f8);
                    esp14 = reinterpret_cast<struct s33*>(&esp286->f4);
                    edx287 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac) * reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp34 + 0xffffffe4)));
                    if (esi282 > 17) 
                        continue;
                    ecx288 = reinterpret_cast<struct s41*>(*reinterpret_cast<void***>(ebp34 + 8) + esi282 * 8);
                    ecx288->f4 = 4;
                    ecx288->f0 = edx287;
                    continue;
                case 54:
                    ecx289 = 0;
                    esi290 = 0;
                    do {
                        ++ebx62;
                        edx291 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax292 = (edx291 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx289);
                        ecx289 = ecx289 + 7;
                        esi290 = esi290 | eax292;
                    } while (*reinterpret_cast<signed char*>(&edx291) < 0);
                    if (esi290 <= 17) {
                        eax293 = reinterpret_cast<struct s42*>(*reinterpret_cast<void***>(ebp34 + 8) + esi290 * 8);
                        eax293->f4 = 5;
                        eax293->f0 = ebx62;
                    }
                    esi294 = reinterpret_cast<void*>(0);
                    ecx295 = 0;
                    do {
                        ++ebx62;
                        edx296 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax297 = (edx296 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx295);
                        ecx295 = ecx295 + 7;
                        esi294 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi294) | eax297);
                    } while (*reinterpret_cast<signed char*>(&edx296) < 0);
                    eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<uint32_t>(esi294));
                    continue;
                case 78:
                    eax69 = ebx62;
                    esi298 = 0;
                    ecx299 = 0;
                    do {
                        ++eax69;
                        ebx300 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx301 = (ebx300 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx299);
                        ecx299 = ecx299 + 7;
                        esi298 = esi298 | edx301;
                    } while (*reinterpret_cast<signed char*>(&ebx300) < 0);
                    *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 0xffffffd0) + 0x68) = esi298;
                    continue;
                case 79:
                    esi302 = 0;
                    ecx303 = 0;
                    do {
                        ++ebx62;
                        edx304 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff));
                        eax305 = (edx304 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx303);
                        ecx303 = ecx303 + 7;
                        esi302 = esi302 | eax305;
                    } while (*reinterpret_cast<signed char*>(&edx304) < 0);
                    eax69 = ebx62;
                    edi306 = 0;
                    ecx307 = 0;
                    do {
                        ++eax69;
                        ebx308 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                        edx309 = (ebx308 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx307);
                        ecx307 = ecx307 + 7;
                        edi306 = edi306 | edx309;
                    } while (*reinterpret_cast<signed char*>(&ebx308) < 0);
                    if (esi302 > 17) 
                        continue;
                    edx310 = reinterpret_cast<struct s43*>(*reinterpret_cast<void***>(ebp34 + 8) + esi302 * 8);
                    edi311 = reinterpret_cast<void**>(-(edi306 * *reinterpret_cast<uint32_t*>(*reinterpret_cast<void***>(ebp34 + 8) + 0xac)));
                    edx310->f4 = 1;
                    edx310->f0 = edi311;
                }
                break;
                addr_6e950ccc_157:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 85:
            case 86:
            case 87:
            case 88:
                esp312 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                esp312->f0 = reinterpret_cast<void**>(0x6e950cd5);
                fun_6e955970(ecx53, esp312->f4, esp312->f8, esp312->f12, esp312->f16, esp312->f20, esp312->f24, esp312->f28, esp312->f32);
                esp14 = reinterpret_cast<struct s33*>(&esp312->f4);
            }
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebp34 + 0xfffffff4) + 4 + 4 + 4 + 4);
            while (1) {
            case 93:
            case 96:
            case 0x68:
                eax313 = *reinterpret_cast<void***>(edi54 + 1);
                edi54 = edi54 + 5;
                while (1) {
                    edx57 = reinterpret_cast<void**>(0);
                    if (eax313) {
                        edx314 = esp14->f40;
                        if (0) {
                            edx314 = esp14->f36;
                        }
                        edx57 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx314) + reinterpret_cast<unsigned char>(eax313));
                        if (*reinterpret_cast<signed char*>(&ebx62) < reinterpret_cast<signed char>(0)) {
                            edx57 = *reinterpret_cast<void***>(edx57);
                        }
                    }
                    while (1) {
                        *reinterpret_cast<void***>(ebp34 + 0xa8) = edx57;
                        while (1) {
                            eax315 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi58));
                            ++esi58;
                            if (!*reinterpret_cast<signed char*>(&eax315)) 
                                goto addr_6e951642_292;
                            if (*reinterpret_cast<signed char*>(&eax315) != 76) {
                                if (*reinterpret_cast<signed char*>(&eax315) == 82) {
                                    eax316 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi54));
                                    ++edi54;
                                    *reinterpret_cast<unsigned char*>(ebp34 + 0xb8) = *reinterpret_cast<unsigned char*>(&eax316);
                                } else {
                                    if (*reinterpret_cast<signed char*>(&eax315) == 80) 
                                        break;
                                    if (*reinterpret_cast<signed char*>(&eax315) != 83) 
                                        goto addr_6e951926_298;
                                    *reinterpret_cast<signed char*>(ebp34 + 0xbb) = 1;
                                }
                            } else {
                                eax317 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi54));
                                ++edi54;
                                *reinterpret_cast<unsigned char*>(ebp34 + 0xb9) = *reinterpret_cast<unsigned char*>(&eax317);
                            }
                        }
                        ebx62 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi54))));
                        if (*reinterpret_cast<unsigned char*>(&ebx62) == 0xff) 
                            goto addr_6e951746_302;
                        eax318 = reinterpret_cast<unsigned char>(ebx62) & 0x70;
                        esp14->f24 = *reinterpret_cast<void***>(&eax318);
                        if (*reinterpret_cast<void***>(&eax318) == 32) {
                            esp14->f40 = *reinterpret_cast<void***>(esp14->f16 + 84);
                        } else {
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax318)) <= 32) {
                                if (!*reinterpret_cast<void***>(&eax318)) 
                                    goto addr_6e951850_307;
                                esi58 = esi58;
                                if (*reinterpret_cast<void***>(&eax318) == 16) 
                                    goto addr_6e951850_307; else 
                                    goto addr_6e951746_302;
                            } else {
                                eax319 = reinterpret_cast<unsigned char>(esp14->f24);
                                if (*reinterpret_cast<signed char*>(&eax319) == 64) {
                                    esp14->f40 = *reinterpret_cast<void***>(esp14->f16 + 92);
                                } else {
                                    if (*reinterpret_cast<signed char*>(&eax319) == 80) {
                                        addr_6e951850_307:
                                        esp14->f40 = reinterpret_cast<void**>(0);
                                    } else {
                                        if (*reinterpret_cast<signed char*>(&eax319) != 48) 
                                            goto addr_6e951746_302;
                                        esp14->f40 = *reinterpret_cast<void***>(esp14->f16 + 88);
                                    }
                                }
                            }
                        }
                        esp14->f36 = edi54 + 1;
                        if (*reinterpret_cast<unsigned char*>(&ebx62) != 80) 
                            break;
                        eax320 = reinterpret_cast<struct s44*>(reinterpret_cast<unsigned char>(edi54 + 4) & 0xfffffffc);
                        edi54 = reinterpret_cast<void**>(&eax320->f4);
                        edx57 = eax320->f0;
                    }
                    eax321 = reinterpret_cast<unsigned char>(ebx62) & 15;
                    if (*reinterpret_cast<unsigned char*>(&eax321) > 12) 
                        goto addr_6e951746_302;
                    eax69 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax321)));
                    switch (eax69) {
                    case 1:
                        edi54 = esp14->f36;
                        ecx53 = reinterpret_cast<void**>(0);
                        esp14->f44 = esi58;
                        esi322 = reinterpret_cast<void**>(0);
                        do {
                            ++edi54;
                            eax323 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi54 + 0xffffffff));
                            edx324 = (eax323 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                            ecx53 = ecx53 + 7;
                            esi322 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi322) | edx324);
                        } while (*reinterpret_cast<signed char*>(&eax323) < 0);
                        eax313 = esi322;
                        esi58 = esp14->f44;
                        break;
                    case 2:
                        eax313 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(edi54 + 1))));
                        edi54 = edi54 + 3;
                        break;
                    case 4:
                    case 12:
                        eax313 = *reinterpret_cast<void***>(edi54 + 1);
                        edi54 = edi54 + 9;
                        break;
                    case 9:
                        esp325 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp325->f0 = reinterpret_cast<void**>(0x6e9519aa);
                        eax326 = fun_6e950b70(esp325->f4, esp325->f8);
                        esp14 = reinterpret_cast<struct s33*>(&esp325->f4);
                        edi54 = eax326;
                        eax313 = esp14->f60;
                        break;
                    case 10:
                        eax313 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(edi54 + 1))));
                        edi54 = edi54 + 3;
                    case 0x147:
                        goto 0x6e954590;
                    case 0x140:
                        goto 0x6e9545f6;
                    case 0x13e:
                    case 0x141:
                    case 0x149:
                        goto 0x6e954550;
                    case 0x13a:
                        goto 0x6e9533b0;
                    case 0x136:
                    case 0x137:
                    case 0x138:
                    case 0x139:
                        goto 0x6e953400;
                    case 0x13f:
                        goto 0x6e9545d0;
                    case 0x135:
                    case 0x13d:
                        goto 0x6e9533a0;
                    case 0x14b:
                        goto 0x6e954c30;
                    case 0x133:
                        goto 0x6e9533f0;
                    case 0x143:
                    case 0x144:
                    case 0x145:
                    case 0x146:
                        goto 0x6e954601;
                    case 0x131:
                    case 0x134:
                    case 0x13c:
                        goto 0x6e953370;
                    case 0x12f:
                        goto 0x6e952425;
                    case 0x12e:
                        goto 0x6e952480;
                    case 0x12d:
                        goto 0x6e952520;
                    case 0x12a:
                        goto 0x6e952287;
                    case 0x129:
                        goto 0x6e952276;
                    case 0x125:
                        goto 0x6e952203;
                    case 43:
                        goto 0x6e951f30;
                    case 0x10d:
                    case 0x115:
                        goto 0x6e952115;
                    case 0x120:
                        goto 0x6e9521d7;
                    case 0x119:
                        goto 0x6e952236;
                    case 0x118:
                        goto 0x6e95222b;
                    case 0x117:
                        goto 0x6e95221f;
                    case 0:
                    case 3:
                    case 11:
                        goto 0x6e951750;
                    case 31:
                        goto 0x6e951d60;
                    case 0x113:
                        goto 0x6e9522ae;
                    case 13:
                    case 16:
                    case 24:
                        goto 0x6e95185d;
                    case 0x112:
                        goto 0x6e952298;
                    case 0x123:
                        goto 0x6e9521f8;
                    case 0x10b:
                        goto 0x6e9522ba;
                    case 0x128:
                        goto 0x6e952265;
                    case 0x10a:
                        goto 0x6e9522c6;
                    case 0x148:
                        goto 0x6e954587;
                    case 0x87:
                    case 0x88:
                    case 0x89:
                    case 0x8a:
                    case 0x8b:
                    case 0x8c:
                    case 0x8d:
                    case 0x8e:
                    case 0x8f:
                    case 0x90:
                    case 0x91:
                    case 0x92:
                    case 0x93:
                    case 0x94:
                    case 0x95:
                    case 0x96:
                    case 0x97:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9c:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                    case 0xa3:
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                        goto 0x6e951e80;
                    case 0xad:
                        goto 0x6e951d25;
                    case 0x67:
                    case 0x68:
                    case 0x69:
                    case 0x6a:
                    case 0x6b:
                    case 0x6c:
                    case 0x6d:
                    case 0x6e:
                    case 0x6f:
                    case 0x70:
                    case 0x71:
                    case 0x72:
                    case 0x73:
                    case 0x74:
                    case 0x75:
                    case 0x76:
                    case 0x77:
                    case 0x78:
                    case 0x79:
                    case 0x7a:
                    case 0x7b:
                    case 0x7c:
                    case 0x7d:
                    case 0x7e:
                    case 0x7f:
                    case 0x80:
                    case 0x81:
                    case 0x82:
                    case 0x83:
                    case 0x84:
                    case 0x85:
                    case 0x86:
                        goto 0x6e951cf0;
                    case 23:
                        goto 0x6e951ba6;
                    case 22:
                        goto 0x6e951b45;
                    case 40:
                        goto 0x6e951f70;
                    case 0x11a:
                        goto 0x6e9521b6;
                    case 0x13b:
                        goto 0x6e9533a7;
                    case 0x12c:
                        goto 0x6e952541;
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 0x65:
                    case 0x66:
                        goto 0x6e951ed0;
                    case 70:
                        goto 0x6e952010;
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 56:
                    case 57:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                        goto 0x6e952045;
                    case 14:
                        goto 0x6e951b6a;
                    case 0x108:
                        goto 0x6e951db0;
                    case 41:
                        goto 0x6e951f58;
                    case 44:
                        goto 0x6e951f06;
                    case 37:
                    case 38:
                        goto 0x6e951ce0;
                    case 0x11e:
                        goto 0x6e9521cd;
                    case 33:
                        goto 0x6e951d40;
                    case 39:
                        goto 0x6e951f86;
                    case 34:
                        goto 0x6e951d30;
                    case 0x109:
                    case 0x10c:
                    case 0x114:
                        goto 0x6e9520c0;
                    case 0x12b:
                        goto 0x6e952442;
                    case 29:
                    case 48:
                    case 54:
                    case 55:
                    case 58:
                    case 0xab:
                        goto 0x6e951d70;
                    case 0x127:
                        goto 0x6e952254;
                    case 0x132:
                        goto 0x6e9533c3;
                    case 46:
                        goto 0x6e952070;
                    case 27:
                    case 28:
                    case 30:
                    case 47:
                    case 0xa8:
                    case 0xaa:
                    case 0xac:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xee:
                    case 0xef:
                    case 0xf0:
                    case 0xf1:
                    case 0xf2:
                    case 0xf3:
                    case 0xf4:
                    case 0xf5:
                    case 0xf6:
                    case 0xf7:
                    case 0xf8:
                    case 0xf9:
                    case 0xfa:
                    case 0xfb:
                    case 0xfc:
                    case 0xfd:
                    case 0xfe:
                    case 0xff:
                    case 0x100:
                    case 0x101:
                    case 0x102:
                    case 0x103:
                    case 0x104:
                    case 0x105:
                    case 0x106:
                    case 0x107:
                    case 0x10e:
                    case 0x10f:
                    case 0x110:
                    case 0x111:
                    case 0x11b:
                    case 0x11c:
                    case 0x11f:
                    case 0x124:
                        goto 0x6e951d20;
                    case 26:
                    case 35:
                    case 36:
                        goto 0x6e951cb0;
                    case 17:
                    case 25:
                        goto 0x6e951b39;
                    case 0x11d:
                        goto 0x6e9521c2;
                    case 0xa9:
                        goto 0x6e951fb0;
                    case 0x122:
                        goto 0x6e9521ed;
                    case 42:
                        goto 0x6e951f46;
                    case 45:
                        goto 0x6e951ee0;
                    case 63:
                        goto 0x6e952020;
                    case 0x130:
                        goto 0x6e9524d6;
                    case 15:
                        goto 0x6e951b5d;
                    case 0x142:
                    case 0x14a:
                        goto 0x6e954580;
                    case 0x126:
                        goto 0x6e952243;
                    case 0x121:
                        goto 0x6e9521e2;
                    case 5:
                    case 6:
                    case 7:
                    case 8:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                        goto 0x6e951746;
                    case 0xa7:
                        goto 0x6e951e24;
                    case 32:
                        goto 0x6e951d50;
                    case 0x116:
                        goto 0x6e952214;
                    }
                }
                addr_6e951642_292:
                if (0) {
                    eax327 = edi54;
                } else {
                    addr_6e95164e_326:
                    esi58 = esp14->f20;
                    ecx53 = esp14->f16;
                    esp14->f0 = ebp34;
                    esp328 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp328->f0 = reinterpret_cast<void**>(0x6e951664);
                    fun_6e950bb0(ecx53, 4);
                    esp14 = reinterpret_cast<struct s33*>(&esp328->f12 + 4);
                    edx57 = esp14->f28 + 8;
                    eax329 = *reinterpret_cast<unsigned char*>(ebp34 + 0xb8);
                    if (*reinterpret_cast<signed char*>(&eax329) == -1) {
                        ebx62 = reinterpret_cast<void**>(0);
                        goto addr_6e9516a3_328;
                    } else {
                        eax330 = eax329 & 7;
                        if (*reinterpret_cast<unsigned char*>(&eax330) == 2) {
                            ebx62 = reinterpret_cast<void**>(4);
                            goto addr_6e9516a3_328;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&eax330) <= 2) {
                                if (*reinterpret_cast<unsigned char*>(&eax330)) 
                                    goto addr_6e951746_302; else 
                                    goto addr_6e951bc5_333;
                            } else {
                                esi58 = esi58;
                                if (*reinterpret_cast<unsigned char*>(&eax330) == 3) {
                                    addr_6e951bc5_333:
                                    ebx62 = reinterpret_cast<void**>(8);
                                    goto addr_6e9516a3_328;
                                } else {
                                    ebx62 = reinterpret_cast<void**>(16);
                                    if (*reinterpret_cast<unsigned char*>(&eax330) != 4) 
                                        goto addr_6e951746_302; else 
                                        goto addr_6e9516a3_328;
                                }
                            }
                        }
                    }
                }
                addr_6e95192a_336:
                if (eax327) 
                    goto addr_6e95164e_326; else 
                    goto addr_6e951932_337;
                addr_6e9516a3_328:
                ebx62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<unsigned char>(edx57));
                esi58 = reinterpret_cast<void**>(0);
                if (*reinterpret_cast<signed char*>(ebp34 + 0xba)) {
                    ecx53 = reinterpret_cast<void**>(0);
                    do {
                        ++ebx62;
                        edx57 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xffffffff))));
                        eax331 = (reinterpret_cast<unsigned char>(edx57) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                        ecx53 = ecx53 + 7;
                        esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) | eax331);
                    } while (*reinterpret_cast<signed char*>(&edx57) < reinterpret_cast<signed char>(0));
                    esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) + reinterpret_cast<unsigned char>(ebx62));
                }
                edi54 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebp34 + 0xb9)));
                eax332 = edi54;
                if (*reinterpret_cast<signed char*>(&eax332) == -1) 
                    goto addr_6e951889_342;
                eax333 = reinterpret_cast<unsigned char>(eax332) & 0x70;
                esp14->f20 = *reinterpret_cast<void***>(&eax333);
                if (*reinterpret_cast<void***>(&eax333) == 32) {
                    esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 84);
                } else {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax333)) <= 32) {
                        if (!*reinterpret_cast<void***>(&eax333)) 
                            goto addr_6e951a0e_347;
                        if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(&eax333) == 16)) 
                            goto addr_6e951746_302; else 
                            goto addr_6e951a0e_347;
                    } else {
                        eax334 = reinterpret_cast<unsigned char>(esp14->f20);
                        if (*reinterpret_cast<signed char*>(&eax334) == 64) {
                            esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 92);
                        } else {
                            if (*reinterpret_cast<signed char*>(&eax334) == 80) {
                                addr_6e951a0e_347:
                                esp14->f24 = reinterpret_cast<void**>(0);
                            } else {
                                if (*reinterpret_cast<signed char*>(&eax334) != 48) 
                                    goto addr_6e951746_302;
                                esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 88);
                            }
                        }
                    }
                }
                eax335 = edi54;
                if (*reinterpret_cast<signed char*>(&eax335) == 80) 
                    goto addr_6e951c00_355;
                eax336 = reinterpret_cast<unsigned char>(edi54) & 15;
                if (*reinterpret_cast<unsigned char*>(&eax336) > 12) 
                    goto addr_6e951746_302;
                eax69 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax336)));
                switch (eax69) {
                    addr_6e951746_302:
                case 5:
                case 6:
                case 7:
                case 8:
                    esp337 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp337->f0 = reinterpret_cast<void**>(0x6e95174b);
                    fun_6e955970(ecx53, esp337->f4, esp337->f8, esp337->f12, esp337->f16, esp337->f20, esp337->f24, esp337->f28, esp337->f32);
                    esp14 = reinterpret_cast<struct s33*>(&esp337->f4);
                    esi58 = esi58;
                    continue;
                case 0x13a:
                    goto 0x6e954590;
                case 0x133:
                    goto 0x6e9545f6;
                case 0x131:
                case 0x134:
                case 0x13c:
                    goto 0x6e954550;
                case 0x12d:
                    goto 0x6e9533b0;
                case 0x129:
                case 0x12a:
                case 0x12b:
                case 0x12c:
                    goto 0x6e953400;
                case 0x132:
                    goto 0x6e9545d0;
                case 0x128:
                case 0x130:
                    goto 0x6e9533a0;
                case 0x13e:
                    goto 0x6e954c30;
                case 0x126:
                    goto 0x6e9533f0;
                case 0x136:
                case 0x137:
                case 0x138:
                case 0x139:
                    goto 0x6e954601;
                case 0x124:
                case 0x127:
                case 0x12f:
                    goto 0x6e953370;
                case 0x122:
                    goto 0x6e952425;
                case 0x121:
                    goto 0x6e952480;
                case 0x120:
                    goto 0x6e952520;
                case 0x11d:
                    goto 0x6e952287;
                case 0x11c:
                    goto 0x6e952276;
                case 0xfe:
                    goto 0x6e9522ba;
                case 0x116:
                    goto 0x6e9521f8;
                case 0x135:
                case 0x13d:
                    goto 0x6e954580;
                case 0x119:
                    goto 0x6e952243;
                case 0x114:
                    goto 0x6e9521e2;
                case 30:
                    goto 0x6e951f30;
                case 0x100:
                case 0x108:
                    goto 0x6e952115;
                case 0x113:
                    goto 0x6e9521d7;
                case 0x10c:
                    goto 0x6e952236;
                case 0x10b:
                    goto 0x6e95222b;
                case 0x11a:
                    goto 0x6e952254;
                case 0x10a:
                    goto 0x6e95221f;
                case 0x109:
                    goto 0x6e952214;
                case 18:
                    goto 0x6e951d60;
                case 0x106:
                    goto 0x6e9522ae;
                case 0:
                case 3:
                case 11:
                    goto 0x6e95185d;
                case 0x105:
                    goto 0x6e952298;
                case 0x11b:
                    goto 0x6e952265;
                case 0xfd:
                    goto 0x6e9522c6;
                case 29:
                    goto 0x6e951f46;
                case 0x115:
                    goto 0x6e9521ed;
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 43:
                case 44:
                case 46:
                case 47:
                case 48:
                case 49:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                    goto 0x6e952045;
                case 57:
                    goto 0x6e952010;
                case 0x123:
                    goto 0x6e9524d6;
                case 2:
                    goto 0x6e951b5d;
                case 50:
                    goto 0x6e952020;
                case 14:
                case 15:
                case 17:
                case 34:
                case 0x9b:
                case 0x9d:
                case 0x9f:
                case 0xa1:
                case 0xa2:
                case 0xa3:
                case 0xa4:
                case 0xa5:
                case 0xa6:
                case 0xa7:
                case 0xa8:
                case 0xa9:
                case 0xaa:
                case 0xab:
                case 0xac:
                case 0xad:
                case 0xae:
                case 0xaf:
                case 0xb0:
                case 0xb1:
                case 0xb2:
                case 0xb3:
                case 0xb4:
                case 0xb5:
                case 0xb6:
                case 0xb7:
                case 0xb8:
                case 0xb9:
                case 0xba:
                case 0xbb:
                case 0xbc:
                case 0xbd:
                case 0xbe:
                case 0xbf:
                case 0xc0:
                case 0xc1:
                case 0xc2:
                case 0xc3:
                case 0xc4:
                case 0xc5:
                case 0xc6:
                case 0xc7:
                case 0xc8:
                case 0xc9:
                case 0xca:
                case 0xcb:
                case 0xcc:
                case 0xcd:
                case 0xce:
                case 0xcf:
                case 0xd0:
                case 0xd1:
                case 0xd2:
                case 0xd3:
                case 0xd4:
                case 0xd5:
                case 0xd6:
                case 0xd7:
                case 0xd8:
                case 0xd9:
                case 0xda:
                case 0xdb:
                case 0xdc:
                case 0xdd:
                case 0xde:
                case 0xdf:
                case 0xe0:
                case 0xe1:
                case 0xe2:
                case 0xe3:
                case 0xe4:
                case 0xe5:
                case 0xe6:
                case 0xe7:
                case 0xe8:
                case 0xe9:
                case 0xea:
                case 0xeb:
                case 0xec:
                case 0xed:
                case 0xee:
                case 0xef:
                case 0xf0:
                case 0xf1:
                case 0xf2:
                case 0xf3:
                case 0xf4:
                case 0xf5:
                case 0xf6:
                case 0xf7:
                case 0xf8:
                case 0xf9:
                case 0xfa:
                case 0x101:
                case 0x102:
                case 0x103:
                case 0x104:
                case 0x10e:
                case 0x10f:
                case 0x112:
                case 0x117:
                    goto 0x6e951d20;
                case 0x125:
                    goto 0x6e9533c3;
                case 33:
                    goto 0x6e952070;
                case 1:
                    goto 0x6e951b6a;
                case 0xfb:
                    goto 0x6e951db0;
                case 28:
                    goto 0x6e951f58;
                case 24:
                case 25:
                    goto 0x6e951ce0;
                case 0x111:
                    goto 0x6e9521cd;
                case 20:
                    goto 0x6e951d40;
                case 26:
                    goto 0x6e951f86;
                case 21:
                    goto 0x6e951d30;
                case 31:
                    goto 0x6e951f06;
                case 0x10d:
                    goto 0x6e9521b6;
                case 9:
                    goto 0x6e951b45;
                case 10:
                    goto 0x6e951ba6;
                case 27:
                    goto 0x6e951f70;
                case 0x9a:
                    goto 0x6e951e24;
                case 19:
                    goto 0x6e951d50;
                case 0xfc:
                case 0xff:
                case 0x107:
                    goto 0x6e9520c0;
                case 0x11e:
                    goto 0x6e952442;
                case 16:
                case 35:
                case 41:
                case 42:
                case 45:
                case 0x9e:
                    goto 0x6e951d70;
                case 0x13b:
                    goto 0x6e954587;
                case 0x7a:
                case 0x7b:
                case 0x7c:
                case 0x7d:
                case 0x7e:
                case 0x7f:
                case 0x80:
                case 0x81:
                case 0x82:
                case 0x83:
                case 0x84:
                case 0x85:
                case 0x86:
                case 0x87:
                case 0x88:
                case 0x89:
                case 0x8a:
                case 0x8b:
                case 0x8c:
                case 0x8d:
                case 0x8e:
                case 0x8f:
                case 0x90:
                case 0x91:
                case 0x92:
                case 0x93:
                case 0x94:
                case 0x95:
                case 0x96:
                case 0x97:
                case 0x98:
                case 0x99:
                    goto 0x6e951e80;
                case 13:
                case 22:
                case 23:
                    goto 0x6e951cb0;
                case 4:
                case 12:
                    goto 0x6e951b39;
                case 0x110:
                    goto 0x6e9521c2;
                case 0x9c:
                    goto 0x6e951fb0;
                case 0x118:
                    goto 0x6e952203;
                case 0xa0:
                    goto 0x6e951d25;
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 0x65:
                case 0x66:
                case 0x67:
                case 0x68:
                case 0x69:
                case 0x6a:
                case 0x6b:
                case 0x6c:
                case 0x6d:
                case 0x6e:
                case 0x6f:
                case 0x70:
                case 0x71:
                case 0x72:
                case 0x73:
                case 0x74:
                case 0x75:
                case 0x76:
                case 0x77:
                case 0x78:
                case 0x79:
                    goto 0x6e951cf0;
                case 32:
                    goto 0x6e951ee0;
                case 0x12e:
                    goto 0x6e9533a7;
                case 0x11f:
                    goto 0x6e952541;
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                    goto 0x6e951ed0;
                }
                addr_6e951926_298:
                eax327 = reinterpret_cast<void**>(1);
                goto addr_6e95192a_336;
            }
        case 0x6a:
        case 0x6d:
        case 0x75:
            ecx338 = *reinterpret_cast<void***>(ebx62);
            goto addr_6e951864_359;
        case 0x6b:
            edx339 = ebx62;
            esp14->f36 = esi58;
            ecx340 = 0;
            esp14->f32 = ebx62;
            esi341 = reinterpret_cast<void**>(0);
            do {
                ++edx339;
                ebx342 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx339 + 0xffffffff));
                eax343 = (ebx342 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx340);
                ecx340 = ecx340 + 7;
                esi341 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi341) | eax343);
            } while (*reinterpret_cast<signed char*>(&ebx342) < 0);
            ecx338 = esi341;
            ebx62 = esp14->f32;
            esi58 = esp14->f36;
            goto addr_6e951864_359;
        case 0x6c:
            ecx338 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ebx62))));
            goto addr_6e951864_359;
        case 0x6e:
        case 0x76:
            ecx338 = *reinterpret_cast<void***>(ebx62);
            goto addr_6e951864_359;
        case 0x73:
            esp344 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
            esp344->f0 = reinterpret_cast<void**>(0x6e951b50);
            fun_6e950b70(esp344->f4, esp344->f8);
            esp14 = reinterpret_cast<struct s33*>(&esp344->f4);
            ecx338 = esp14->f60;
            goto addr_6e951864_359;
        case 0x74:
            ecx338 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ebx62))));
            goto addr_6e951864_359;
            do {
                addr_6e951d20_367:
            case 0x78:
            case 0x79:
            case 0x7b:
            case 0x8c:
            case 0x105:
            case 0x107:
            case 0x109:
            case 0x10b:
            case 0x10c:
            case 0x10d:
            case 0x10e:
            case 0x10f:
            case 0x110:
            case 0x111:
            case 0x112:
            case 0x113:
            case 0x114:
            case 0x115:
            case 0x116:
            case 0x117:
            case 0x118:
            case 0x119:
            case 0x11a:
            case 0x11b:
            case 0x11c:
            case 0x11d:
            case 0x11e:
            case 0x11f:
            case 0x120:
            case 0x121:
            case 0x122:
            case 0x123:
            case 0x124:
            case 0x125:
            case 0x126:
            case 0x127:
            case 0x128:
            case 0x129:
            case 0x12a:
            case 0x12b:
            case 0x12c:
            case 0x12d:
            case 0x12e:
            case 0x12f:
            case 0x130:
            case 0x131:
            case 0x132:
            case 0x133:
            case 0x134:
            case 0x135:
            case 0x136:
            case 0x137:
            case 0x138:
            case 0x139:
            case 0x13a:
            case 0x13b:
            case 0x13c:
            case 0x13d:
            case 0x13e:
            case 0x13f:
            case 0x140:
            case 0x141:
            case 0x142:
            case 0x143:
            case 0x144:
            case 0x145:
            case 0x146:
            case 0x147:
            case 0x148:
            case 0x149:
            case 0x14a:
            case 0x14b:
            case 0x14c:
            case 0x14d:
            case 0x14e:
            case 0x14f:
            case 0x150:
            case 0x151:
            case 0x152:
            case 0x153:
            case 0x154:
            case 0x155:
            case 0x156:
            case 0x157:
            case 0x158:
            case 0x159:
            case 0x15a:
            case 0x15b:
            case 0x15c:
            case 0x15d:
            case 0x15e:
            case 0x15f:
            case 0x160:
            case 0x161:
            case 0x162:
            case 0x163:
            case 0x164:
            case 0x16b:
            case 0x16c:
            case 0x16d:
            case 0x16e:
            case 0x178:
            case 0x179:
            case 0x17c:
            case 0x181:
                esp345 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                esp345->f0 = reinterpret_cast<void**>(0x6e951d25);
                fun_6e955970(ecx53, esp345->f4, esp345->f8, esp345->f12, esp345->f16, esp345->f20, esp345->f24, esp345->f28, esp345->f32);
                esp14 = reinterpret_cast<struct s33*>(&esp345->f4);
                while (1) {
                case 0x10a:
                    eax69 = esi58;
                    while (1) {
                        while (reinterpret_cast<unsigned char>(eax69) < reinterpret_cast<unsigned char>(esp14->f12)) {
                            edx57 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69))));
                            esi58 = eax69 + 1;
                            ecx53 = edx57 + 0xfffffffd;
                            edi54 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx57)));
                            if (*reinterpret_cast<unsigned char*>(&ecx53) > 0xee) 
                                goto addr_6e951d20_367;
                            ecx53 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx53)));
                            switch (ecx53) {
                            case 16:
                                if (!ebp34) 
                                    goto addr_6e951d20_367;
                                --ebp34;
                                eax69 = esi58;
                                break;
                            case 19:
                                if (reinterpret_cast<signed char>(ebp34) <= reinterpret_cast<signed char>(1)) 
                                    goto addr_6e951d20_367;
                                eax346 = reinterpret_cast<uint16_t*>(ebp34 + 0xfffffffe);
                                edx347 = ebp34 + 0xffffffff;
                                ebx62 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<uint32_t>(eax346) * 4 + 48);
                                ecx53 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(edx347) * 4 + 48);
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(edx347) * 4 + 48) = ebx62;
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<uint32_t>(eax346) * 4 + 48) = ecx53;
                                eax69 = esi58;
                                break;
                            case 20:
                                if (reinterpret_cast<signed char>(ebp34) <= reinterpret_cast<signed char>(2)) 
                                    goto addr_6e951d20_367;
                                ecx53 = ebp34 + 0xffffffff;
                                eax348 = ebp34 + 0xfffffffd;
                                edx349 = reinterpret_cast<uint16_t*>(ebp34 + 0xfffffffe);
                                ebx62 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<uint32_t>(edx349) * 4 + 48);
                                esp14->f20 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ecx53) * 4 + 48);
                                edi350 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(eax348) * 4 + 48);
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ecx53) * 4 + 48) = ebx62;
                                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<uint32_t>(edx349) * 4 + 48) = edi350;
                                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(eax348) * 4 + 48) = esp14->f20;
                                eax69 = esi58;
                                break;
                            case 37:
                                if (!ebp34) 
                                    goto addr_6e951d20_367;
                                --ebp34;
                                eax69 = eax69 + 3;
                                ebx62 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebp34) * 4 + 48);
                                if (!ebx62) 
                                    break;
                                eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax69 + 1))));
                                break;
                            case 44:
                                eax69 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax69 + 1))) + 3);
                            case 0x12d:
                                goto 0x6e954590;
                            case 0x126:
                                goto 0x6e9545f6;
                            case 0x124:
                            case 0x127:
                            case 0x12f:
                                goto 0x6e954550;
                            case 0x120:
                                goto 0x6e9533b0;
                            case 0x11c:
                            case 0x11d:
                            case 0x11e:
                            case 0x11f:
                                goto 0x6e953400;
                            case 0x125:
                                goto 0x6e9545d0;
                            case 0x11b:
                            case 0x123:
                                goto 0x6e9533a0;
                            case 0x131:
                                goto 0x6e954c30;
                            case 0x119:
                                goto 0x6e9533f0;
                            case 0x129:
                            case 0x12a:
                            case 0x12b:
                            case 0x12c:
                                goto 0x6e954601;
                            case 0x117:
                            case 0x11a:
                            case 0x122:
                                goto 0x6e953370;
                            case 0x116:
                                goto 0x6e9524d6;
                            case 0x115:
                                goto 0x6e952425;
                            case 0x114:
                                goto 0x6e952480;
                            case 0x121:
                                goto 0x6e9533a7;
                            case 45:
                            case 46:
                            case 47:
                            case 48:
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 65:
                            case 66:
                            case 67:
                            case 68:
                            case 69:
                            case 70:
                            case 71:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                                goto 0x6e951ed0;
                            case 0x112:
                                goto 0x6e952541;
                            case 0x128:
                            case 0x130:
                                goto 0x6e954580;
                            case 0x107:
                                goto 0x6e9521e2;
                            case 0x10c:
                                goto 0x6e952243;
                            case 0xf1:
                                goto 0x6e9522ba;
                            case 0x109:
                                goto 0x6e9521f8;
                            case 0x10f:
                                goto 0x6e952276;
                            case 17:
                                goto 0x6e951f30;
                            case 0xf3:
                            case 0xfb:
                                goto 0x6e952115;
                            case 0x106:
                                goto 0x6e9521d7;
                            case 0xff:
                                goto 0x6e952236;
                            case 0xfe:
                                goto 0x6e95222b;
                            case 0x10d:
                                goto 0x6e952254;
                            case 0xfd:
                                goto 0x6e95221f;
                            case 0xfc:
                                goto 0x6e952214;
                            case 5:
                                goto 0x6e951d60;
                            case 0xf9:
                                goto 0x6e9522ae;
                            case 0xf8:
                                goto 0x6e952298;
                            case 0x10e:
                                goto 0x6e952265;
                            case 0xf0:
                                goto 0x6e9522c6;
                            case 0x103:
                                goto 0x6e9521c2;
                            case 0x108:
                                goto 0x6e9521ed;
                            case 0x8f:
                                goto 0x6e951fb0;
                            case 0x110:
                                goto 0x6e952287;
                            case 0x93:
                                goto 0x6e951d25;
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 89:
                            case 90:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 97:
                            case 98:
                            case 99:
                            case 100:
                            case 0x65:
                            case 0x66:
                            case 0x67:
                            case 0x68:
                            case 0x69:
                            case 0x6a:
                            case 0x6b:
                            case 0x6c:
                                goto 0x6e951cf0;
                            case 14:
                                goto 0x6e951f70;
                            case 0x100:
                                goto 0x6e9521b6;
                            case 23:
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                            case 30:
                            case 31:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 38:
                            case 39:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                                goto 0x6e952045;
                            case 0xef:
                            case 0xf2:
                            case 0xfa:
                                goto 0x6e9520c0;
                            case 0x111:
                                goto 0x6e952442;
                            case 3:
                            case 22:
                            case 28:
                            case 29:
                            case 32:
                            case 0x91:
                                goto 0x6e951d70;
                            case 18:
                                goto 0x6e951f06;
                            case 15:
                                goto 0x6e951f58;
                            case 0xee:
                                goto 0x6e951db0;
                            case 6:
                                goto 0x6e951d50;
                            case 0x8d:
                                goto 0x6e951e24;
                            case 11:
                            case 12:
                                goto 0x6e951ce0;
                            case 0x104:
                                goto 0x6e9521cd;
                            case 7:
                                goto 0x6e951d40;
                            case 13:
                                goto 0x6e951f86;
                            case 8:
                                goto 0x6e951d30;
                            case 1:
                            case 2:
                            case 4:
                            case 21:
                            case 0x8e:
                            case 0x90:
                            case 0x92:
                            case 0x94:
                            case 0x95:
                            case 0x96:
                            case 0x97:
                            case 0x98:
                            case 0x99:
                            case 0x9a:
                            case 0x9b:
                            case 0x9c:
                            case 0x9d:
                            case 0x9e:
                            case 0x9f:
                            case 0xa0:
                            case 0xa1:
                            case 0xa2:
                            case 0xa3:
                            case 0xa4:
                            case 0xa5:
                            case 0xa6:
                            case 0xa7:
                            case 0xa8:
                            case 0xa9:
                            case 0xaa:
                            case 0xab:
                            case 0xac:
                            case 0xad:
                            case 0xae:
                            case 0xaf:
                            case 0xb0:
                            case 0xb1:
                            case 0xb2:
                            case 0xb3:
                            case 0xb4:
                            case 0xb5:
                            case 0xb6:
                            case 0xb7:
                            case 0xb8:
                            case 0xb9:
                            case 0xba:
                            case 0xbb:
                            case 0xbc:
                            case 0xbd:
                            case 0xbe:
                            case 0xbf:
                            case 0xc0:
                            case 0xc1:
                            case 0xc2:
                            case 0xc3:
                            case 0xc4:
                            case 0xc5:
                            case 0xc6:
                            case 0xc7:
                            case 0xc8:
                            case 0xc9:
                            case 0xca:
                            case 0xcb:
                            case 0xcc:
                            case 0xcd:
                            case 0xce:
                            case 0xcf:
                            case 0xd0:
                            case 0xd1:
                            case 0xd2:
                            case 0xd3:
                            case 0xd4:
                            case 0xd5:
                            case 0xd6:
                            case 0xd7:
                            case 0xd8:
                            case 0xd9:
                            case 0xda:
                            case 0xdb:
                            case 0xdc:
                            case 0xdd:
                            case 0xde:
                            case 0xdf:
                            case 0xe0:
                            case 0xe1:
                            case 0xe2:
                            case 0xe3:
                            case 0xe4:
                            case 0xe5:
                            case 0xe6:
                            case 0xe7:
                            case 0xe8:
                            case 0xe9:
                            case 0xea:
                            case 0xeb:
                            case 0xec:
                            case 0xed:
                            case 0xf4:
                            case 0xf5:
                            case 0xf6:
                            case 0xf7:
                            case 0x101:
                            case 0x102:
                            case 0x105:
                            case 0x10a:
                                goto 0x6e951d20;
                            case 0x118:
                                goto 0x6e9533c3;
                            case 0x10b:
                                goto 0x6e952203;
                            case 0x113:
                                goto 0x6e952520;
                            case 0x12e:
                                goto 0x6e954587;
                            case 0x6d:
                            case 0x6e:
                            case 0x6f:
                            case 0x70:
                            case 0x71:
                            case 0x72:
                            case 0x73:
                            case 0x74:
                            case 0x75:
                            case 0x76:
                            case 0x77:
                            case 0x78:
                            case 0x79:
                            case 0x7a:
                            case 0x7b:
                            case 0x7c:
                            case 0x7d:
                            case 0x7e:
                            case 0x7f:
                            case 0x80:
                            case 0x81:
                            case 0x82:
                            case 0x83:
                            case 0x84:
                            case 0x85:
                            case 0x86:
                            case 0x87:
                            case 0x88:
                            case 0x89:
                            case 0x8a:
                            case 0x8b:
                            case 0x8c:
                                goto 0x6e951e80;
                            case 0:
                            case 9:
                            case 10:
                                goto 0x6e951cb0;
                            }
                        }
                        goto addr_6e951cca_382;
                    case 0x77:
                    case 0x80:
                    case 0x81:
                        edi351 = *reinterpret_cast<void***>(eax69 + 1);
                        ebx62 = ebp34;
                        eax69 = eax69 + 5;
                        addr_6e951cb8_384:
                        if (reinterpret_cast<unsigned char>(ebx62) > reinterpret_cast<unsigned char>(63)) 
                            goto addr_6e951d20_367;
                        ebp34 = ebx62 + 1;
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebx62) * 4 + 48) = edi351;
                        continue;
                    case 0x7a:
                    case 0x8d:
                    case 0x93:
                    case 0x94:
                    case 0x97:
                    case 0x108:
                        if (!ebp34) 
                            goto addr_6e951d20_367;
                        ebx62 = ebp34 + 0xffffffff;
                        edi352 = *reinterpret_cast<void****>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebx62) * 4 + 48);
                        if (*reinterpret_cast<unsigned char*>(&edx57) == 31) {
                            edi351 = reinterpret_cast<void**>(-reinterpret_cast<uint32_t>(edi352));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx57) <= 31) {
                                if (*reinterpret_cast<unsigned char*>(&edx57) == 6) {
                                    edi351 = *edi352;
                                    eax69 = esi58;
                                    goto addr_6e951cb8_384;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&edx57) != 25) 
                                        goto addr_6e951d20_367;
                                    eax69 = esi58;
                                    edx353 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi352) >> 31);
                                    edi351 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edi352) ^ edx353) - edx353);
                                    goto addr_6e951cb8_384;
                                }
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx57) == 35) {
                                    eax69 = esi58;
                                    ebp34 = reinterpret_cast<void**>(0);
                                    ecx53 = reinterpret_cast<void**>(0);
                                    esi58 = ebx62;
                                    do {
                                        ++eax69;
                                        ebx354 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                                        edx355 = (ebx354 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                                        ecx53 = ecx53 + 7;
                                        ebp34 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp34) | edx355);
                                    } while (*reinterpret_cast<signed char*>(&ebx354) < 0);
                                    ebx62 = esi58;
                                    edi351 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi352) + reinterpret_cast<unsigned char>(ebp34));
                                    goto addr_6e951cb8_384;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&edx57) == 0x94) {
                                        edx356 = eax69 + 2;
                                        eax357 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 1));
                                        if (*reinterpret_cast<unsigned char*>(&eax357) == 2) {
                                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*edi352)));
                                            eax69 = edx356;
                                            goto addr_6e951cb8_384;
                                        } else {
                                            if (*reinterpret_cast<unsigned char*>(&eax357) <= 2) {
                                                if (*reinterpret_cast<unsigned char*>(&eax357) != 1) 
                                                    goto addr_6e951d20_367;
                                                edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi352)));
                                                eax69 = edx356;
                                                goto addr_6e951cb8_384;
                                            } else {
                                                if (*reinterpret_cast<unsigned char*>(&eax357) == 4) 
                                                    goto addr_6e9521ad_405;
                                                if (*reinterpret_cast<unsigned char*>(&eax357) != 8) 
                                                    goto addr_6e951d20_367;
                                                addr_6e9521ad_405:
                                                edi351 = *edi352;
                                                eax69 = edx356;
                                                goto addr_6e951cb8_384;
                                            }
                                        }
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&edx57) != 32) 
                                            goto addr_6e951d20_367;
                                        edi351 = reinterpret_cast<void**>(~reinterpret_cast<uint32_t>(edi352));
                                        eax69 = esi58;
                                        goto addr_6e951cb8_384;
                                    }
                                }
                            }
                        }
                    case 0x7c:
                        edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 1))));
                        ebx62 = ebp34;
                        eax69 = eax69 + 2;
                        goto addr_6e951cb8_384;
                    case 0x7d:
                        edi351 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax69 + 1))));
                        ebx62 = ebp34;
                        eax69 = eax69 + 2;
                        goto addr_6e951cb8_384;
                    case 0x7e:
                        edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax69 + 1))));
                        ebx62 = ebp34;
                        eax69 = eax69 + 3;
                        goto addr_6e951cb8_384;
                    case 0x7f:
                        edi351 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax69 + 1))));
                        ebx62 = ebp34;
                        eax69 = eax69 + 3;
                        goto addr_6e951cb8_384;
                    case 0x82:
                    case 0x83:
                        edi351 = *reinterpret_cast<void***>(eax69 + 1);
                        ebx62 = ebp34;
                        eax69 = eax69 + 9;
                        goto addr_6e951cb8_384;
                    case 0x84:
                        eax69 = esi58;
                        edi351 = reinterpret_cast<void**>(0);
                        ecx53 = reinterpret_cast<void**>(0);
                        esi58 = esi58;
                        do {
                            ++eax69;
                            ebx358 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                            edx359 = (ebx358 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                            ecx53 = ecx53 + 7;
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi351) | edx359);
                        } while (*reinterpret_cast<signed char*>(&ebx358) < 0);
                        ebx62 = ebp34;
                        goto addr_6e951cb8_384;
                    case 0x85:
                        esp360 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp360->f0 = reinterpret_cast<void**>(0x6e951f7b);
                        eax69 = fun_6e950b70(esp360->f4, esp360->f8);
                        esp14 = reinterpret_cast<struct s33*>(&esp360->f4);
                        ebx62 = ebp34;
                        edi351 = esp14->f44;
                        goto addr_6e951cb8_384;
                    case 0x86:
                        if (!ebp34) 
                            goto addr_6e951d20_367;
                        edi351 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebp34) * 4 + 44);
                        addr_6e951f64_420:
                        ebx62 = ebp34;
                        eax69 = esi58;
                        goto addr_6e951cb8_384;
                    case 0x88:
                        if (reinterpret_cast<signed char>(ebp34) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_367;
                        edi351 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebp34) * 4 + 40);
                        ebx62 = ebp34;
                        eax69 = esi58;
                        goto addr_6e951cb8_384;
                    case 0x89:
                        eax361 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 1))));
                        ecx53 = ebp34 + 0xffffffff;
                        esp14->f40 = eax361;
                        if (reinterpret_cast<signed char>(eax361) >= reinterpret_cast<signed char>(ecx53)) 
                            goto addr_6e951d20_367;
                        ecx53 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) - reinterpret_cast<unsigned char>(eax361));
                        ebx62 = ebp34;
                        edi351 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ecx53) * 4 + 48);
                        eax69 = eax69 + 2;
                        goto addr_6e951cb8_384;
                    case 0x8e:
                    case 0x8f:
                    case 0x90:
                    case 0x91:
                    case 0x92:
                    case 0x95:
                    case 0x96:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                        if (reinterpret_cast<signed char>(ebp34) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_367;
                        edx362 = reinterpret_cast<uint32_t>(edx57 - 26);
                        ecx53 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebp34) * 4 + 44);
                        ebx62 = ebp34 + 0xfffffffe;
                        eax69 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebx62) * 4 + 48);
                        if (*reinterpret_cast<unsigned char*>(&edx362) > 20) 
                            goto addr_6e951d20_367;
                        switch (*reinterpret_cast<unsigned char*>(&edx362)) {
                        case 0:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) & reinterpret_cast<unsigned char>(eax69));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 1:
                            __asm__("cdq ");
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax69) / reinterpret_cast<signed char>(ecx53));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 2:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) - reinterpret_cast<unsigned char>(ecx53));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 3:
                            edx363 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) % reinterpret_cast<unsigned char>(ecx53));
                            eax69 = esi58;
                            edi351 = edx363;
                            goto addr_6e951cb8_384;
                        case 4:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) * reinterpret_cast<unsigned char>(eax69));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 7:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) | reinterpret_cast<unsigned char>(eax69));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 8:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) + reinterpret_cast<unsigned char>(eax69));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 10:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) << *reinterpret_cast<unsigned char*>(&ecx53));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 11:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax69) >> *reinterpret_cast<unsigned char*>(&ecx53));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 12:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax69) >> *reinterpret_cast<unsigned char*>(&ecx53));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 13:
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx53) ^ reinterpret_cast<unsigned char>(eax69));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 15:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax69 == ecx53))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 16:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax69) >= reinterpret_cast<signed char>(ecx53)))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 17:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax69) > reinterpret_cast<signed char>(ecx53)))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 18:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax69) <= reinterpret_cast<signed char>(ecx53)))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 19:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax69) < reinterpret_cast<signed char>(ecx53)))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 20:
                            edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax69 != ecx53))));
                            eax69 = esi58;
                            goto addr_6e951cb8_384;
                        case 53:
                            goto 0x6e954c30;
                        case 49:
                            goto 0x6e954590;
                        case 44:
                        case 52:
                            goto 0x6e954580;
                        case 41:
                            goto 0x6e9545d0;
                        case 40:
                        case 43:
                        case 51:
                            goto 0x6e954550;
                        case 28:
                            goto 0x6e9533c3;
                        case 42:
                            goto 0x6e9545f6;
                        case 26:
                            goto 0x6e9524d6;
                        case 27:
                        case 30:
                        case 38:
                            goto 0x6e953370;
                        case 25:
                            goto 0x6e952425;
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                            goto 0x6e954601;
                        case 21:
                            goto 0x6e952442;
                        case 24:
                            goto 0x6e952480;
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                            goto 0x6e953400;
                        case 37:
                            goto 0x6e9533a7;
                        case 29:
                            goto 0x6e9533f0;
                        case 5:
                        case 6:
                        case 9:
                        case 14:
                            goto 0x6e951d20;
                        case 36:
                            goto 0x6e9533b0;
                        case 31:
                        case 39:
                            goto 0x6e9533a0;
                        case 23:
                            goto 0x6e952520;
                        case 50:
                            goto 0x6e954587;
                        case 22:
                            goto 0x6e952541;
                        }
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                    case 0xa7:
                    case 0xa8:
                    case 0xa9:
                    case 0xaa:
                    case 0xab:
                    case 0xac:
                    case 0xad:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                        edi351 = edi54 - 48;
                        ebx62 = ebp34;
                        eax69 = esi58;
                        goto addr_6e951cb8_384;
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                        eax364 = reinterpret_cast<struct s26*>(edi54 + 0xffffffb0);
                        if (reinterpret_cast<int32_t>(eax364) > reinterpret_cast<int32_t>(17)) 
                            goto addr_6e951d20_367;
                        ebx62 = esp14->f16;
                        edi351 = *reinterpret_cast<void***>(ebx62 + reinterpret_cast<uint32_t>(eax364) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(ebx62 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<uint32_t>(eax364) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax364) + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_367;
                            edi351 = *reinterpret_cast<void***>(edi351);
                            goto addr_6e951f64_420;
                        }
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xee:
                    case 0xef:
                    case 0xf0:
                    case 0xf1:
                    case 0xf2:
                    case 0xf3:
                    case 0xf4:
                    case 0xf5:
                    case 0xf6:
                    case 0xf7:
                    case 0xf8:
                    case 0xf9:
                    case 0xfa:
                    case 0xfb:
                    case 0xfc:
                    case 0xfd:
                    case 0xfe:
                    case 0xff:
                    case 0x100:
                    case 0x101:
                    case 0x102:
                    case 0x103:
                        edi365 = reinterpret_cast<struct s27*>(edi54 - 0x70);
                        esp366 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp366->f0 = reinterpret_cast<void**>(0x6e951e8e);
                        eax69 = fun_6e950b70(esp366->f4, esp366->f8);
                        esp14 = reinterpret_cast<struct s33*>(&esp366->f4);
                        if (reinterpret_cast<int32_t>(edi365) > reinterpret_cast<int32_t>(17)) 
                            goto addr_6e951d20_367;
                        esi58 = esp14->f16;
                        ecx53 = *reinterpret_cast<void***>(esi58 + reinterpret_cast<uint32_t>(edi365) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(esi58 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi58) + reinterpret_cast<uint32_t>(edi365) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi365) + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_367;
                            ecx53 = *reinterpret_cast<void***>(ecx53);
                        }
                        ebx62 = ebp34;
                        edi351 = ecx53;
                        goto addr_6e951cb8_384;
                    case 0x104:
                        eax69 = esi58;
                        ecx53 = reinterpret_cast<void**>(0);
                        esi58 = reinterpret_cast<void**>(0);
                        do {
                            ++eax69;
                            ebx62 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff))));
                            edx367 = (reinterpret_cast<unsigned char>(ebx62) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                            ecx53 = ecx53 + 7;
                            esi58 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi58) | edx367);
                        } while (*reinterpret_cast<signed char*>(&ebx62) < reinterpret_cast<signed char>(0));
                        if (reinterpret_cast<signed char>(esi58) > reinterpret_cast<signed char>(17)) 
                            goto addr_6e951d20_367;
                        ebx62 = esp14->f16;
                        edi351 = *reinterpret_cast<void***>(ebx62 + reinterpret_cast<unsigned char>(esi58) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(ebx62 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx62) + reinterpret_cast<unsigned char>(esi58) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi58 + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_367;
                        } else {
                            addr_6e951e76_460:
                            ebx62 = ebp34;
                            goto addr_6e951cb8_384;
                        }
                        addr_6e951e74_461:
                        edi351 = *reinterpret_cast<void***>(edi351);
                        goto addr_6e951e76_460;
                    case 0x106:
                        ebx62 = reinterpret_cast<void**>(0);
                        ecx53 = reinterpret_cast<void**>(0);
                        do {
                            ++esi58;
                            edx368 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi58 + 0xffffffff));
                            eax369 = (edx368 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                            ecx53 = ecx53 + 7;
                            ebx62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) | eax369);
                        } while (*reinterpret_cast<signed char*>(&edx368) < 0);
                        esp370 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp370->f0 = reinterpret_cast<void**>(0x6e951fd6);
                        eax69 = fun_6e950b70(esp370->f4, esp370->f8);
                        esp14 = reinterpret_cast<struct s33*>(&esp370->f4);
                        if (reinterpret_cast<signed char>(ebx62) > reinterpret_cast<signed char>(17)) 
                            goto addr_6e951d20_367;
                        esi58 = esp14->f16;
                        edi371 = *reinterpret_cast<void***>(esi58 + reinterpret_cast<unsigned char>(ebx62) * 4);
                        if (!(*reinterpret_cast<unsigned char*>(esi58 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi58) + reinterpret_cast<unsigned char>(ebx62) + 0x6c)) {
                            if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx62 + 0x6e95d028)) != 4) 
                                goto addr_6e951d20_367;
                            edi371 = *reinterpret_cast<void***>(edi371);
                        }
                        edi351 = edi371;
                        ebx62 = ebp34;
                        goto addr_6e951cb8_384;
                    case 0x165:
                        esi58 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 1))));
                        ebx62 = esi58;
                        if (*reinterpret_cast<unsigned char*>(&ebx62) == 0xff) 
                            goto addr_6e951d20_367;
                        ebx62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx62) & 0x70);
                        if (*reinterpret_cast<unsigned char*>(&ebx62) == 32) {
                            esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 84);
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&ebx62) <= 32) {
                                if (!*reinterpret_cast<unsigned char*>(&ebx62)) 
                                    goto addr_6e95214b_474;
                                if (*reinterpret_cast<unsigned char*>(&ebx62) != 16) 
                                    goto addr_6e951d20_367; else 
                                    goto addr_6e95214b_474;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ebx62) == 64) {
                                    esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 92);
                                } else {
                                    esi58 = esi58;
                                    if (*reinterpret_cast<unsigned char*>(&ebx62) == 80) {
                                        addr_6e95214b_474:
                                        esp14->f24 = reinterpret_cast<void**>(0);
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&ebx62) != 48) 
                                            goto addr_6e951d20_367;
                                        esp14->f24 = *reinterpret_cast<void***>(esp14->f16 + 88);
                                    }
                                }
                            }
                        }
                        edx372 = esi58;
                        edi54 = eax69 + 2;
                        esp14->f20 = edi54;
                        if (*reinterpret_cast<signed char*>(&edx372) == 80) {
                            ebx62 = ebp34;
                            eax373 = reinterpret_cast<struct s45*>(reinterpret_cast<uint32_t>(eax69 + 5) & 0xfffffffc);
                            edi351 = eax373->f0;
                            eax69 = reinterpret_cast<void**>(&eax373->f4);
                            goto addr_6e951cb8_384;
                        } else {
                            edx374 = reinterpret_cast<unsigned char>(esi58) & 15;
                            if (*reinterpret_cast<unsigned char*>(&edx374) > 12) 
                                goto addr_6e951d20_367;
                            goto *reinterpret_cast<int32_t*>(*reinterpret_cast<unsigned char*>(&edx374) * 4 + 0x6e957910);
                        }
                    case 0x166:
                    case 0x169:
                    case 0x171:
                        edi351 = *reinterpret_cast<void***>(eax69 + 2);
                        eax69 = eax69 + 6;
                        addr_6e9520c6_486:
                        if (!edi351) 
                            goto addr_6e951e76_460;
                        edx375 = esp14->f24;
                        ebx376 = esi58;
                        if (*reinterpret_cast<unsigned char*>(&ebx62) == 16) {
                            edx375 = esp14->f20;
                        }
                        edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi351) + reinterpret_cast<unsigned char>(edx375));
                        if (*reinterpret_cast<signed char*>(&ebx376) < 0) 
                            goto addr_6e951e74_461;
                        ebx62 = ebp34;
                        goto addr_6e951cb8_384;
                    case 0x167:
                        eax69 = esp14->f20;
                        edi351 = reinterpret_cast<void**>(0);
                        ecx53 = reinterpret_cast<void**>(0);
                        esp14->f28 = ebp34;
                        ebp377 = ebx62;
                        do {
                            ++eax69;
                            ebx378 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax69 + 0xffffffff));
                            edx379 = (ebx378 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                            ecx53 = ecx53 + 7;
                            edi351 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi351) | edx379);
                        } while (*reinterpret_cast<signed char*>(&ebx378) < 0);
                        ebx62 = ebp377;
                        ebp34 = reinterpret_cast<void**>(4);
                        goto addr_6e9520c6_486;
                    case 0x168:
                        edi351 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax69 + 2))));
                        eax69 = eax69 + 4;
                        goto addr_6e9520c6_486;
                    case 0x16a:
                    case 0x172:
                        edi351 = *reinterpret_cast<void***>(eax69 + 2);
                        eax69 = eax69 + 10;
                        goto addr_6e9520c6_486;
                    case 0x16f:
                        esp380 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp380->f0 = reinterpret_cast<void**>(0x6e9522a5);
                        eax69 = fun_6e950b70(esp380->f4, esp380->f8);
                        esp14 = reinterpret_cast<struct s33*>(&esp380->f4);
                        edi351 = esp14->f44;
                        goto addr_6e9520c6_486;
                    case 0x170:
                        edi351 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax69 + 2))));
                        eax69 = eax69 + 4;
                        goto addr_6e9520c6_486;
                    }
                }
                addr_6e951cca_382:
            } while (!ebp34);
            goto addr_6e951cce_498;
        case 0x18e:
        case 0x191:
        case 0x199:
            edx381 = *reinterpret_cast<void***>(ecx53);
            goto addr_6e953375_500;
        case 0x18f:
            ebx382 = ecx53;
            ebp383 = reinterpret_cast<void**>(0);
            ecx384 = 0;
            esi58 = esi58;
            do {
                ++ebx382;
                edx385 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx382 + 0xffffffff));
                eax386 = (edx385 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx384);
                ecx384 = ecx384 + 7;
                ebp383 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp383) | eax386);
            } while (*reinterpret_cast<signed char*>(&edx385) < 0);
            edx381 = ebp383;
            goto addr_6e953375_500;
        case 0x190:
            edx381 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx53))));
            goto addr_6e953375_500;
        case 0x192:
        case 0x19a:
            edx381 = *reinterpret_cast<void***>(ecx53);
            goto addr_6e953375_500;
        case 0x193:
        case 0x194:
        case 0x195:
        case 0x196:
            esp387 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
            esp387->f0 = reinterpret_cast<void**>(0x6e953405);
            fun_6e955970(ecx53, esp387->f4, esp387->f8, esp387->f12, esp387->f16, esp387->f20, esp387->f24, esp387->f28, esp387->f32);
            esp388 = reinterpret_cast<struct s33*>(&esp387->f4);
            *esp388->f64 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx53 + 3) & 0xfffffffc);
            goto *reinterpret_cast<int32_t*>(&esp388->f44 + 4 + 4 + 4 + 4);
        case 0x197:
            esp389 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
            esp389->f0 = reinterpret_cast<void**>(0x6e9533bb);
            fun_6e953120(esp389->f4);
            esp14 = reinterpret_cast<struct s33*>(&esp389->f4);
            edx381 = esp14->f28;
            goto addr_6e953375_500;
        case 0x198:
            edx381 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx53))));
            goto addr_6e953375_500;
        case 0x19b:
        case 0x19e:
        case 0x1a6:
            edx390 = *reinterpret_cast<void***>(ecx53);
            goto addr_6e954555_511;
        case 0x19c:
            ebx391 = ecx53;
            edx390 = reinterpret_cast<void**>(0);
            ecx392 = 0;
            ebp393 = eax69;
            do {
                ++ebx391;
                eax394 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx391 + 0xffffffff));
                esi395 = (eax394 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx392);
                ecx392 = ecx392 + 7;
                edx390 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx390) | esi395);
            } while (*reinterpret_cast<signed char*>(&eax394) < 0);
            eax69 = ebp393;
            goto addr_6e954555_511;
        case 0x19d:
            edx390 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx53))));
            goto addr_6e954555_511;
        case 0x19f:
        case 0x1a7:
            edx390 = *reinterpret_cast<void***>(ecx53);
            goto addr_6e954555_511;
        case 0x1a0:
        case 0x1a1:
        case 0x1a2:
        case 0x1a3:
            esp396 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
            esp396->f0 = reinterpret_cast<void**>(0x6e954606);
            fun_6e955970(ecx53, esp396->f4, esp396->f8, esp396->f12, esp396->f16, esp396->f20, esp396->f24, esp396->f28, esp396->f32);
            esp397 = reinterpret_cast<struct s33*>(&esp396->f4);
            *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp397->f48)) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx53 + 3) & 0xfffffffc);
            goto *reinterpret_cast<int32_t*>(&esp397->f28 + 4 + 4 + 4 + 4);
        case 0x1a4:
            ebx391 = ecx53;
            edx390 = reinterpret_cast<void**>(0);
            ecx398 = 0;
            ebp399 = eax69;
            do {
                ++ebx391;
                eax400 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx391 + 0xffffffff));
                esi401 = (eax400 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx398);
                ecx398 = ecx398 + 7;
                edx390 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx390) | esi401);
            } while (*reinterpret_cast<signed char*>(&eax400) < 0);
            eax69 = ebp399;
            if (ecx398 <= 31 && eax400 & 64) {
                edx390 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx390) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx398));
                goto addr_6e954555_511;
            }
        case 0x1a5:
            edx390 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx53))));
            goto addr_6e954555_511;
            addr_6e951cce_498:
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 0x13c + 4 + 4 + 4 + 4);
            addr_6e951932_337:
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 76 + 4 + 4 + 4 + 4);
            addr_6e951c00_355:
            eax402 = *reinterpret_cast<struct s31**>(reinterpret_cast<uint32_t>(ebx62 + 3) & 0xfffffffc);
            goto addr_6e951880_525;
        case 0x18d:
            goto 0x6e9524d6;
        case 0x18b:
            goto 0x6e952480;
        case 0x189:
            goto 0x6e952541;
        case 0x186:
            goto 0x6e952276;
        case 0x185:
            goto 0x6e952265;
        case 0x184:
            goto 0x6e952254;
        case 0x183:
            goto 0x6e952243;
        case 0x17b:
            goto 0x6e9521cd;
        case 0x17a:
            goto 0x6e9521c2;
        case 0x176:
            goto 0x6e952236;
        case 0x175:
            goto 0x6e95222b;
        case 0x174:
            goto 0x6e95221f;
        case 98:
        case 99:
        case 100:
        case 0x65:
        case 0x6f:
        case 0x70:
        case 0x71:
        case 0x72:
            goto 0x6e951746;
        case 0x87:
            goto 0x6e951f46;
        case 0x17d:
            goto 0x6e9521d7;
        case 0x66:
            goto 0x6e95199d;
        case 0x187:
            goto 0x6e952287;
        case 0x177:
            goto 0x6e9521b6;
        case 97:
        case 0x69:
            goto 0x6e951840;
        case 0x8b:
            goto 0x6e952070;
        case 95:
            goto 0x6e9519c1;
        case 0x17f:
            goto 0x6e9521ed;
        case 0x188:
            goto 0x6e952442;
        case 0x18c:
            goto 0x6e952425;
        case 0x17e:
            goto 0x6e9521e2;
        case 2:
        case 4:
        case 6:
            goto 0x6e949df3;
        case 0xa3:
            goto 0x6e952010;
        case 94:
            goto 0x6e9519cd;
        case 0x8a:
            goto 0x6e951ee0;
        case 0x173:
            goto 0x6e952214;
        case 0x1a8:
            goto 0x6e954c30;
        case 0x180:
            goto 0x6e9521f8;
        case 0x18a:
            goto 0x6e952520;
        case 0x9c:
            goto 0x6e952020;
        case 0x67:
            goto 0x6e9519b5;
        case 0x182:
            goto 0x6e952203;
        }
    } else {
        if (!eax50) {
            if (v20) {
                __asm__("bsr eax, [esp+0xc]");
                v17 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v20) ^ 31) + 32);
            } else {
                if (!v17) {
                    __asm__("bsr eax, [esp+0x14]");
                    v17 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v17) ^ 31) + 96);
                } else {
                    __asm__("bsr eax, [esp+0x10]");
                    v17 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v17) ^ 31) + 64);
                }
            }
        } else {
            __asm__("bsr eax, eax");
            v17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax50) ^ 31);
        }
        edx403 = reinterpret_cast<void*>(v17 - 12);
        ebx404 = reinterpret_cast<void*>(v17 + 19);
        if (reinterpret_cast<int32_t>(edx403) >= reinterpret_cast<int32_t>(0)) {
            ebx404 = edx403;
        }
        eax405 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx403) >> 31) >> 27);
        ebx406 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx404) >> 5);
        edx407 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edx403) + reinterpret_cast<uint32_t>(eax405) & 31) - reinterpret_cast<uint32_t>(eax405));
        v157 = ebx406;
        v20 = edx407;
        if (!edx407) 
            goto addr_6e94a353_536; else 
            goto addr_6e949bdc_537;
    }
    esp408 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
    esp408->f0 = ebx62;
    esp409 = reinterpret_cast<struct s46*>(reinterpret_cast<uint32_t>(esp408) - 24);
    zf410 = g6e956014 == 2;
    eax411 = esp409->f36;
    if (!zf410) {
        g6e956014 = 2;
    }
    if (eax411 == 2) {
        ebx412 = reinterpret_cast<int32_t*>(0x6e960028);
        if (!1) {
            do {
                eax413 = *ebx412;
                if (eax413) {
                    esp414 = reinterpret_cast<struct s47*>(reinterpret_cast<uint32_t>(esp409) - 4);
                    esp414->f0 = 0x6e954c78;
                    eax413(esp414->f4);
                    esp409 = reinterpret_cast<struct s46*>(&esp414->f4);
                }
                ++ebx412;
            } while (!reinterpret_cast<int1_t>(ebx412 == 0x6e960028));
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp409) + 24 + 4);
        }
    } else {
        if (eax411 == 1) {
            eax415 = esp409->f40;
            esp409->f4 = 1;
            esp409->f8 = eax415;
            esp409->f0 = esp409->f32;
            esp416 = reinterpret_cast<struct s47*>(reinterpret_cast<uint32_t>(esp409) - 4);
            esp416->f0 = 0x6e954cac;
            fun_6e955550(esp416->f4, 1, esp416->f12);
            esp409 = reinterpret_cast<struct s46*>(&esp416->f4);
        }
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp409) + 24 + 4);
    addr_6e954555_511:
    if (edx390) {
        ecx417 = reinterpret_cast<unsigned char>(eax69) & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx417) != 16) {
            edi54 = esp14->f12;
        }
        edx390 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx390) + reinterpret_cast<unsigned char>(edi54));
        if (*reinterpret_cast<signed char*>(&eax69) < 0) {
            edx390 = *reinterpret_cast<void***>(edx390);
        }
    }
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp14->f48)) = edx390;
    goto *reinterpret_cast<int32_t*>(&esp14->f28 + 4 + 4 + 4 + 4);
    addr_6e953375_500:
    if (edx381) {
        eax418 = reinterpret_cast<unsigned char>(esi58) & 0x70;
        eax419 = esi58;
        if (*reinterpret_cast<signed char*>(&eax418) != 16) {
            edi54 = esp14->f12;
        }
        edx381 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx381) + reinterpret_cast<unsigned char>(edi54));
        if (*reinterpret_cast<signed char*>(&eax419) < 0) {
            edx381 = *reinterpret_cast<void***>(edx381);
        }
    }
    *esp14->f64 = edx381;
    goto *reinterpret_cast<int32_t*>(&esp14->f44 + 4 + 4 + 4 + 4);
    addr_6e951864_359:
    eax402 = reinterpret_cast<struct s31*>(0);
    if (ecx338) {
        if (!reinterpret_cast<int1_t>(esp14->f20 == 16)) {
            ebx62 = esp14->f24;
        }
        eax402 = reinterpret_cast<struct s31*>(reinterpret_cast<unsigned char>(ecx338) + reinterpret_cast<unsigned char>(ebx62));
        ebx420 = edi54;
        if (*reinterpret_cast<signed char*>(&ebx420) < 0) {
            eax402 = *reinterpret_cast<struct s31**>(&eax402->f0);
        }
    }
    addr_6e951880_525:
    *reinterpret_cast<struct s31**>(esp14->f16 + 80) = eax402;
    addr_6e951889_342:
    ecx421 = esp14->f16;
    if (!esi58) {
    }
    esp14->f0 = ebp34;
    esp422 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
    esp422->f0 = reinterpret_cast<void**>(0x6e9518a6);
    fun_6e950bb0(ecx421, 4);
    goto *reinterpret_cast<int32_t*>(&esp422->f12 + 4 + 76 + 4 + 4 + 4 + 4);
    addr_6e949e25_99:
    edx117 = 0x7fff;
    addr_6e949d1f_95:
    ecx423 = *reinterpret_cast<uint16_t*>(&v48 + 2);
    *reinterpret_cast<uint16_t*>(&v424) = *reinterpret_cast<uint16_t*>(&eax122);
    *reinterpret_cast<uint16_t*>(&ecx423) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx423) & 0x8000);
    ecx425 = ecx423 | edx117;
    *reinterpret_cast<uint16_t*>(&v424 + 2) = *reinterpret_cast<uint16_t*>(&ecx425);
    *reinterpret_cast<uint16_t*>(&ecx425) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx425) >> 8);
    ecx426 = ecx425 & 0x7f | static_cast<uint32_t>(v25) << 7;
    *reinterpret_cast<signed char*>(&v424 + 3) = *reinterpret_cast<signed char*>(&ecx426);
    if (v36) {
        fun_6e9478b0(v36);
    }
    *reinterpret_cast<void***>(a1) = edi120;
    *reinterpret_cast<void***>(a1 + 4) = esi119;
    *reinterpret_cast<void***>(a1 + 8) = ebx118;
    *reinterpret_cast<void***>(a1 + 12) = v424;
    goto v13;
    addr_6e94b785_129:
    edx427 = reinterpret_cast<void*>(0x7fff);
    addr_6e94b39a_568:
    ecx428 = *reinterpret_cast<uint16_t*>(&v48 + 2);
    *reinterpret_cast<uint16_t*>(&v429) = *reinterpret_cast<uint16_t*>(&eax159);
    *reinterpret_cast<uint16_t*>(&ecx428) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx428) & 0x8000);
    ecx430 = ecx428 | reinterpret_cast<uint32_t>(edx427);
    *reinterpret_cast<uint16_t*>(&v429 + 2) = *reinterpret_cast<uint16_t*>(&ecx430);
    *reinterpret_cast<uint16_t*>(&ecx430) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx430) >> 8);
    ecx431 = ecx430 & 0x7f | static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v20)) << 7;
    *reinterpret_cast<signed char*>(&v429 + 3) = *reinterpret_cast<signed char*>(&ecx431);
    if (v16) {
        fun_6e9478b0(v16);
    }
    *reinterpret_cast<void***>(a5) = ebx162;
    *reinterpret_cast<void***>(a5 + 4) = edi161;
    *reinterpret_cast<void***>(a5 + 8) = esi160;
    *reinterpret_cast<void***>(a5 + 12) = v429;
    goto a4;
    addr_6e94b834_121:
    ecx432 = reinterpret_cast<void*>(v36 + 0x3fff);
    if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx432) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx432 == 0)) {
        ebp433 = 0xffffc002 - reinterpret_cast<unsigned char>(v36);
        if (reinterpret_cast<int32_t>(ebp433) > reinterpret_cast<int32_t>(0x74)) {
            edi161 = v152;
            ebx162 = v151;
            esi160 = v149;
            if (reinterpret_cast<unsigned char>(edi161) | reinterpret_cast<unsigned char>(ebx162) | reinterpret_cast<unsigned char>(esi160) | reinterpret_cast<unsigned char>(v150)) {
                v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 32);
                if (0) {
                    ebx162 = reinterpret_cast<void**>(0);
                    *reinterpret_cast<unsigned char*>(&ebx162) = reinterpret_cast<uint1_t>(!!v17);
                } else {
                    ebx162 = reinterpret_cast<void**>(0);
                    if (0) {
                        ebx162 = reinterpret_cast<void**>(0);
                        *reinterpret_cast<unsigned char*>(&ebx162) = reinterpret_cast<uint1_t>(v17 == 0);
                    }
                }
                esi160 = reinterpret_cast<void**>(0);
                edi161 = reinterpret_cast<void**>(0);
            }
            edx427 = reinterpret_cast<void*>(0);
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 16);
            eax434 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v17)) & 1;
            *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&eax434);
            eax159 = 0;
            goto addr_6e94b39a_568;
        } else {
            eax435 = ebp433 + 31;
            if (reinterpret_cast<int32_t>(ebp433) >= reinterpret_cast<int32_t>(0)) {
                eax435 = ebp433;
            }
            edx436 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebp433) >> 31) >> 27;
            eax437 = reinterpret_cast<int32_t>(eax435) >> 5;
            ebp438 = (ebp433 + edx436 & 31) - edx436;
            if (reinterpret_cast<uint1_t>(eax437 < 0) | reinterpret_cast<uint1_t>(eax437 == 0)) {
                esi439 = 0;
                edx440 = 0;
            } else {
                edx441 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                esi439 = 0;
                ecx442 = edx441 + eax437;
                do {
                    esi439 = esi439 | v443;
                    ++edx441;
                } while (edx441 != ecx442);
                edx440 = eax437;
            }
            if (ebp438) {
                edx444 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + edx440 * 4 + 0x70);
                v445 = 32 - ebp438;
                ecx446 = *reinterpret_cast<unsigned char*>(&v445);
                esi439 = esi439 | edx444 << *reinterpret_cast<unsigned char*>(&ecx446);
                edx447 = 3 - eax437;
                v448 = edx447;
                if (!edx447) {
                    edx449 = 1;
                } else {
                    edx450 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                    v451 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx450) + edx447 * 4);
                    edi452 = esi439;
                    do {
                        edx450 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx450) + 4);
                    } while (edx450 != v451);
                    esi439 = edi452;
                    edx449 = 4 - eax437;
                }
                ecx453 = ebp438;
                *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + v448 * 4 + 0x70) = reinterpret_cast<unsigned char>(v150) >> *reinterpret_cast<signed char*>(&ecx453);
            } else {
                edx454 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                ecx455 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + (3 - eax437) * 4 + 0x74);
                do {
                    edx454 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx454) + 4);
                } while (edx454 != ecx455);
                edx449 = 4 - eax437;
            }
            while (edx449 <= 3) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + edx449 * 4 + 0x70) = 0;
                ++edx449;
            }
            eax456 = 0;
            *reinterpret_cast<unsigned char*>(&eax456) = reinterpret_cast<uint1_t>(!!esi439);
            eax457 = reinterpret_cast<void**>(eax456 | reinterpret_cast<unsigned char>(v151));
            v458 = eax457;
            if (!(*reinterpret_cast<unsigned char*>(&eax457) & 7)) 
                goto addr_6e94bbc6_599;
            v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 32);
            if (!0) 
                goto addr_6e94bbb2_601;
        }
    } else {
        edx459 = v151;
        if (!(*reinterpret_cast<unsigned char*>(&edx459) & 7)) 
            goto addr_6e94b8d0_603;
        v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 32);
        if (0) 
            goto addr_6e94bae0_605; else 
            goto addr_6e94b86b_606;
    }
    if (v17) {
        addr_6e94be5b_608:
        eax460 = eax457 + 8;
        v458 = eax460;
        below_or_equal461 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax460) <= reinterpret_cast<unsigned char>(7));
    } else {
        goto addr_6e94bbc6_599;
    }
    addr_6e94be18_610:
    edx462 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal461)));
    eax463 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v152) + reinterpret_cast<unsigned char>(edx462));
    v152 = eax463;
    edx464 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx462) > reinterpret_cast<unsigned char>(eax463)))));
    eax465 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v149) + reinterpret_cast<unsigned char>(edx464));
    v149 = eax465;
    eax466 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx464) > reinterpret_cast<unsigned char>(eax465))) + reinterpret_cast<unsigned char>(v150));
    v150 = eax466;
    addr_6e94bbca_611:
    if (!(reinterpret_cast<unsigned char>(eax466) & 0x80000)) {
        eax467 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
        ebx468 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x7c);
        do {
            eax467 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax467) + 4);
        } while (eax467 != ebx468);
        edx427 = reinterpret_cast<void*>(0);
        ebx162 = v458;
        edi161 = v152;
        esi160 = v149;
        eax159 = reinterpret_cast<unsigned char>(v150) >> 3;
    } else {
        v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 32);
        edx427 = reinterpret_cast<void*>(1);
        eax159 = 0;
        esi160 = reinterpret_cast<void**>(0);
        edi161 = reinterpret_cast<void**>(0);
        ebx162 = reinterpret_cast<void**>(0);
    }
    if (*reinterpret_cast<unsigned char*>(&v16) & 32 || !1) {
        v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 16);
    }
    ecx469 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v17)) & 1;
    *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&ecx469);
    goto addr_6e94b39a_568;
    addr_6e94bbb2_601:
    if (0) {
        if (v17) 
            goto addr_6e94bbc6_599; else 
            goto addr_6e94be5b_608;
    }
    if (!1 || (reinterpret_cast<unsigned char>(eax457) & 15) == 4) {
        addr_6e94bbc6_599:
        eax466 = v150;
        goto addr_6e94bbca_611;
    } else {
        eax470 = eax457 + 4;
        v458 = eax470;
        below_or_equal461 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax470) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e94be18_610;
    }
    addr_6e94bae0_605:
    if (!v17) {
        addr_6e94b8d0_603:
        eax471 = v150;
    } else {
        addr_6e94baec_622:
        edx472 = edx459 + 8;
        v151 = edx472;
        below_or_equal473 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx472) <= reinterpret_cast<unsigned char>(7));
        goto addr_6e94b88a_623;
    }
    addr_6e94b8d4_624:
    if (reinterpret_cast<unsigned char>(eax471) & 0x100000) {
        v150 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax471) & 0xffefffff);
        ecx432 = reinterpret_cast<void*>(v36 + 0x4000);
    }
    eax474 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
    esi475 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x7c);
    do {
        eax474 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax474) + 4);
    } while (eax474 != esi475);
    eax159 = reinterpret_cast<unsigned char>(v150) >> 3;
    if (reinterpret_cast<int32_t>(ecx432) > reinterpret_cast<int32_t>(0x7ffe)) {
        *reinterpret_cast<uint16_t*>(&eax159) = 0;
        if (0) {
            if (!v17) {
                addr_6e94ba18_631:
                edx427 = reinterpret_cast<void*>(0x7ffe);
                eax159 = 0xffffffff;
                ebx162 = reinterpret_cast<void**>(0xffffffff);
            } else {
                addr_6e94bacd_632:
                edx427 = reinterpret_cast<void*>(0x7fff);
                eax159 = 0;
                ebx162 = reinterpret_cast<void**>(0);
            }
        } else {
            if (0) {
                if (!v17) 
                    goto addr_6e94bacd_632;
                goto addr_6e94ba18_631;
            } else {
                if (!1) 
                    goto addr_6e94ba18_631;
                edx427 = reinterpret_cast<void*>(0x7fff);
                ebx162 = reinterpret_cast<void**>(0);
            }
        }
        esi160 = ebx162;
        edi161 = ebx162;
        v16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v16) | 40);
        ecx476 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v17)) & 1;
        *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&ecx476);
        goto addr_6e94b39a_568;
    } else {
        edx427 = ecx432;
        ebx162 = v151;
        *reinterpret_cast<uint16_t*>(&edx427) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx427) & 0x7fff);
        edi161 = v152;
        esi160 = v149;
        ecx477 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v17)) & 1;
        *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&ecx477);
        goto addr_6e94b39a_568;
    }
    addr_6e94b88a_623:
    edx478 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal473)));
    eax479 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v152) + reinterpret_cast<unsigned char>(edx478));
    v152 = eax479;
    edx480 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx478) > reinterpret_cast<unsigned char>(eax479)))));
    eax481 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v149) + reinterpret_cast<unsigned char>(edx480));
    v149 = eax481;
    eax471 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx480) > reinterpret_cast<unsigned char>(eax481))) + reinterpret_cast<unsigned char>(v150));
    v150 = eax471;
    goto addr_6e94b8d4_624;
    addr_6e94b86b_606:
    if (0) {
        if (!v17) 
            goto addr_6e94baec_622;
        goto addr_6e94b8d0_603;
    } else {
        if (0) 
            goto addr_6e94b8d0_603;
        if ((reinterpret_cast<unsigned char>(edx459) & 15) == 4) 
            goto addr_6e94b8d0_603;
        edx482 = edx459 + 4;
        v151 = edx482;
        below_or_equal473 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx482) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e94b88a_623;
    }
    addr_6e94b4d8_123:
    ebp34 = ebx62;
    v151 = v49;
    v152 = v51;
    v149 = v52;
    v150 = v59;
    addr_6e94b378_127:
    if (!reinterpret_cast<int1_t>(ebp34 == 2)) {
        if (ebp34 == 3) {
            eax483 = *reinterpret_cast<uint16_t*>(&v150);
            ebx162 = v151;
            edi161 = v152;
            ecx484 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v157)) & 1;
            esi160 = v149;
            *reinterpret_cast<uint16_t*>(&eax159) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax483) | 0x8000);
            *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&ecx484);
            goto addr_6e94b785_129;
        } else {
            if (!reinterpret_cast<int1_t>(ebp34 == 1)) {
                v17 = v157;
                goto addr_6e94b834_121;
            } else {
                edx427 = reinterpret_cast<void*>(0);
                esi160 = reinterpret_cast<void**>(0);
                edi161 = reinterpret_cast<void**>(0);
                ebx162 = reinterpret_cast<void**>(0);
                eax485 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v157)) & 1;
                *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&eax485);
                eax159 = 0;
                goto addr_6e94b39a_568;
            }
        }
    } else {
        edx427 = reinterpret_cast<void*>(0x7fff);
        esi160 = reinterpret_cast<void**>(0);
        edi161 = reinterpret_cast<void**>(0);
        ebx162 = reinterpret_cast<void**>(0);
        eax486 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v157)) & 1;
        *reinterpret_cast<unsigned char*>(&v20) = *reinterpret_cast<unsigned char*>(&eax486);
        eax159 = 0;
        goto addr_6e94b39a_568;
    }
    addr_6e949dcc_97:
    if (v35 == 2) {
        v68 = v26;
        goto addr_6e949d06_94;
    } else {
        if (v35 == 3) {
            eax487 = *reinterpret_cast<uint16_t*>(&v125);
            edi120 = v115;
            esi119 = v123;
            ecx488 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v26)) & 1;
            ebx118 = v124;
            *reinterpret_cast<uint16_t*>(&eax122) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax487) | 0x8000);
            v25 = *reinterpret_cast<unsigned char*>(&ecx488);
            goto addr_6e949e25_99;
        } else {
            v68 = v26;
            if (!reinterpret_cast<int1_t>(v35 == 1)) {
                addr_6e949f5e_52:
                ecx489 = v72 + 0x3fff;
                if (reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ecx489) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ecx489 == 0)) {
                    ebp490 = 0xffffc002 - v72;
                    if (reinterpret_cast<int32_t>(ebp490) > reinterpret_cast<int32_t>(0x74)) {
                        esi119 = v123;
                        edi120 = v115;
                        ebx118 = v124;
                        if (reinterpret_cast<unsigned char>(esi119) | reinterpret_cast<unsigned char>(edi120) | reinterpret_cast<unsigned char>(ebx118) | reinterpret_cast<unsigned char>(v125)) {
                            v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 32);
                            if (0) {
                                eax491 = reinterpret_cast<void**>(0);
                                *reinterpret_cast<unsigned char*>(&eax491) = reinterpret_cast<uint1_t>(!!v68);
                                edi120 = eax491;
                            } else {
                                edi120 = reinterpret_cast<void**>(0);
                                if (0) {
                                    eax492 = reinterpret_cast<void**>(0);
                                    *reinterpret_cast<unsigned char*>(&eax492) = reinterpret_cast<uint1_t>(v68 == 0);
                                    edi120 = eax492;
                                }
                            }
                            ebx118 = reinterpret_cast<void**>(0);
                            esi119 = reinterpret_cast<void**>(0);
                        }
                        edx117 = 0;
                        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 16);
                        eax493 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
                        v25 = *reinterpret_cast<unsigned char*>(&eax493);
                        eax122 = 0;
                        goto addr_6e949d1f_95;
                    } else {
                        eax494 = ebp490 + 31;
                        if (reinterpret_cast<int32_t>(ebp490) >= reinterpret_cast<int32_t>(0)) {
                            eax494 = ebp490;
                        }
                        edx495 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebp490) >> 31) >> 27;
                        eax496 = reinterpret_cast<int32_t>(eax494) >> 5;
                        ebp497 = (ebp490 + edx495 & 31) - edx495;
                        if (reinterpret_cast<uint1_t>(eax496 < 0) | reinterpret_cast<uint1_t>(eax496 == 0)) {
                            esi498 = 0;
                            edx499 = 0;
                        } else {
                            edx500 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                            esi498 = 0;
                            ecx501 = edx500 + eax496;
                            do {
                                esi498 = esi498 | v502;
                                ++edx500;
                            } while (edx500 != ecx501);
                            edx499 = eax496;
                        }
                        if (ebp497) {
                            edx503 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + edx499 * 4 + 0x70);
                            v504 = 32 - ebp497;
                            ecx505 = *reinterpret_cast<unsigned char*>(&v504);
                            esi498 = esi498 | edx503 << *reinterpret_cast<unsigned char*>(&ecx505);
                            edx506 = 3 - eax496;
                            v507 = edx506;
                            if (!edx506) {
                                edx508 = 1;
                            } else {
                                edx509 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                                edi510 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx509) + edx506 * 4);
                                v511 = esi498;
                                do {
                                    edx509 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx509) + 4);
                                } while (edx509 != edi510);
                                esi498 = v511;
                                edx508 = 4 - eax496;
                            }
                            ecx512 = ebp497;
                            *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + v507 * 4 + 0x70) = reinterpret_cast<unsigned char>(v125) >> *reinterpret_cast<signed char*>(&ecx512);
                        } else {
                            edx513 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                            ecx514 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + (3 - eax496) * 4 + 0x74);
                            do {
                                edx513 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx513) + 4);
                            } while (edx513 != ecx514);
                            edx508 = 4 - eax496;
                        }
                        eax515 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
                        if (edx508 <= 3) {
                            do {
                                eax515[edx508] = 0;
                                ++edx508;
                            } while (edx508 <= 3);
                        }
                        eax516 = 0;
                        *reinterpret_cast<unsigned char*>(&eax516) = reinterpret_cast<uint1_t>(!!esi498);
                        eax517 = reinterpret_cast<void**>(eax516 | reinterpret_cast<unsigned char>(v115));
                        v518 = eax517;
                        if (!(*reinterpret_cast<unsigned char*>(&eax517) & 7)) 
                            goto addr_6e94a631_683;
                        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 32);
                        if (!0) 
                            goto addr_6e94a61d_685;
                    }
                } else {
                    edx519 = v115;
                    if (!(*reinterpret_cast<unsigned char*>(&edx519) & 7)) 
                        goto addr_6e94a2e0_687;
                    v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 32);
                    if (0) 
                        goto addr_6e94a4d0_689; else 
                        goto addr_6e949f95_690;
                }
            } else {
                edx117 = 0;
                ebx118 = reinterpret_cast<void**>(0);
                esi119 = reinterpret_cast<void**>(0);
                edi120 = reinterpret_cast<void**>(0);
                eax520 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
                v25 = *reinterpret_cast<unsigned char*>(&eax520);
                eax122 = 0;
                goto addr_6e949d1f_95;
            }
        }
    }
    if (v68) {
        addr_6e94a8de_693:
        eax521 = eax517 + 8;
        v518 = eax521;
        below_or_equal522 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax521) <= reinterpret_cast<unsigned char>(7));
    } else {
        goto addr_6e94a631_683;
    }
    addr_6e94a877_695:
    edx523 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal522)));
    eax524 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v123) + reinterpret_cast<unsigned char>(edx523));
    v123 = eax524;
    edx525 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx523) > reinterpret_cast<unsigned char>(eax524)))));
    eax526 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v124) + reinterpret_cast<unsigned char>(edx525));
    v124 = eax526;
    eax527 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx525) > reinterpret_cast<unsigned char>(eax526))) + reinterpret_cast<unsigned char>(v125));
    v125 = eax527;
    addr_6e94a635_696:
    if (!(reinterpret_cast<unsigned char>(eax527) & 0x80000)) {
        eax528 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
        ebx529 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x7c);
        do {
            eax528 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax528) + 4);
        } while (eax528 != ebx529);
        edx117 = 0;
        edi120 = v518;
        esi119 = v123;
        ebx118 = v124;
        eax122 = reinterpret_cast<unsigned char>(v125) >> 3;
    } else {
        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 32);
        edx117 = 1;
        eax122 = 0;
        ebx118 = reinterpret_cast<void**>(0);
        esi119 = reinterpret_cast<void**>(0);
        edi120 = reinterpret_cast<void**>(0);
    }
    if (*reinterpret_cast<unsigned char*>(&v36) & 32 || !1) {
        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 16);
    }
    ecx530 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
    v25 = *reinterpret_cast<unsigned char*>(&ecx530);
    goto addr_6e949d1f_95;
    addr_6e94a61d_685:
    if (0) {
        if (v68) 
            goto addr_6e94a631_683; else 
            goto addr_6e94a8de_693;
    }
    if (!1 || (reinterpret_cast<unsigned char>(eax517) & 15) == 4) {
        addr_6e94a631_683:
        eax527 = v125;
        goto addr_6e94a635_696;
    } else {
        eax531 = eax517 + 4;
        v518 = eax531;
        below_or_equal522 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax531) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e94a877_695;
    }
    addr_6e94a4d0_689:
    if (!v68) {
        addr_6e94a2e0_687:
        eax532 = v125;
    } else {
        addr_6e94a4dc_707:
        edx533 = edx519 + 8;
        v115 = edx533;
        below_or_equal534 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx533) <= reinterpret_cast<unsigned char>(7));
        goto addr_6e949fc0_708;
    }
    addr_6e94a2e4_709:
    if (reinterpret_cast<unsigned char>(eax532) & 0x100000) {
        v125 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax532) & 0xffefffff);
        ecx489 = v72 + 0x4000;
    }
    eax535 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x70);
    esi536 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esp14) + 0x7c);
    do {
        eax535 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(eax535) + 4);
    } while (eax535 != esi536);
    eax122 = reinterpret_cast<unsigned char>(v125) >> 3;
    if (reinterpret_cast<int32_t>(ecx489) > reinterpret_cast<int32_t>(0x7ffe)) {
        *reinterpret_cast<uint16_t*>(&eax122) = 0;
        if (0) {
            if (!v68) {
                addr_6e94a428_716:
                edx117 = 0x7ffe;
                eax122 = 0xffffffff;
                ebx118 = reinterpret_cast<void**>(0xffffffff);
            } else {
                addr_6e94a4c2_717:
                edx117 = 0x7fff;
                eax122 = 0;
                ebx118 = reinterpret_cast<void**>(0);
            }
        } else {
            if (0) {
                if (!v68) 
                    goto addr_6e94a4c2_717;
                goto addr_6e94a428_716;
            } else {
                if (!1) 
                    goto addr_6e94a428_716;
                edx117 = 0x7fff;
                ebx118 = reinterpret_cast<void**>(0);
            }
        }
        esi119 = ebx118;
        edi120 = ebx118;
        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 40);
        ecx537 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
        v25 = *reinterpret_cast<unsigned char*>(&ecx537);
        goto addr_6e949d1f_95;
    } else {
        edx117 = ecx489;
        edi120 = v115;
        *reinterpret_cast<uint16_t*>(&edx117) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx117) & 0x7fff);
        esi119 = v123;
        ebx118 = v124;
        ecx538 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v68)) & 1;
        v25 = *reinterpret_cast<unsigned char*>(&ecx538);
        goto addr_6e949d1f_95;
    }
    addr_6e949fc0_708:
    edx539 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal534)));
    eax540 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v123) + reinterpret_cast<unsigned char>(edx539));
    v123 = eax540;
    edx541 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx539) > reinterpret_cast<unsigned char>(eax540)))));
    eax542 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v124) + reinterpret_cast<unsigned char>(edx541));
    v124 = eax542;
    eax532 = reinterpret_cast<void**>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx541) > reinterpret_cast<unsigned char>(eax542))) + reinterpret_cast<unsigned char>(v125));
    v125 = eax532;
    goto addr_6e94a2e4_709;
    addr_6e949f95_690:
    if (0) {
        if (!v68) 
            goto addr_6e94a4dc_707;
        goto addr_6e94a2e0_687;
    } else {
        if (0) 
            goto addr_6e94a2e0_687;
        if ((reinterpret_cast<unsigned char>(edx519) & 15) == 4) 
            goto addr_6e94a2e0_687;
        edx543 = edx519 + 4;
        v115 = edx543;
        below_or_equal534 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx543) <= reinterpret_cast<unsigned char>(3));
        goto addr_6e949fc0_708;
    }
    addr_6e94a353_536:
    if (reinterpret_cast<signed char>(ebx406) > reinterpret_cast<signed char>(3)) {
        ebx544 = reinterpret_cast<void**>(3);
        goto addr_6e949c42_731;
    } else {
        eax545 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 0x6c);
        ecx53 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(ebx406) * 4 + 92);
        edx546 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(ebx406)) << 2);
        do {
            esi58 = *reinterpret_cast<void***>(reinterpret_cast<unsigned char>(eax545) + reinterpret_cast<uint32_t>(edx546));
            eax545 = eax545 - 4;
            v59 = esi58;
        } while (eax545 != ecx53);
        ebx544 = ebx406 - 1;
    }
    addr_6e949c3e_735:
    if (reinterpret_cast<signed char>(ebx544) < reinterpret_cast<signed char>(0)) {
        addr_6e949c52_736:
        v36 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v36) | 2);
        edx57 = reinterpret_cast<void**>(0xffffc011 - reinterpret_cast<unsigned char>(v17));
        ebx62 = reinterpret_cast<void**>(0);
        goto addr_6e949c62_30;
    } else {
        addr_6e949c42_731:
        esi58 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(esp14) + 96);
    }
    do {
        *reinterpret_cast<void***>(esi58 + reinterpret_cast<unsigned char>(ebx544) * 4) = reinterpret_cast<void**>(0);
        --ebx544;
    } while (reinterpret_cast<signed char>(ebx544) >= reinterpret_cast<signed char>(0));
    goto addr_6e949c52_736;
    addr_6e949bdc_537:
    if (reinterpret_cast<signed char>(ebx406) > reinterpret_cast<signed char>(2)) {
        eax547 = v16;
        ebx544 = reinterpret_cast<void**>(2);
        v157 = reinterpret_cast<void**>(3);
    } else {
        esi548 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + 96);
        eax549 = esi548 + (3 - reinterpret_cast<unsigned char>(ebx406));
        v16 = reinterpret_cast<void**>(32 - reinterpret_cast<unsigned char>(v20));
        edi550 = ebp34;
        ebp551 = esi548;
        do {
            ecx552 = *reinterpret_cast<unsigned char*>(&v16);
            ecx553 = *reinterpret_cast<unsigned char*>(&v20);
            esi58 = reinterpret_cast<void**>(*eax549 << *reinterpret_cast<unsigned char*>(&ecx553));
            eax549[reinterpret_cast<unsigned char>(ebx406)] = *(eax549 - 1) >> *reinterpret_cast<signed char*>(&ecx552) | reinterpret_cast<unsigned char>(esi58);
            --eax549;
        } while (eax549 != ebp551);
        eax547 = v49;
        ebp34 = edi550;
        ebx544 = ebx406 - 1;
    }
    ecx53 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v20)));
    edi54 = v157;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(edi54) * 4 + 96) = reinterpret_cast<unsigned char>(eax547) << *reinterpret_cast<unsigned char*>(&ecx53);
    goto addr_6e949c3e_735;
    addr_6e94a3b0_14:
    if (ebp41 > 3) {
        ebp554 = 3;
        goto addr_6e949a89_744;
    } else {
        eax555 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + 92);
        ecx556 = reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + ebp41 * 4 + 76);
        edx557 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(-ebp41) << 2);
        do {
            eax555 = eax555 - 4;
            v31 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax555) + reinterpret_cast<uint32_t>(edx557));
        } while (eax555 != ecx556);
        ebp554 = ebp41 - 1;
    }
    addr_6e949a85_748:
    if (ebp554 < 0) {
        addr_6e949a9c_749:
        ebp34 = reinterpret_cast<void**>(0);
        v35 = reinterpret_cast<void**>(0);
        v32 = 0xffffc011 - v37;
        v36 = reinterpret_cast<void**>(2);
        goto addr_6e949adf_24;
    } else {
        addr_6e949a89_744:
        esi558 = reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 80);
    }
    do {
        esi558[ebp554] = 0;
        --ebp554;
    } while (ebp554 >= 0);
    goto addr_6e949a9c_749;
    addr_6e949a21_15:
    if (ebp41 > 2) {
        ebp554 = 2;
        v43 = 3;
    } else {
        esi559 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + 80);
        eax560 = esi559 + (3 - ebp41);
        v561 = 32 - v44;
        esi562 = edi21;
        edi563 = esi559;
        do {
            ecx564 = *reinterpret_cast<unsigned char*>(&v561);
            ecx565 = *reinterpret_cast<unsigned char*>(&v44);
            eax560[ebp41] = *(eax560 - 1) >> *reinterpret_cast<signed char*>(&ecx564) | *eax560 << *reinterpret_cast<unsigned char*>(&ecx565);
            --eax560;
        } while (eax560 != edi563);
        ebx15 = v28;
        edi21 = esi562;
        ebp554 = ebp41 - 1;
    }
    ecx566 = *reinterpret_cast<unsigned char*>(&v44);
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp14) + v43 * 4 + 80) = reinterpret_cast<unsigned char>(ebx15) << *reinterpret_cast<unsigned char*>(&ecx566);
    goto addr_6e949a85_748;
    while (1) {
        addr_6e952519_756:
        while (1) {
            addr_6e952420_757:
            esp567 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
            esp567->f0 = reinterpret_cast<void**>(0x6e952425);
            fun_6e955970(ecx53, esp567->f4, esp567->f8, esp567->f12, esp567->f16, esp567->f20, esp567->f24, esp567->f28, esp567->f32);
            esp14 = reinterpret_cast<struct s33*>(&esp567->f4);
            while (1) {
                eax568 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp14->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)));
                if (*reinterpret_cast<unsigned char*>(esi58 + 0x6e95d028) > 4) 
                    break;
                while (1) {
                    *reinterpret_cast<void***>(esp14->f16) = reinterpret_cast<void**>(1);
                    while (1) {
                        edi54 = esp14->f12;
                        *reinterpret_cast<void***>(edi54) = eax568;
                        while (1) {
                            ++esi58;
                            ebx62 = ebx62 + 8;
                            esp14->f16 = esp14->f16 + 1;
                            esp14->f12 = esp14->f12 + 4;
                            if (reinterpret_cast<int1_t>(esi58 == 18)) 
                                goto addr_6e952457_762;
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62)) > reinterpret_cast<unsigned char>(5)) 
                                continue;
                            eax69 = *reinterpret_cast<void***>(ebx62);
                            switch (eax69) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        eax568 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp14->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)));
                        if (!(*reinterpret_cast<unsigned char*>(esp14->f20 + 99) & 64)) 
                            continue;
                        addr_6e9524ca_767:
                        *reinterpret_cast<void***>(esp14->f16) = reinterpret_cast<void**>(0);
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)) + 0x9c)) 
                            goto addr_6e952560_769;
                        eax568 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)) * 4 + 48);
                        if (!(*reinterpret_cast<unsigned char*>(esp14->f20 + 99) & 64)) 
                            continue;
                        goto addr_6e9524ca_767;
                        eax569 = *reinterpret_cast<void***>(ebx62 + 0xfffffffc);
                        edi570 = ebx62;
                        esi58 = esi58;
                        do {
                            ++eax569;
                            ebx571 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax569 + 0xffffffff));
                        } while (*reinterpret_cast<signed char*>(&ebx571) < 0);
                        ebx62 = edi570;
                        ecx53 = reinterpret_cast<void**>(&esp14->f48);
                        esp14->f0 = esp14->f24;
                        esp572 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                        esp572->f0 = reinterpret_cast<void**>(0x6e9524bc);
                        eax568 = fun_6e951c60(ecx53, esp572->f4);
                        esp14 = reinterpret_cast<struct s33*>(&esp572->f12 + 4);
                        if (*reinterpret_cast<unsigned char*>(esp14->f20 + 99) & 64) 
                            goto addr_6e9524ca_767;
                    }
                    eax573 = *reinterpret_cast<void***>(ebx62 + 0xfffffffc);
                    edi574 = ebx62;
                    do {
                        ++eax573;
                        ebx575 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax573 + 0xffffffff));
                    } while (*reinterpret_cast<signed char*>(&ebx575) < 0);
                    ebx62 = edi574;
                    ecx53 = reinterpret_cast<void**>(&esp14->f48);
                    esp14->f0 = esp14->f24;
                    esp576 = reinterpret_cast<struct s36*>(reinterpret_cast<uint32_t>(esp14) - 4);
                    esp576->f0 = reinterpret_cast<void**>(0x6e95250c);
                    eax568 = fun_6e951c60(ecx53, esp576->f4);
                    esp14 = reinterpret_cast<struct s33*>(&esp576->f12 + 4);
                    addr_6e95250c_778:
                    if (*reinterpret_cast<unsigned char*>(esi58 + 0x6e95d028) <= 4) 
                        continue; else 
                        goto addr_6e952519_756;
                    addr_6e952560_769:
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e952420_757;
                    edx577 = *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc) + 0x6e95d028);
                    eax568 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp14) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx62 + 0xfffffffc)) * 4 + 48);
                    if (!(esp14->f147 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx577) != 4) 
                            goto addr_6e952420_757;
                        eax568 = *reinterpret_cast<void***>(eax568);
                        goto addr_6e95250c_778;
                    }
                }
            }
        }
    }
    addr_6e952457_762:
    if (*reinterpret_cast<signed char*>(esp14->f28 + 0xbb)) {
        *reinterpret_cast<uint32_t*>(esp14->f20 + 96) = *reinterpret_cast<uint32_t*>(esp14->f20 + 96) | 0x80000000;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 0xbc + 4 + 4 + 4 + 4);
    } else {
        *reinterpret_cast<uint32_t*>(esp14->f20 + 96) = *reinterpret_cast<uint32_t*>(esp14->f20 + 96) & 0x7fffffff;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp14) + 0xbc + 4 + 4 + 4 + 4);
    }
}

void __addtf3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    int32_t v21;
    void*** esp22;
    void** ebx23;
    void** v24;
    void** ecx25;
    void** edi26;
    void** esi27;
    void** edx28;
    void** v29;
    void** v30;
    void** eax31;
    uint32_t ecx32;
    unsigned char cl33;
    unsigned char v34;
    uint32_t ebp35;
    uint32_t v36;
    void*** ecx37;
    void** v38;
    void** v39;
    void** ecx40;
    void** v41;
    void** eax42;
    void** v43;
    void** v44;
    uint32_t ebx45;
    void** v46;
    void** v47;
    void** eax48;
    uint32_t edx49;
    unsigned char dl50;
    unsigned char v51;
    void*** edx52;
    uint32_t v53;
    void*** edi54;
    void** v55;
    void** esi56;
    void** v57;
    uint32_t eax58;
    void** ebx59;
    void** ecx60;
    void** edx61;
    void** v62;
    uint32_t eax63;
    void** ebp64;
    void** v65;
    void** v66;
    void*** edi67;
    int32_t edi68;
    uint32_t v69;
    int32_t eax70;
    uint32_t ebp71;
    void*** eax72;
    void** ecx73;
    void*** edx74;
    uint32_t eax75;
    uint32_t v76;
    uint32_t ecx77;
    int32_t eax78;
    int32_t v79;
    void* edx80;
    void* v81;
    uint32_t v82;
    uint32_t ecx83;
    int32_t edx84;
    void* edx85;
    void* eax86;
    uint32_t eax87;
    void** tmp32_88;
    void** tmp32_89;
    void** tmp32_90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** edi95;
    void** ecx96;
    uint32_t eax97;
    void*** edi98;
    uint32_t ecx99;
    void** ecx100;
    void** ebp101;
    void** v102;
    uint32_t eax103;
    void** v104;
    void** v105;
    void** ebx106;
    void** ecx107;
    void** ebx108;
    void** eax109;
    void** tmp32_110;
    void** tmp32_111;
    void** tmp32_112;
    uint32_t eax113;
    void** tmp32_114;
    void** tmp32_115;
    void** tmp32_116;
    void* v117;
    uint32_t ebp118;
    void* edi119;
    void* edx120;
    void** v121;
    uint32_t eax122;
    void** eax123;
    void** ecx124;
    void** tmp32_125;
    void** tmp32_126;
    void** tmp32_127;
    void** edi128;
    void** v129;
    void** v130;
    void*** esi131;
    int32_t ebx132;
    uint32_t v133;
    int32_t eax134;
    uint32_t v135;
    void*** eax136;
    uint32_t ecx137;
    void*** edx138;
    uint32_t eax139;
    uint32_t v140;
    uint32_t ecx141;
    int32_t eax142;
    int32_t v143;
    int32_t eax144;
    void*** eax145;
    void*** esi146;
    uint32_t v147;
    uint32_t ecx148;
    void*** eax149;
    void*** edx150;
    uint32_t eax151;
    void** ebx152;
    void** ecx153;
    uint32_t eax154;
    uint32_t eax155;
    void** edi156;
    void** v157;
    void** ebp158;
    void** v159;
    int32_t ebp160;
    uint32_t v161;
    int32_t eax162;
    uint32_t edi163;
    void*** eax164;
    void*** edx165;
    uint32_t eax166;
    uint32_t v167;
    uint32_t ecx168;
    int32_t eax169;
    int32_t v170;
    int32_t eax171;
    void** v172;
    void* eax173;
    uint32_t esi174;
    void* v175;
    uint32_t ecx176;
    void* eax177;
    void* edx178;
    uint32_t eax179;
    void** ebx180;
    void** ecx181;
    uint1_t cf182;
    uint1_t cf183;
    void** ebp184;
    void** ecx185;
    uint32_t ecx186;
    void** v187;
    void** v188;
    void** v189;
    uint32_t eax190;
    uint32_t ecx191;
    void** ecx192;
    uint1_t cf193;
    uint1_t cf194;
    void** ecx195;
    uint1_t cf196;
    uint1_t cf197;
    uint32_t ebx198;
    uint32_t ebx199;
    void** eax200;
    uint1_t cf201;
    uint1_t cf202;
    uint1_t cf203;
    uint1_t cf204;
    void** eax205;
    uint1_t below_or_equal206;
    void** eax207;
    void** ecx208;
    void** eax209;
    void** ecx210;
    void** eax211;
    uint32_t edx212;
    void*** eax213;
    void*** esi214;
    uint32_t eax215;
    uint32_t ebp216;
    int1_t zf217;
    void** v218;
    uint32_t eax219;
    uint16_t v220;
    uint32_t eax221;
    uint32_t eax222;
    void** tmp32_223;
    void** tmp32_224;
    void** tmp32_225;
    uint32_t v226;
    void* eax227;
    void* edi228;
    uint32_t esi229;
    uint32_t eax230;
    void** eax231;
    void* ebp232;
    void* ebx233;
    void*** eax234;
    void*** edi235;
    void** ebx236;
    void** esi237;
    void** edx238;
    void** ecx239;
    void** eax240;
    void** v241;
    void** edx242;
    void*** eax243;
    void** tmp32_244;
    void** tmp32_245;
    void** tmp32_246;
    uint1_t cf247;
    uint1_t cf248;
    uint32_t edx249;
    uint32_t ebx250;
    uint32_t edx251;
    uint32_t eax252;
    int32_t ebx253;
    uint32_t edi254;
    uint32_t v255;
    int32_t v256;
    uint32_t v257;
    int32_t ebx258;
    void*** eax259;
    void*** ecx260;
    void* edx261;
    void*** edi262;
    void*** eax263;
    uint32_t v264;
    uint32_t edi265;
    void*** ebp266;
    uint32_t ecx267;
    uint32_t ecx268;
    uint32_t ecx269;
    uint32_t eax270;
    uint32_t edx271;
    uint32_t eax272;
    uint32_t edx273;
    uint32_t edx274;
    int32_t eax275;
    uint32_t v276;
    uint32_t esi277;
    int32_t edx278;
    void*** edx279;
    void*** ecx280;
    uint32_t edx281;
    uint32_t v282;
    uint32_t ecx283;
    int32_t v284;
    int32_t edx285;
    void*** edx286;
    void*** v287;
    uint32_t ebp288;
    uint32_t ecx289;
    int32_t ecx290;
    void*** edx291;
    void*** ecx292;
    uint32_t eax293;
    uint32_t eax294;
    uint32_t eax295;
    uint32_t ebx296;
    void** ebp297;
    void** ebx298;
    void** eax299;
    void*** eax300;
    void** ecx301;
    uint32_t ebx302;
    uint32_t eax303;
    void* ebp304;
    void* ecx305;
    void*** eax306;
    void*** edx307;
    void** ebp308;
    void** ebx309;
    void** edx310;
    void** ecx311;
    void** eax312;
    void** v313;
    void** edx314;
    void*** eax315;
    uint32_t eax316;
    void** edi317;
    void** v318;
    void** v319;
    void** esi320;
    int32_t ebx321;
    uint32_t v322;
    int32_t eax323;
    uint32_t v324;
    void*** eax325;
    uint32_t ecx326;
    void*** edx327;
    uint32_t eax328;
    uint32_t v329;
    uint32_t ecx330;
    int32_t eax331;
    int32_t v332;
    int32_t eax333;
    void*** eax334;
    void*** v335;
    uint32_t ecx336;
    void*** eax337;
    void*** edx338;
    uint32_t eax339;
    uint1_t cf340;
    uint1_t cf341;
    uint1_t cf342;
    uint1_t cf343;

    v21 = reinterpret_cast<int32_t>(__return_address());
    esp22 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x8c);
    ebx23 = a7;
    v24 = a10;
    ecx25 = a8;
    edi26 = a9;
    esi27 = a11;
    edx28 = a12;
    __asm__("fnstcw word [esp+0x3e]");
    v29 = a5;
    v30 = a6;
    eax31 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&ecx25)));
    ecx32 = reinterpret_cast<unsigned char>(ecx25) >> 24;
    cl33 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ecx32) >> 7);
    v34 = cl33;
    ebp35 = reinterpret_cast<unsigned char>(ecx25) >> 16 & 0x7fff;
    v36 = cl33;
    ecx37 = esp22 + 92;
    v38 = ebx23;
    while (ecx37 = ecx37 - 4, v39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx23) >> 29 | reinterpret_cast<unsigned char>(eax31) << 3), ecx37 != esp22 + 80) {
        eax31 = v38;
        ebx23 = v30;
    }
    ecx40 = esi27;
    v41 = edi26;
    eax42 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v29) << 3);
    v43 = eax42;
    v44 = eax42;
    ebx45 = reinterpret_cast<unsigned char>(edx28) >> 16 & 0x7fff;
    v46 = esi27;
    v47 = v24;
    eax48 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edx28)));
    edx49 = reinterpret_cast<unsigned char>(edx28) >> 24;
    dl50 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx49) >> 7);
    v51 = dl50;
    edx52 = esp22 + 0x6c;
    v53 = dl50;
    edi54 = esp22 + 96;
    while (edx52 = edx52 - 4, v55 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx40) >> 29 | reinterpret_cast<unsigned char>(eax48) << 3), edx52 != edi54) {
        eax48 = v46;
        ecx40 = v47;
    }
    esi56 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v41) * 8);
    v57 = esi56;
    if (v36 == v53) {
        eax58 = ebp35 - ebx45;
        if (reinterpret_cast<int32_t>(eax58) <= reinterpret_cast<int32_t>(0)) {
            if (eax58) {
                if (ebp35) {
                    if (ebx45 == 0x7fff) {
                        ebx59 = v46;
                        ecx60 = v47;
                        edx61 = v55;
                        v62 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(ebx59) | reinterpret_cast<unsigned char>(ecx60) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                            v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                        }
                    } else {
                        v39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) | 0x80000);
                        eax63 = -eax58;
                        v62 = reinterpret_cast<void**>(0);
                        goto addr_6e948cb1_15;
                    }
                } else {
                    if (reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v43)) {
                        eax63 = eax58 ^ 0xffffffff;
                        if (eax63) {
                            v62 = reinterpret_cast<void**>(2);
                            if (ebx45 != 0x7fff) {
                                addr_6e948cb1_15:
                                if (reinterpret_cast<int32_t>(eax63) > reinterpret_cast<int32_t>(0x74)) {
                                    ebp64 = v30;
                                    v65 = v38;
                                    v66 = v39;
                                    edi67 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(ebp64) | reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v43));
                                    if (edi67) {
                                        edi67 = reinterpret_cast<void***>(1);
                                        ebp64 = reinterpret_cast<void**>(0);
                                        v65 = reinterpret_cast<void**>(0);
                                        v66 = reinterpret_cast<void**>(0);
                                        goto addr_6e948d50_21;
                                    }
                                } else {
                                    edi68 = reinterpret_cast<int32_t>(eax63) >> 5;
                                    v69 = eax63 & 31;
                                    if (!edi68) {
                                        eax70 = 0;
                                        ebp71 = 0;
                                    } else {
                                        eax72 = esp22 + 84;
                                        ebp71 = 0;
                                        ecx73 = v43;
                                        edx74 = esp22 + edi68 * 4 + 80;
                                        while (ebp71 = ebp71 | reinterpret_cast<unsigned char>(ecx73), eax72 != edx74) {
                                            ecx73 = a11;
                                            eax72 = eax72 + 4;
                                        }
                                        eax70 = edi68;
                                    }
                                    if (v69) {
                                        eax75 = *reinterpret_cast<uint32_t*>(esp22 + eax70 * 4 + 80);
                                        v76 = 32 - v69;
                                        ecx77 = *reinterpret_cast<unsigned char*>(&v76);
                                        ebp71 = ebp71 | eax75 << *reinterpret_cast<unsigned char*>(&ecx77);
                                        eax78 = 3 - edi68;
                                        v79 = eax78;
                                        if (eax78) {
                                            edx80 = reinterpret_cast<void*>(esp22 + 80);
                                            v81 = reinterpret_cast<void*>(esp22 + eax78 * 4 + 80);
                                            v82 = ebx45;
                                            do {
                                                edx80 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx80) + 4);
                                            } while (edx80 != v81);
                                            ebx45 = v82;
                                        }
                                        ecx83 = *reinterpret_cast<unsigned char*>(&v69);
                                        edx84 = v79 + 1;
                                        *reinterpret_cast<uint32_t*>(esp22 + v79 * 4 + 80) = reinterpret_cast<unsigned char>(v39) >> *reinterpret_cast<signed char*>(&ecx83);
                                    } else {
                                        edx85 = reinterpret_cast<void*>(esp22 + 80);
                                        eax86 = reinterpret_cast<void*>(esp22 + (3 - edi68) * 4 + 84);
                                        do {
                                            edx85 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx85) + 4);
                                        } while (edx85 != eax86);
                                        edx84 = 4 - edi68;
                                    }
                                    if (edx84 != 4) {
                                        do {
                                            *reinterpret_cast<int32_t*>(esp22 + edx84 * 4 + 80) = 0;
                                            ++edx84;
                                        } while (edx84 <= 3);
                                    }
                                    eax87 = 0;
                                    *reinterpret_cast<unsigned char*>(&eax87) = reinterpret_cast<uint1_t>(!!ebp71);
                                    ebp64 = v30;
                                    edi67 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v44) | eax87);
                                    v66 = v39;
                                    v65 = v38;
                                    goto addr_6e948d50_21;
                                }
                            } else {
                                ebx59 = v46;
                                ecx60 = v47;
                                edx61 = v55;
                                if (reinterpret_cast<unsigned char>(ebx59) | reinterpret_cast<unsigned char>(ecx60) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                                    v62 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx61) << 13) >> 31) + 3);
                                }
                            }
                        } else {
                            tmp32_88 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) + reinterpret_cast<unsigned char>(v43));
                            tmp32_89 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_88) < reinterpret_cast<unsigned char>(esi56)));
                            tmp32_90 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) + reinterpret_cast<unsigned char>(v38) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_89) < reinterpret_cast<unsigned char>(v47)));
                            ebp35 = ebx45;
                            v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) + reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_90) < reinterpret_cast<unsigned char>(v46)));
                            v92 = tmp32_90;
                            v93 = tmp32_89;
                            v94 = tmp32_88;
                            v62 = reinterpret_cast<void**>(2);
                            goto addr_6e948662_43;
                        }
                    } else {
                        if (ebx45 == 0x7fff) {
                            edi95 = v46;
                            ecx96 = v47;
                            edx61 = v55;
                            v62 = reinterpret_cast<void**>(0);
                            if (reinterpret_cast<unsigned char>(edi95) | reinterpret_cast<unsigned char>(ecx96) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                                v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                            }
                        } else {
                            edx61 = v55;
                            edi95 = v46;
                            ecx96 = v47;
                            v62 = reinterpret_cast<void**>(0);
                        }
                        ebp35 = ebx45;
                        v92 = edi95;
                        eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
                        v94 = esi56;
                        edi98 = esp22 + 0x70;
                        v93 = ecx96;
                        v91 = edx61;
                        v43 = esi56;
                        goto addr_6e947ac7_49;
                    }
                }
            } else {
                ecx99 = ebp35 + 1;
                if (reinterpret_cast<int32_t>(ecx99 & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
                    if (ebp35) {
                        if (ebp35 == 0x7fff) {
                            ecx100 = v30;
                            ebp101 = v39;
                            v62 = reinterpret_cast<void**>(0);
                            v102 = v38;
                            eax103 = reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(ecx100) | reinterpret_cast<unsigned char>(ebp101) | reinterpret_cast<unsigned char>(v43);
                            if (eax103) {
                                v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebp101) >> 18 ^ 1) & 1);
                            }
                        } else {
                            ebp101 = v39;
                            ecx100 = v30;
                            v62 = reinterpret_cast<void**>(0);
                            v102 = v38;
                            eax103 = reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(ebp101) | reinterpret_cast<unsigned char>(ecx100) | reinterpret_cast<unsigned char>(v43);
                        }
                        if (ebx45 == 0x7fff) {
                            edx61 = v55;
                            v104 = v47;
                            v105 = v46;
                            eax103 = eax103;
                            if (reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                                ebx106 = reinterpret_cast<void**>(1);
                                if (reinterpret_cast<unsigned char>(edx61) & 0x40000) {
                                    ebx106 = v62;
                                }
                                v62 = ebx106;
                            }
                        } else {
                            edx61 = v55;
                            v105 = v46;
                            v104 = v47;
                        }
                        if (eax103) 
                            goto addr_6e9493c1_63; else 
                            goto addr_6e948ea3_64;
                    } else {
                        ecx107 = v38;
                        ebx108 = v30;
                        edx61 = v39;
                        if (reinterpret_cast<unsigned char>(ecx107) | reinterpret_cast<unsigned char>(ebx108) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v43)) {
                            eax109 = v43;
                            if (!(reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v55) | reinterpret_cast<unsigned char>(esi56))) {
                                addr_6e948da5_67:
                                v94 = eax109;
                                edi98 = esp22 + 0x70;
                                eax97 = 0;
                                v93 = ebx108;
                                v92 = ecx107;
                                v91 = edx61;
                                v62 = reinterpret_cast<void**>(2);
                                goto addr_6e947ac7_49;
                            } else {
                                tmp32_110 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax109) + reinterpret_cast<unsigned char>(esi56));
                                tmp32_111 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx108) + reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_110) < reinterpret_cast<unsigned char>(eax109)));
                                tmp32_112 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx107) + reinterpret_cast<unsigned char>(v46) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_111) < reinterpret_cast<unsigned char>(ebx108)));
                                edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) + reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_112) < reinterpret_cast<unsigned char>(ecx107)));
                                v91 = edx61;
                                v92 = tmp32_112;
                                v93 = tmp32_111;
                                v94 = tmp32_110;
                                if (!(reinterpret_cast<unsigned char>(edx61) & 0x80000)) {
                                    v43 = tmp32_110;
                                    edi98 = esp22 + 0x70;
                                    eax97 = reinterpret_cast<unsigned char>(tmp32_110) & 7;
                                    v62 = reinterpret_cast<void**>(2);
                                    goto addr_6e947ac7_49;
                                } else {
                                    edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) & 0xfff7ffff);
                                    ebp35 = 1;
                                    v43 = tmp32_110;
                                    edi98 = esp22 + 0x70;
                                    eax97 = reinterpret_cast<unsigned char>(tmp32_110) & 7;
                                    v91 = edx61;
                                    v62 = reinterpret_cast<void**>(2);
                                    goto addr_6e947ac7_49;
                                }
                            }
                        } else {
                            edi98 = esp22 + 0x70;
                            edx61 = v55;
                            v94 = esi56;
                            eax113 = reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56);
                            eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
                            v62 = reinterpret_cast<void**>(~(eax113 - (eax113 + reinterpret_cast<uint1_t>(eax113 < eax113 + reinterpret_cast<uint1_t>(eax113 < 1)))) & 2);
                            v93 = v47;
                            v92 = v46;
                            v91 = edx61;
                            v43 = esi56;
                            goto addr_6e947ac7_49;
                        }
                    }
                } else {
                    tmp32_114 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) + reinterpret_cast<unsigned char>(esi56));
                    tmp32_115 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_114) < reinterpret_cast<unsigned char>(v43)));
                    tmp32_116 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) + reinterpret_cast<unsigned char>(v46) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_115) < reinterpret_cast<unsigned char>(v30)));
                    v117 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(v39) + reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_116) < reinterpret_cast<unsigned char>(v38)));
                    ebp118 = reinterpret_cast<unsigned char>(tmp32_114) << 31;
                    v93 = tmp32_115;
                    edi119 = reinterpret_cast<void*>(esp22 + 0x7c);
                    v92 = tmp32_116;
                    edx120 = reinterpret_cast<void*>(esp22 + 0x74);
                    v121 = tmp32_114;
                    while (edx120 != edi119) {
                        edx120 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx120) + 4);
                    }
                    eax122 = 0;
                    edx61 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(v117) >> 1);
                    *reinterpret_cast<unsigned char*>(&eax122) = reinterpret_cast<uint1_t>(!!ebp118);
                    v43 = reinterpret_cast<void**>(eax122 | reinterpret_cast<unsigned char>(v121));
                    v91 = edx61;
                    v94 = v43;
                    if (ecx99 == 0x7fff) 
                        goto addr_6e948c2d_76; else 
                        goto addr_6e9488f9_77;
                }
            }
        } else {
            if (!ebx45) {
                if (!(reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(v55) | reinterpret_cast<unsigned char>(esi56))) {
                    addr_6e947a8a_80:
                    if (ebp35 == 0x7fff) {
                        addr_6e947e28_81:
                        eax123 = v38;
                        ecx124 = v30;
                        edx61 = v39;
                        v62 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(eax123) | reinterpret_cast<unsigned char>(ecx124) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v43)) {
                            v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                            goto addr_6e947aaa_83;
                        }
                    } else {
                        edx61 = v39;
                        eax123 = v38;
                        ecx124 = v30;
                        v62 = reinterpret_cast<void**>(0);
                        goto addr_6e947aaa_83;
                    }
                } else {
                    --eax58;
                    if (!eax58) {
                        tmp32_125 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) + reinterpret_cast<unsigned char>(esi56));
                        tmp32_126 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_125) < reinterpret_cast<unsigned char>(v43)));
                        tmp32_127 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) + reinterpret_cast<unsigned char>(v46) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_126) < reinterpret_cast<unsigned char>(v30)));
                        v62 = reinterpret_cast<void**>(2);
                        v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) + reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_127) < reinterpret_cast<unsigned char>(v38)));
                        ebp35 = ebp35;
                        v92 = tmp32_127;
                        v93 = tmp32_126;
                        v94 = tmp32_125;
                        goto addr_6e948662_43;
                    } else {
                        v62 = reinterpret_cast<void**>(2);
                        if (ebp35 != 0x7fff) {
                            addr_6e947c6f_88:
                            if (reinterpret_cast<int32_t>(eax58) > reinterpret_cast<int32_t>(0x74)) {
                                edi128 = v55;
                                v129 = v47;
                                v130 = v46;
                                esi131 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(esi56) | (reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(edi128)));
                                if (esi131) {
                                    esi131 = reinterpret_cast<void***>(1);
                                    edi128 = reinterpret_cast<void**>(0);
                                    v129 = reinterpret_cast<void**>(0);
                                    v130 = reinterpret_cast<void**>(0);
                                    goto addr_6e948636_91;
                                }
                            } else {
                                ebx132 = reinterpret_cast<int32_t>(eax58) >> 5;
                                v133 = eax58 & 31;
                                if (!ebx132) {
                                    eax134 = 0;
                                    v135 = 0;
                                } else {
                                    eax136 = esp22 + 100;
                                    ecx137 = reinterpret_cast<unsigned char>(esi56);
                                    edx138 = edi54 + ebx132 * 4;
                                    if (eax136 != edx138) {
                                        do {
                                            eax136 = eax136 + 4;
                                            ecx137 = ecx137 | reinterpret_cast<unsigned char>(a15);
                                        } while (eax136 != edx138);
                                    }
                                    v135 = ecx137;
                                    eax134 = ebx132;
                                }
                                if (v133) {
                                    eax139 = *reinterpret_cast<uint32_t*>(esp22 + eax134 * 4 + 96);
                                    v140 = 32 - v133;
                                    ecx141 = *reinterpret_cast<unsigned char*>(&v140);
                                    v135 = v135 | eax139 << *reinterpret_cast<unsigned char*>(&ecx141);
                                    eax142 = 3 - ebx132;
                                    v143 = eax142;
                                    if (!eax142) {
                                        eax144 = 1;
                                    } else {
                                        eax145 = edi54;
                                        esi146 = edi54 + eax142 * 4;
                                        v147 = ebp35;
                                        do {
                                            eax145 = eax145 + 4;
                                        } while (eax145 != esi146);
                                        ebp35 = v147;
                                        eax144 = 4 - ebx132;
                                    }
                                    ecx148 = *reinterpret_cast<unsigned char*>(&v133);
                                    *reinterpret_cast<uint32_t*>(esp22 + v143 * 4 + 96) = reinterpret_cast<unsigned char>(v55) >> *reinterpret_cast<signed char*>(&ecx148);
                                } else {
                                    eax149 = edi54;
                                    edx150 = esp22 + (3 - ebx132) * 4 + 100;
                                    do {
                                        eax149 = eax149 + 4;
                                    } while (eax149 != edx150);
                                    eax144 = 4 - ebx132;
                                }
                                if (eax144 != 4) {
                                    do {
                                        edi54[eax144 * 4] = reinterpret_cast<void**>(0);
                                        ++eax144;
                                    } while (eax144 <= 3);
                                }
                                eax151 = 0;
                                edi128 = v55;
                                *reinterpret_cast<unsigned char*>(&eax151) = reinterpret_cast<uint1_t>(!!v135);
                                esi131 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(v57) | eax151);
                                v130 = v46;
                                v129 = v47;
                                goto addr_6e948636_91;
                            }
                        } else {
                            addr_6e947ddd_111:
                            ebx152 = v38;
                            ecx153 = v30;
                            edx61 = v39;
                            if (reinterpret_cast<unsigned char>(ebx152) | reinterpret_cast<unsigned char>(ecx153) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v43)) {
                                v62 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx61) << 13) >> 31) + 3);
                                goto addr_6e947e08_113;
                            }
                        }
                    }
                }
            } else {
                if (ebp35 == 0x7fff) {
                    ebx152 = v38;
                    ecx153 = v30;
                    edx61 = v39;
                    v62 = reinterpret_cast<void**>(0);
                    if (reinterpret_cast<unsigned char>(ebx152) | reinterpret_cast<unsigned char>(ecx153) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v43)) {
                        v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                        goto addr_6e947e08_113;
                    }
                } else {
                    v55 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) | 0x80000);
                    v62 = reinterpret_cast<void**>(0);
                    goto addr_6e947c6f_88;
                }
            }
        }
    } else {
        eax154 = ebp35 - ebx45;
        if (reinterpret_cast<int32_t>(eax154) <= reinterpret_cast<int32_t>(0)) {
            if (eax154) {
                if (!ebp35) {
                    if (reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v43)) {
                        eax155 = eax154 ^ 0xffffffff;
                        if (eax155) {
                            v62 = reinterpret_cast<void**>(2);
                            if (ebx45 != 0x7fff) {
                                addr_6e9484d8_124:
                                if (reinterpret_cast<int32_t>(eax155) > reinterpret_cast<int32_t>(0x74)) {
                                    edi156 = v39;
                                    v157 = v30;
                                    ebp158 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(edi156) | reinterpret_cast<unsigned char>(v43));
                                    v159 = v38;
                                    if (ebp158) {
                                        ebp158 = reinterpret_cast<void**>(1);
                                        edi156 = reinterpret_cast<void**>(0);
                                        v157 = reinterpret_cast<void**>(0);
                                        v159 = reinterpret_cast<void**>(0);
                                        goto addr_6e948581_127;
                                    }
                                } else {
                                    ebp160 = reinterpret_cast<int32_t>(eax155) >> 5;
                                    v161 = eax155 & 31;
                                    if (!ebp160) {
                                        eax162 = 0;
                                        edi163 = 0;
                                    } else {
                                        eax164 = esp22 + 84;
                                        edx165 = esp22 + ebp160 * 4 + 80;
                                        edi163 = reinterpret_cast<unsigned char>(v43);
                                        if (eax164 != edx165) {
                                            do {
                                                eax164 = eax164 + 4;
                                                edi163 = edi163 | reinterpret_cast<unsigned char>(a11);
                                            } while (eax164 != edx165);
                                        }
                                        eax162 = ebp160;
                                    }
                                    if (v161) {
                                        eax166 = *reinterpret_cast<uint32_t*>(esp22 + eax162 * 4 + 80);
                                        v167 = 32 - v161;
                                        ecx168 = *reinterpret_cast<unsigned char*>(&v167);
                                        edi163 = edi163 | eax166 << *reinterpret_cast<unsigned char*>(&ecx168);
                                        eax169 = 3 - ebp160;
                                        v170 = eax169;
                                        if (!eax169) {
                                            eax171 = 1;
                                        } else {
                                            v172 = esi56;
                                            eax173 = reinterpret_cast<void*>(esp22 + 80);
                                            esi174 = ebx45;
                                            v175 = reinterpret_cast<void*>(esp22 + eax169 * 4 + 80);
                                            do {
                                                eax173 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax173) + 4);
                                            } while (eax173 != v175);
                                            ebx45 = esi174;
                                            esi56 = v172;
                                            eax171 = 4 - ebp160;
                                        }
                                        ecx176 = *reinterpret_cast<unsigned char*>(&v161);
                                        *reinterpret_cast<uint32_t*>(esp22 + v170 * 4 + 80) = reinterpret_cast<unsigned char>(v39) >> *reinterpret_cast<signed char*>(&ecx176);
                                    } else {
                                        eax177 = reinterpret_cast<void*>(esp22 + 80);
                                        edx178 = reinterpret_cast<void*>(esp22 + (3 - ebp160) * 4 + 84);
                                        do {
                                            eax177 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax177) + 4);
                                        } while (eax177 != edx178);
                                        eax171 = 4 - ebp160;
                                    }
                                    if (eax171 != 4) {
                                        esi56 = esi56;
                                        do {
                                            *reinterpret_cast<int32_t*>(esp22 + eax171 * 4 + 80) = 0;
                                            ++eax171;
                                        } while (eax171 <= 3);
                                    }
                                    eax179 = 0;
                                    *reinterpret_cast<unsigned char*>(&eax179) = reinterpret_cast<uint1_t>(!!edi163);
                                    edi156 = v39;
                                    ebp158 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v44) | eax179);
                                    v159 = v38;
                                    v157 = v30;
                                    goto addr_6e948581_127;
                                }
                            } else {
                                ebx180 = v46;
                                ecx181 = v47;
                                edx61 = v55;
                                if (reinterpret_cast<unsigned char>(ebx180) | reinterpret_cast<unsigned char>(ecx181) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                                    v62 = reinterpret_cast<void**>((reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(edx61) << 13) >> 31) + 3);
                                    goto addr_6e948f51_149;
                                }
                            }
                        } else {
                            cf182 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi56) < reinterpret_cast<unsigned char>(v43))));
                            cf183 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v46) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v38) + cf182));
                            v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) - (reinterpret_cast<unsigned char>(v39) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v55) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v39) + cf183))));
                            v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - (reinterpret_cast<unsigned char>(v30) + cf182));
                            v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) - (reinterpret_cast<unsigned char>(v38) + cf183));
                            v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) - reinterpret_cast<unsigned char>(v43));
                            ebp35 = ebx45;
                            v36 = v53;
                            v62 = reinterpret_cast<void**>(2);
                            goto addr_6e947d65_151;
                        }
                    } else {
                        if (ebx45 == 0x7fff) {
                            ebp184 = v46;
                            ecx185 = v47;
                            edx61 = v55;
                            v62 = reinterpret_cast<void**>(0);
                            if (reinterpret_cast<unsigned char>(ebp184) | reinterpret_cast<unsigned char>(ecx185) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                                v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                            }
                        } else {
                            edx61 = v55;
                            ebp184 = v46;
                            ecx185 = v47;
                            v62 = reinterpret_cast<void**>(0);
                        }
                        v93 = ecx185;
                        ecx186 = v51;
                        eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
                        v92 = ebp184;
                        ebp35 = ebx45;
                        v94 = esi56;
                        v36 = v53;
                        edi98 = esp22 + 0x70;
                        v91 = edx61;
                        v34 = *reinterpret_cast<unsigned char*>(&ecx186);
                        v43 = esi56;
                        goto addr_6e947ac7_49;
                    }
                } else {
                    if (ebx45 == 0x7fff) {
                        ebx180 = v46;
                        ecx181 = v47;
                        edx61 = v55;
                        v62 = reinterpret_cast<void**>(0);
                        if (reinterpret_cast<unsigned char>(ebx180) | reinterpret_cast<unsigned char>(ecx181) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
                            v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx61) >> 18 ^ 1) & 1);
                            goto addr_6e948f51_149;
                        }
                    } else {
                        v39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) | 0x80000);
                        eax155 = -eax154;
                        v62 = reinterpret_cast<void**>(0);
                        goto addr_6e9484d8_124;
                    }
                }
            } else {
                if (reinterpret_cast<int32_t>(ebp35 + 1 & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
                    if (ebp35) {
                        if (ebp35 == 0x7fff) {
                            v62 = reinterpret_cast<void**>(0);
                            v187 = v30;
                            v188 = v39;
                            v189 = v38;
                            eax190 = reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v43);
                            ecx191 = eax190;
                            if (eax190) {
                                v62 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(v188) >> 18 ^ 1) & 1);
                            }
                        } else {
                            v62 = reinterpret_cast<void**>(0);
                            v188 = v39;
                            v187 = v30;
                            ecx191 = reinterpret_cast<unsigned char>(v38) | reinterpret_cast<unsigned char>(v39) | reinterpret_cast<unsigned char>(v30) | reinterpret_cast<unsigned char>(v43);
                            v189 = v38;
                        }
                        if (ebx45 == 0x7fff) 
                            goto addr_6e949061_168; else 
                            goto addr_6e948af0_169;
                    } else {
                        ecx107 = v38;
                        ebx108 = v30;
                        edx61 = v39;
                        if (reinterpret_cast<unsigned char>(ecx107) | reinterpret_cast<unsigned char>(ebx108) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v43)) {
                            if (reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(v55) | reinterpret_cast<unsigned char>(esi56)) {
                                ecx192 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - reinterpret_cast<unsigned char>(esi56));
                                cf193 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ebx108) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(esi56))));
                                cf194 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx107) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v46) + cf193));
                                edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) - (reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx61) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v55) + cf194))));
                                v91 = edx61;
                                v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx107) - (reinterpret_cast<unsigned char>(v46) + cf194));
                                v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx108) - (reinterpret_cast<unsigned char>(v47) + cf193));
                                v94 = ecx192;
                                if (!(reinterpret_cast<unsigned char>(edx61) & 0x80000)) {
                                    v43 = ecx192;
                                    if (!(reinterpret_cast<unsigned char>(ecx192) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v93) | reinterpret_cast<unsigned char>(v92))) {
                                        v36 = 0;
                                        v34 = 0;
                                    }
                                    eax97 = reinterpret_cast<unsigned char>(ecx192) & 7;
                                    v62 = reinterpret_cast<void**>(2);
                                    edi98 = esp22 + 0x70;
                                    goto addr_6e947ac7_49;
                                } else {
                                    ecx195 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) - reinterpret_cast<unsigned char>(v44));
                                    cf196 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi56) < reinterpret_cast<unsigned char>(v44))));
                                    cf197 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v46) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v38) + cf196));
                                    edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) - (reinterpret_cast<unsigned char>(v39) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v55) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v39) + cf197))));
                                    v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - (reinterpret_cast<unsigned char>(v30) + cf196));
                                    ebx198 = v51;
                                    v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) - (reinterpret_cast<unsigned char>(v38) + cf197));
                                    v36 = v53;
                                    eax97 = reinterpret_cast<unsigned char>(ecx195) & 7;
                                    v91 = edx61;
                                    edi98 = esp22 + 0x70;
                                    v94 = ecx195;
                                    v43 = ecx195;
                                    v34 = *reinterpret_cast<unsigned char*>(&ebx198);
                                    v62 = reinterpret_cast<void**>(2);
                                    goto addr_6e947ac7_49;
                                }
                            } else {
                                eax109 = v43;
                                goto addr_6e948da5_67;
                            }
                        } else {
                            edx61 = v55;
                            v94 = esi56;
                            v93 = v47;
                            v92 = v46;
                            v91 = edx61;
                            if (!(reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56))) {
                                v62 = reinterpret_cast<void**>(0);
                                v36 = 0;
                                edi98 = esp22 + 0x70;
                                v34 = 0;
                                goto addr_6e947af6_180;
                            } else {
                                ebx199 = v51;
                                eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
                                v43 = esi56;
                                v62 = reinterpret_cast<void**>(2);
                                v36 = v53;
                                edi98 = esp22 + 0x70;
                                v34 = *reinterpret_cast<unsigned char*>(&ebx199);
                                goto addr_6e947ac7_49;
                            }
                        }
                    }
                } else {
                    eax200 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - reinterpret_cast<unsigned char>(esi56));
                    cf201 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(esi56))));
                    cf202 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v38) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v46) + cf201));
                    edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) - (reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v39) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v55) + cf202))));
                    v91 = edx61;
                    v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) - (reinterpret_cast<unsigned char>(v46) + cf202));
                    v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v47) + cf201));
                    v94 = eax200;
                    if (!(reinterpret_cast<unsigned char>(edx61) & 0x80000)) {
                        v43 = eax200;
                        if (reinterpret_cast<unsigned char>(eax200) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v93) | reinterpret_cast<unsigned char>(v92)) {
                            v62 = reinterpret_cast<void**>(0);
                            goto addr_6e947f7d_185;
                        } else {
                            edi98 = esp22 + 0x70;
                            v62 = reinterpret_cast<void**>(0);
                            ebp35 = 0;
                            v36 = 0;
                            v34 = 0;
                            eax97 = reinterpret_cast<unsigned char>(v43) & 7;
                            goto addr_6e947ac7_49;
                        }
                    } else {
                        cf203 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi56) < reinterpret_cast<unsigned char>(v44))));
                        cf204 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v46) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v38) + cf203));
                        edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) - (reinterpret_cast<unsigned char>(v39) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v55) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v39) + cf204))));
                        v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - (reinterpret_cast<unsigned char>(v30) + cf203));
                        v91 = edx61;
                        v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) - (reinterpret_cast<unsigned char>(v38) + cf204));
                        v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) - reinterpret_cast<unsigned char>(v44));
                        v36 = v53;
                        v62 = reinterpret_cast<void**>(0);
                        goto addr_6e947f7d_185;
                    }
                }
            }
        } else {
            if (ebx45) {
                if (ebp35 == 0x7fff) 
                    goto addr_6e947e28_81;
                v55 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) | 0x80000);
                v62 = reinterpret_cast<void**>(0);
                goto addr_6e947b90_191;
            } else {
                if (!(reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(v55) | reinterpret_cast<unsigned char>(esi56))) 
                    goto addr_6e947a8a_80;
                --eax154;
                if (eax154) 
                    goto addr_6e948332_194; else 
                    goto addr_6e947d29_195;
            }
        }
    }
    v94 = esi56;
    v93 = ecx60;
    v92 = ebx59;
    addr_6e948eb7_197:
    ebp35 = 0x7fff;
    v91 = edx61;
    eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
    v43 = esi56;
    edi98 = esp22 + 0x70;
    addr_6e947ac7_49:
    if (!eax97) 
        goto addr_6e947af6_180;
    v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v62) | 32);
    addr_6e947ad9_199:
    if (0) {
        if (v36) {
            addr_6e9481a0_201:
            eax205 = v43 + 8;
            v94 = eax205;
            below_or_equal206 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax205) <= reinterpret_cast<unsigned char>(7));
        } else {
            goto addr_6e947af6_180;
        }
    } else {
        if (0) {
            if (v36) 
                goto addr_6e947af6_180; else 
                goto addr_6e9481a0_201;
        }
        if (!1 || (reinterpret_cast<unsigned char>(v43) & 15) == 4) {
            addr_6e947af6_180:
            if (!ebp35 && (reinterpret_cast<unsigned char>(v93) | reinterpret_cast<unsigned char>(v94) | reinterpret_cast<unsigned char>(v92) | reinterpret_cast<unsigned char>(edx61) && (*reinterpret_cast<unsigned char*>(&v62) & 32 || !1))) {
                v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v62) | 16);
                goto addr_6e947b25_207;
            }
        } else {
            eax207 = v43 + 4;
            v94 = eax207;
            below_or_equal206 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax207) <= reinterpret_cast<unsigned char>(3));
        }
    }
    ecx208 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(below_or_equal206)));
    eax209 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v93) + reinterpret_cast<unsigned char>(ecx208));
    v93 = eax209;
    ecx210 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx208) > reinterpret_cast<unsigned char>(eax209)))));
    eax211 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v92) + reinterpret_cast<unsigned char>(ecx210));
    v92 = eax211;
    edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) + static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx210) > reinterpret_cast<unsigned char>(eax211))));
    v91 = edx61;
    goto addr_6e947af6_180;
    addr_6e947b25_207:
    if (!(reinterpret_cast<unsigned char>(edx61) & 0x80000) || (++ebp35, v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) & 0xfff7ffff), ebp35 != 0x7fff)) {
        addr_6e947b42_210:
        edx212 = ebp35;
        *reinterpret_cast<uint16_t*>(&edx212) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx212) & 0x7fff);
    } else {
        if (1) 
            goto addr_6e948295_212;
        if (0) 
            goto addr_6e948289_214; else 
            goto addr_6e9480fc_215;
    }
    addr_6e947b51_216:
    eax213 = edi98;
    esi214 = esp22 + 0x7c;
    while (eax213 = eax213 + 4, eax213 != esi214) {
    }
    eax215 = reinterpret_cast<unsigned char>(v91) >> 3;
    if (ebp35 == 0x7fff) {
        ebp216 = eax215 | 0x8000;
        zf217 = (reinterpret_cast<unsigned char>(v93) | reinterpret_cast<unsigned char>(v94) | reinterpret_cast<unsigned char>(v92) | eax215) == 0;
        eax215 = 0;
        if (!zf217) {
            eax215 = ebp216;
        }
    }
    *reinterpret_cast<int16_t*>(&v218) = *reinterpret_cast<int16_t*>(&eax215);
    eax219 = v220;
    *reinterpret_cast<uint16_t*>(&eax219) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax219) & 0x8000);
    eax221 = eax219 | edx212;
    *reinterpret_cast<uint16_t*>(&v218 + 2) = *reinterpret_cast<uint16_t*>(&eax221);
    *reinterpret_cast<uint16_t*>(&eax221) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax221) >> 8);
    eax222 = eax221 & 0x7f | static_cast<uint32_t>(v34) << 7;
    *reinterpret_cast<signed char*>(&v218 + 3) = *reinterpret_cast<signed char*>(&eax222);
    if (v62) {
        fun_6e9478b0(v62);
    }
    *reinterpret_cast<void***>(a1) = v94;
    *reinterpret_cast<void***>(a1 + 4) = v93;
    *reinterpret_cast<void***>(a1 + 8) = v92;
    *reinterpret_cast<void***>(a1 + 12) = v218;
    goto v21;
    addr_6e948289_214:
    if (v36) {
        addr_6e948106_226:
        v91 = reinterpret_cast<void**>(0xffffffff);
        edx212 = 0x7ffe;
        v92 = reinterpret_cast<void**>(0xffffffff);
        ebp35 = 0x7ffe;
        v93 = reinterpret_cast<void**>(0xffffffff);
        v94 = reinterpret_cast<void**>(0xffffffff);
    } else {
        addr_6e948295_212:
        v91 = reinterpret_cast<void**>(0);
        edx212 = 0x7fff;
        v92 = reinterpret_cast<void**>(0);
        v93 = reinterpret_cast<void**>(0);
        v94 = reinterpret_cast<void**>(0);
    }
    v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v62) | 40);
    goto addr_6e947b51_216;
    addr_6e9480fc_215:
    if (!0) 
        goto addr_6e948106_226;
    if (!v36) 
        goto addr_6e948106_226;
    goto addr_6e948295_212;
    addr_6e948d50_21:
    tmp32_223 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) + reinterpret_cast<uint32_t>(edi67));
    tmp32_224 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<unsigned char>(ebp64) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_223) < reinterpret_cast<unsigned char>(esi56)));
    tmp32_225 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) + reinterpret_cast<unsigned char>(v65) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_224) < reinterpret_cast<unsigned char>(v47)));
    ebp35 = ebx45;
    v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) + reinterpret_cast<unsigned char>(v66) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_225) < reinterpret_cast<unsigned char>(v46)));
    v92 = tmp32_225;
    v93 = tmp32_224;
    v94 = tmp32_223;
    addr_6e948662_43:
    edx61 = v91;
    if (reinterpret_cast<unsigned char>(edx61) & 0x80000) {
        ++ebp35;
        v226 = reinterpret_cast<unsigned char>(edx61) & 0xfff7ffff;
        eax227 = reinterpret_cast<void*>(esp22 + 0x74);
        edi228 = reinterpret_cast<void*>(esp22 + 0x7c);
        esi229 = reinterpret_cast<unsigned char>(v94) << 31;
        while (eax227 != edi228) {
            eax227 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax227) + 4);
        }
        eax230 = 0;
        edx61 = reinterpret_cast<void**>(v226 >> 1);
        *reinterpret_cast<unsigned char*>(&eax230) = reinterpret_cast<uint1_t>(!!esi229);
        v43 = reinterpret_cast<void**>(eax230 | reinterpret_cast<unsigned char>(v94));
        eax231 = v43;
        v91 = edx61;
        v94 = eax231;
        if (ebp35 == 0x7fff) 
            goto addr_6e948861_234;
    } else {
        edi98 = esp22 + 0x70;
        v43 = v94;
        eax97 = reinterpret_cast<unsigned char>(v94) & 7;
        goto addr_6e947ac7_49;
    }
    addr_6e947d8d_236:
    eax97 = reinterpret_cast<unsigned char>(eax231) & 7;
    edi98 = esp22 + 0x70;
    goto addr_6e947ac7_49;
    addr_6e948861_234:
    if (1) 
        goto addr_6e948bfe_237;
    if (0) {
        if (v36) {
            addr_6e948884_240:
            v91 = reinterpret_cast<void**>(0xffffffff);
            eax97 = 7;
            ebp35 = 0x7ffe;
            v92 = reinterpret_cast<void**>(0xffffffff);
            v93 = reinterpret_cast<void**>(0xffffffff);
            v94 = reinterpret_cast<void**>(0xffffffff);
            v43 = reinterpret_cast<void**>(0xffffffff);
        } else {
            addr_6e948bfe_237:
            v91 = reinterpret_cast<void**>(0);
            eax97 = 0;
            v92 = reinterpret_cast<void**>(0);
            v93 = reinterpret_cast<void**>(0);
            v94 = reinterpret_cast<void**>(0);
            v43 = reinterpret_cast<void**>(0);
        }
        v62 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v62) | 40);
        edx61 = v43;
        edi98 = esp22 + 0x70;
        goto addr_6e947ac7_49;
    } else {
        if (!0) 
            goto addr_6e948884_240;
        if (!v36) 
            goto addr_6e948884_240;
        goto addr_6e948bfe_237;
    }
    addr_6e9493c1_63:
    if (reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(v105) | reinterpret_cast<unsigned char>(esi56) | reinterpret_cast<unsigned char>(v104)) {
        ebp232 = reinterpret_cast<void*>(esp22 + 80);
        ebx233 = reinterpret_cast<void*>(esp22 + 92);
        while (ebp232 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp232) + 4), ebp232 != ebx233) {
        }
        eax234 = edi54;
        edi235 = esp22 + 0x6c;
        ebx236 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) >> 3);
        while (eax234 = eax234 + 4, eax234 != edi235) {
        }
        esi237 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) >> 3);
        if (reinterpret_cast<unsigned char>(ebx236) <= reinterpret_cast<unsigned char>(esi237)) 
            goto addr_6e949688_252;
    } else {
        edx61 = ebp101;
        v91 = ebp101;
        ebp35 = 0x7fff;
        v93 = ecx100;
        v94 = v43;
        eax97 = 0;
        v92 = v102;
        edi98 = esp22 + 0x70;
        goto addr_6e947ac7_49;
    }
    edx238 = v44;
    ecx239 = v38;
    eax240 = v30;
    goto addr_6e949748_255;
    addr_6e949688_252:
    if (ebx236 == esi237) {
        ecx239 = v38;
        if (reinterpret_cast<unsigned char>(ecx239) > reinterpret_cast<unsigned char>(v46)) {
            edx238 = v44;
            eax240 = v30;
            goto addr_6e949748_255;
        }
        if (ecx239 != v46) 
            goto addr_6e94968e_259;
    } else {
        addr_6e94968e_259:
        edx238 = v57;
        if (v44 != edx238 || ((eax240 = v30, eax240 != v47) || ((ecx239 = v38, ecx239 != v46) || ebx236 != esi237))) {
            v241 = edx238;
            ebx236 = esi237;
            edx242 = v46;
            v93 = v47;
            v92 = edx242;
            goto addr_6e9496b6_261;
        } else {
            goto addr_6e949748_255;
        }
    }
    eax240 = v30;
    if (reinterpret_cast<unsigned char>(eax240) > reinterpret_cast<unsigned char>(v47)) {
        edx238 = v44;
        goto addr_6e949748_255;
    }
    if (eax240 != v47) 
        goto addr_6e94968e_259;
    edx238 = v44;
    if (reinterpret_cast<unsigned char>(edx238) > reinterpret_cast<unsigned char>(v57)) {
        addr_6e949748_255:
        v241 = edx238;
        edx242 = ecx239;
        v93 = eax240;
        v92 = ecx239;
    } else {
        goto addr_6e94968e_259;
    }
    addr_6e9496b6_261:
    edi98 = esp22 + 0x70;
    eax243 = esp22 + 0x7c;
    while (eax243 = eax243 - 4, v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx242) >> 29 | reinterpret_cast<unsigned char>(ebx236) << 3), eax243 != edi98) {
        ebx236 = v92;
        edx242 = v93;
    }
    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v241) << 3);
    ebp35 = 0x7fff;
    edx61 = v91;
    goto addr_6e947af6_180;
    addr_6e948ea3_64:
    v94 = esi56;
    v93 = v104;
    v92 = v105;
    goto addr_6e948eb7_197;
    addr_6e948c2d_76:
    if (1) 
        goto addr_6e948ede_271;
    if (0) {
        if (v36) {
            addr_6e948c50_274:
            v91 = reinterpret_cast<void**>(0xffffffff);
            edx61 = reinterpret_cast<void**>(0xffffffff);
            ebp35 = 0x7ffe;
            v92 = reinterpret_cast<void**>(0xffffffff);
            edi98 = esp22 + 0x70;
            v93 = reinterpret_cast<void**>(0xffffffff);
            v94 = reinterpret_cast<void**>(0xffffffff);
            v62 = reinterpret_cast<void**>(40);
            v43 = reinterpret_cast<void**>(0xffffffff);
            goto addr_6e947ad9_199;
        } else {
            addr_6e948ede_271:
            v91 = reinterpret_cast<void**>(0);
            ebp35 = 0x7fff;
            v92 = reinterpret_cast<void**>(0);
            edi98 = esp22 + 0x70;
            v93 = reinterpret_cast<void**>(0);
            v94 = reinterpret_cast<void**>(0);
            v62 = reinterpret_cast<void**>(40);
            goto addr_6e947b42_210;
        }
    } else {
        if (!0) 
            goto addr_6e948c50_274;
        if (!v36) 
            goto addr_6e948c50_274;
        goto addr_6e948ede_271;
    }
    addr_6e9488f9_77:
    eax97 = reinterpret_cast<unsigned char>(v43) & 7;
    ebp35 = ecx99;
    v62 = reinterpret_cast<void**>(0);
    edi98 = esp22 + 0x70;
    goto addr_6e947ac7_49;
    addr_6e947aaa_83:
    v92 = eax123;
    v93 = ecx124;
    v91 = edx61;
    v94 = v43;
    eax97 = 0;
    edi98 = esp22 + 0x70;
    goto addr_6e947ac7_49;
    addr_6e948636_91:
    tmp32_244 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) + reinterpret_cast<uint32_t>(esi131));
    tmp32_245 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) + reinterpret_cast<unsigned char>(v129) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_244) < reinterpret_cast<unsigned char>(v43)));
    tmp32_246 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) + reinterpret_cast<unsigned char>(v130) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_245) < reinterpret_cast<unsigned char>(v30)));
    v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) + reinterpret_cast<unsigned char>(edi128) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_246) < reinterpret_cast<unsigned char>(v38)));
    v92 = tmp32_246;
    v93 = tmp32_245;
    v94 = tmp32_244;
    goto addr_6e948662_43;
    addr_6e947e08_113:
    edi98 = esp22 + 0x70;
    v93 = ecx153;
    v92 = ebx152;
    v91 = edx61;
    v94 = v43;
    eax97 = 0;
    goto addr_6e947ac7_49;
    addr_6e948581_127:
    cf247 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v47) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v157) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(esi56) < reinterpret_cast<unsigned char>(ebp158))));
    cf248 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v46) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v159) + cf247));
    v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v47) - (reinterpret_cast<unsigned char>(v157) + cf247));
    ebp35 = ebx45;
    v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) - (reinterpret_cast<unsigned char>(edi156) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v55) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi156) + cf248))));
    v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v46) - (reinterpret_cast<unsigned char>(v159) + cf248));
    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) - reinterpret_cast<unsigned char>(ebp158));
    v36 = v53;
    addr_6e947d65_151:
    edx61 = v91;
    if (reinterpret_cast<unsigned char>(edx61) & 0x80000) {
        edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx61) & 0x7ffff);
        v91 = edx61;
        if (edx61) {
            addr_6e947f85_279:
            __asm__("bsr edx, edx");
            edx249 = reinterpret_cast<unsigned char>(edx61) ^ 31;
        } else {
            addr_6e9480c9_280:
            if (!v92) {
                if (!v93) {
                    __asm__("bsr edx, [esp+0x70]");
                    edx249 = (reinterpret_cast<unsigned char>(edx61) ^ 31) + 96;
                } else {
                    __asm__("bsr eax, eax");
                    edx249 = (reinterpret_cast<unsigned char>(v93) ^ 31) + 64;
                }
            } else {
                __asm__("bsr eax, eax");
                edx249 = (reinterpret_cast<unsigned char>(v92) ^ 31) + 32;
            }
        }
        ebx250 = edx249 + 19;
        edx251 = edx249 - 12;
        if (reinterpret_cast<int32_t>(edx251) >= reinterpret_cast<int32_t>(0)) {
            ebx250 = edx251;
        }
        eax252 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx251) >> 31) >> 27;
        ebx253 = reinterpret_cast<int32_t>(ebx250) >> 5;
        edi254 = (edx251 + eax252 & 31) - eax252;
        v255 = edx251;
        v256 = ebx253;
        v257 = edi254;
        if (!edi254) {
            if (ebx253 > 3) {
                ebx258 = 3;
                edi98 = esp22 + 0x70;
                goto addr_6e948025_290;
            } else {
                eax259 = esp22 + 0x7c;
                ecx260 = esp22 + ebx253 * 4 + 0x6c;
                edx261 = reinterpret_cast<void*>(-ebx253 << 2);
                do {
                    eax259 = eax259 - 4;
                    v91 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(eax259) + reinterpret_cast<int32_t>(edx261));
                } while (eax259 != ecx260);
                ebx258 = ebx253 - 1;
                edi98 = esp22 + 0x70;
            }
        } else {
            if (ebx253 > 2) {
                ebx258 = 2;
                v256 = 3;
                edi98 = esp22 + 0x70;
            } else {
                edi262 = esp22 + 0x70;
                eax263 = edi262 + (3 - ebx253) * 4;
                v264 = 32 - v257;
                edi265 = ebp35;
                ebp266 = edi262;
                do {
                    ecx267 = *reinterpret_cast<unsigned char*>(&v264);
                    ecx268 = *reinterpret_cast<unsigned char*>(&v257);
                    eax263[ebx253 * 4] = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(eax263 - 4) >> *reinterpret_cast<signed char*>(&ecx267) | reinterpret_cast<unsigned char>(*eax263) << *reinterpret_cast<unsigned char*>(&ecx268));
                    eax263 = eax263 - 4;
                } while (eax263 != ebp266);
                ebx258 = ebx253 - 1;
                ebp35 = edi265;
                edi98 = ebp266;
            }
            ecx269 = *reinterpret_cast<unsigned char*>(&v257);
            *reinterpret_cast<uint32_t*>(esp22 + v256 * 4 + 0x70) = reinterpret_cast<unsigned char>(v94) << *reinterpret_cast<unsigned char*>(&ecx269);
        }
        if (ebx258 < 0) {
            addr_6e948031_301:
            if (reinterpret_cast<int32_t>(ebp35) > reinterpret_cast<int32_t>(v255)) {
                ebp35 = ebp35 - v255;
                v43 = v94;
                edx61 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v91) & 0xfff7ffff);
                v91 = edx61;
                eax270 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v36)) & 1;
                v34 = *reinterpret_cast<unsigned char*>(&eax270);
                eax97 = reinterpret_cast<unsigned char>(v94) & 7;
                goto addr_6e947ac7_49;
            } else {
                edx271 = v255 - ebp35;
                eax272 = edx271 + 32;
                edx273 = edx271 + 1;
                if (reinterpret_cast<int32_t>(edx273) >= reinterpret_cast<int32_t>(0)) {
                    eax272 = edx273;
                }
                edx274 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx273) >> 31) >> 27;
                eax275 = reinterpret_cast<int32_t>(eax272) >> 5;
                v276 = (edx273 + edx274 & 31) - edx274;
                if (reinterpret_cast<uint1_t>(eax275 < 0) | reinterpret_cast<uint1_t>(eax275 == 0)) {
                    esi277 = 0;
                    edx278 = 0;
                } else {
                    edx279 = edi98;
                    esi277 = 0;
                    ecx280 = edi98 + eax275 * 4;
                    do {
                        esi277 = esi277 | reinterpret_cast<unsigned char>(a18);
                        edx279 = edx279 + 4;
                    } while (edx279 != ecx280);
                    edx278 = eax275;
                }
                if (v276) {
                    edx281 = *reinterpret_cast<uint32_t*>(esp22 + edx278 * 4 + 0x70);
                    v282 = 32 - v276;
                    ecx283 = *reinterpret_cast<unsigned char*>(&v282);
                    v284 = 3 - eax275;
                    esi277 = esi277 | edx281 << *reinterpret_cast<unsigned char*>(&ecx283);
                    if (reinterpret_cast<uint1_t>(v284 < 0) | reinterpret_cast<uint1_t>(v284 == 0)) {
                        edx285 = 1;
                        v284 = 0;
                    } else {
                        edx286 = edi98;
                        v287 = edi98 + v284 * 4;
                        ebp288 = esi277;
                        do {
                            edx286 = edx286 + 4;
                        } while (edx286 != v287);
                        esi277 = ebp288;
                        edx285 = 4 - eax275;
                    }
                    ecx289 = *reinterpret_cast<unsigned char*>(&v276);
                    *reinterpret_cast<uint32_t*>(esp22 + v284 * 4 + 0x70) = reinterpret_cast<unsigned char>(v91) >> *reinterpret_cast<signed char*>(&ecx289);
                } else {
                    ecx290 = 3 - eax275;
                    if (ecx290 < 0) {
                        edx285 = 0;
                        goto addr_6e9483d1_319;
                    } else {
                        edx291 = edi98;
                        ecx292 = esp22 + ecx290 * 4 + 0x74;
                        do {
                            edx291 = edx291 + 4;
                        } while (edx291 != ecx292);
                        edx285 = 4 - eax275;
                    }
                }
                while (edx285 <= 3) {
                    addr_6e9483d1_319:
                    edi98[edx285 * 4] = reinterpret_cast<void**>(0);
                    ++edx285;
                }
                eax293 = 0;
                edx61 = v91;
                *reinterpret_cast<unsigned char*>(&eax293) = reinterpret_cast<uint1_t>(!!esi277);
                ebp35 = 0;
                v43 = reinterpret_cast<void**>(eax293 | reinterpret_cast<unsigned char>(v94));
                eax294 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v36)) & 1;
                v34 = *reinterpret_cast<unsigned char*>(&eax294);
                v94 = v43;
                eax97 = reinterpret_cast<unsigned char>(v43) & 7;
                goto addr_6e947ac7_49;
            }
        } else {
            do {
                addr_6e948025_290:
                edi98[ebx258 * 4] = reinterpret_cast<void**>(0);
                --ebx258;
            } while (ebx258 >= 0);
            goto addr_6e948031_301;
        }
    } else {
        v43 = v94;
        eax295 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v36)) & 1;
        v34 = *reinterpret_cast<unsigned char*>(&eax295);
        eax231 = v94;
        goto addr_6e947d8d_236;
    }
    addr_6e948f51_149:
    ebp35 = 0x7fff;
    v92 = ebx180;
    ebx296 = v51;
    eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
    v94 = esi56;
    v93 = ecx181;
    v36 = v53;
    edi98 = esp22 + 0x70;
    v91 = edx61;
    v34 = *reinterpret_cast<unsigned char*>(&ebx296);
    v43 = esi56;
    goto addr_6e947ac7_49;
    addr_6e949061_168:
    ebp297 = v46;
    ebx298 = v47;
    edx61 = v55;
    if (reinterpret_cast<unsigned char>(ebp297) | reinterpret_cast<unsigned char>(ebx298) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(esi56)) {
        eax299 = reinterpret_cast<void**>(1);
        if (reinterpret_cast<unsigned char>(edx61) & 0x40000) {
            eax299 = v62;
        }
        v62 = eax299;
        if (ecx191) 
            goto addr_6e949140_329;
    } else {
        if (!ecx191) {
            addr_6e948b14_331:
            edi98 = esp22 + 0x70;
            v92 = reinterpret_cast<void**>(0);
            eax300 = esp22 + 0x7c;
            ecx301 = reinterpret_cast<void**>(0x8000);
            v93 = reinterpret_cast<void**>(0);
            goto addr_6e948b43_332;
        } else {
            goto addr_6e948dd1_334;
        }
    }
    addr_6e94916e_335:
    v93 = ebx298;
    ebx302 = v51;
    eax97 = reinterpret_cast<unsigned char>(esi56) & 7;
    v92 = ebp297;
    ebp35 = 0x7fff;
    v94 = esi56;
    v36 = v53;
    edi98 = esp22 + 0x70;
    v91 = edx61;
    v34 = *reinterpret_cast<unsigned char*>(&ebx302);
    v43 = esi56;
    goto addr_6e947ac7_49;
    addr_6e948b43_332:
    while (eax300 = eax300 - 4, v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx301) << 3), eax300 != edi98) {
        ecx301 = reinterpret_cast<void**>(0);
    }
    v94 = reinterpret_cast<void**>(0);
    ebp35 = 0x7fff;
    edx61 = v91;
    v34 = 1;
    v36 = 1;
    v62 = reinterpret_cast<void**>(1);
    goto addr_6e947af6_180;
    addr_6e948af0_169:
    ebp297 = v46;
    edx61 = v55;
    ebx298 = v47;
    eax303 = reinterpret_cast<unsigned char>(ebp297) | reinterpret_cast<unsigned char>(edx61) | reinterpret_cast<unsigned char>(ebx298) | reinterpret_cast<unsigned char>(esi56);
    if (ecx191) {
        if (eax303) {
            addr_6e949140_329:
            ebp304 = reinterpret_cast<void*>(esp22 + 80);
            ecx305 = reinterpret_cast<void*>(esp22 + 92);
        } else {
            addr_6e948dd1_334:
            ebp35 = 0x7fff;
            v93 = v187;
            v94 = v43;
            eax97 = 0;
            v92 = v189;
            v91 = v188;
            edx61 = v188;
            edi98 = esp22 + 0x70;
            goto addr_6e947ac7_49;
        }
    } else {
        if (eax303) 
            goto addr_6e94916e_335; else 
            goto addr_6e948b14_331;
    }
    while (ebp304 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp304) + 4), ebp304 != ecx305) {
    }
    eax306 = edi54;
    edx307 = esp22 + 0x6c;
    ebp308 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) >> 3);
    while (eax306 = eax306 + 4, eax306 != edx307) {
    }
    ebx309 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v55) >> 3);
    if (reinterpret_cast<unsigned char>(ebp308) > reinterpret_cast<unsigned char>(ebx309)) {
        edx310 = v44;
        ecx311 = v38;
        eax312 = v30;
        goto addr_6e949270_347;
    }
    if (ebp308 == ebx309) {
        ecx311 = v38;
        if (reinterpret_cast<unsigned char>(ecx311) > reinterpret_cast<unsigned char>(v46)) {
            edx310 = v44;
            eax312 = v30;
            goto addr_6e949270_347;
        }
        if (ecx311 != v46) 
            goto addr_6e949487_352;
    } else {
        addr_6e949487_352:
        edx310 = v57;
        if (v44 != edx310 || ((eax312 = v30, eax312 != v47) || ((ecx311 = v38, ecx311 != v46) || ebp308 != ebx309))) {
            ebp308 = ebx309;
            ecx311 = v46;
            v313 = edx310;
            v93 = v47;
            v92 = ecx311;
            v36 = v53;
            goto addr_6e949280_354;
        } else {
            goto addr_6e949270_347;
        }
    }
    eax312 = v30;
    if (reinterpret_cast<unsigned char>(eax312) > reinterpret_cast<unsigned char>(v47)) {
        edx310 = v44;
        goto addr_6e949270_347;
    }
    if (eax312 != v47) 
        goto addr_6e949487_352;
    edx310 = v44;
    if (reinterpret_cast<unsigned char>(edx310) > reinterpret_cast<unsigned char>(v57)) {
        addr_6e949270_347:
        v313 = edx310;
        v93 = eax312;
        v92 = ecx311;
    } else {
        goto addr_6e949487_352;
    }
    addr_6e949280_354:
    edi98 = esp22 + 0x70;
    edx314 = ecx311;
    eax315 = esp22 + 0x7c;
    while (eax315 = eax315 - 4, v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx314) >> 29 | reinterpret_cast<unsigned char>(ebp308) * 8), eax315 != edi98) {
        ebp308 = v92;
        edx314 = v93;
    }
    ebp35 = 0x7fff;
    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v313) << 3);
    edx61 = v91;
    eax316 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v36)) & 1;
    v34 = *reinterpret_cast<unsigned char*>(&eax316);
    goto addr_6e947af6_180;
    addr_6e947f7d_185:
    if (!edx61) 
        goto addr_6e9480c9_280; else 
        goto addr_6e947f85_279;
    addr_6e947b90_191:
    if (reinterpret_cast<int32_t>(eax154) > reinterpret_cast<int32_t>(0x74)) {
        edi317 = v55;
        v318 = v47;
        v319 = v46;
        esi320 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi56) | (reinterpret_cast<unsigned char>(v46) | reinterpret_cast<unsigned char>(v47) | reinterpret_cast<unsigned char>(edi317)));
        if (esi320) {
            esi320 = reinterpret_cast<void**>(1);
            edi317 = reinterpret_cast<void**>(0);
            v318 = reinterpret_cast<void**>(0);
            v319 = reinterpret_cast<void**>(0);
        }
    } else {
        ebx321 = reinterpret_cast<int32_t>(eax154) >> 5;
        v322 = eax154 & 31;
        if (!ebx321) {
            eax323 = 0;
            v324 = 0;
        } else {
            eax325 = esp22 + 100;
            ecx326 = reinterpret_cast<unsigned char>(esi56);
            edx327 = edi54 + ebx321 * 4;
            if (eax325 != edx327) {
                do {
                    eax325 = eax325 + 4;
                    ecx326 = ecx326 | reinterpret_cast<unsigned char>(a15);
                } while (eax325 != edx327);
            }
            v324 = ecx326;
            eax323 = ebx321;
        }
        if (v322) {
            eax328 = *reinterpret_cast<uint32_t*>(esp22 + eax323 * 4 + 96);
            v329 = 32 - v322;
            ecx330 = *reinterpret_cast<unsigned char*>(&v329);
            v324 = v324 | eax328 << *reinterpret_cast<unsigned char*>(&ecx330);
            eax331 = 3 - ebx321;
            v332 = eax331;
            if (!eax331) {
                eax333 = 1;
            } else {
                eax334 = edi54;
                v335 = edi54 + eax331 * 4;
                do {
                    eax334 = eax334 + 4;
                } while (eax334 != v335);
                eax333 = 4 - ebx321;
            }
            ecx336 = *reinterpret_cast<unsigned char*>(&v322);
            *reinterpret_cast<uint32_t*>(esp22 + v332 * 4 + 96) = reinterpret_cast<unsigned char>(v55) >> *reinterpret_cast<signed char*>(&ecx336);
        } else {
            eax337 = edi54;
            edx338 = esp22 + (3 - ebx321) * 4 + 100;
            do {
                eax337 = eax337 + 4;
            } while (eax337 != edx338);
            eax333 = 4 - ebx321;
        }
        if (eax333 != 4) {
            do {
                edi54[eax333 * 4] = reinterpret_cast<void**>(0);
                ++eax333;
            } while (eax333 <= 3);
        }
        eax339 = 0;
        edi317 = v55;
        *reinterpret_cast<unsigned char*>(&eax339) = reinterpret_cast<uint1_t>(!!v324);
        esi320 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v57) | eax339);
        v319 = v46;
        v318 = v47;
    }
    cf340 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v318) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(esi320))));
    cf341 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v38) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v319) + cf340));
    v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) - (reinterpret_cast<unsigned char>(edi317) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v39) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edi317) + cf341))));
    v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) - (reinterpret_cast<unsigned char>(v319) + cf341));
    v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v318) + cf340));
    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - reinterpret_cast<unsigned char>(esi320));
    goto addr_6e947d65_151;
    addr_6e948332_194:
    v62 = reinterpret_cast<void**>(2);
    if (ebp35 == 0x7fff) {
        goto addr_6e947ddd_111;
    }
    addr_6e947d29_195:
    cf342 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v30) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v47) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v43) < reinterpret_cast<unsigned char>(esi56))));
    cf343 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v38) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v46) + cf342));
    v91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v39) - (reinterpret_cast<unsigned char>(v55) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(v39) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v55) + cf343))));
    ebp35 = ebp35;
    v92 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v38) - (reinterpret_cast<unsigned char>(v46) + cf343));
    v93 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v30) - (reinterpret_cast<unsigned char>(v47) + cf342));
    v94 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v43) - reinterpret_cast<unsigned char>(esi56));
    v62 = reinterpret_cast<void**>(2);
    goto addr_6e947d65_151;
}

int32_t __fixunssfdi() {
    int32_t v1;

    __asm__("fnstcw word [esp+0xe]");
    __asm__("fld dword [esp+0x18]");
    __asm__("fld st0");
    __asm__("fmul dword [0x6e9572c4]");
    __asm__("fldcw word [esp+0xc]");
    __asm__("fistp qword [esp]");
    __asm__("fldcw word [esp+0xe]");
    __asm__("fild qword [esp]");
    __asm__("fmul dword [0x6e9572c8]");
    __asm__("fsubp st1, st0");
    __asm__("fldcw word [esp+0xc]");
    __asm__("fistp qword [esp]");
    __asm__("fldcw word [esp+0xe]");
    return v1;
}

int32_t __fixunsdfdi() {
    int32_t v1;

    __asm__("fnstcw word [esp+0xe]");
    __asm__("fld qword [esp+0x18]");
    __asm__("fld st0");
    __asm__("fmul dword [0x6e9572cc]");
    __asm__("fldcw word [esp+0xc]");
    __asm__("fistp qword [esp]");
    __asm__("fldcw word [esp+0xe]");
    __asm__("fild qword [esp]");
    __asm__("fmul dword [0x6e9572d0]");
    __asm__("fsubp st1, st0");
    __asm__("fldcw word [esp+0xc]");
    __asm__("fistp qword [esp]");
    __asm__("fldcw word [esp+0xe]");
    return v1;
}

int32_t __fixunsxfdi() {
    int32_t v1;

    __asm__("fld tword [esp+0x20]");
    __asm__("fldz ");
    __asm__("fucomip st0, st1");
    if (reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4) > 16) {
        __asm__("fstp st0");
        return 0;
    } else {
        __asm__("fnstcw word [esp+0xe]");
        __asm__("fld st0");
        __asm__("fmul dword [0x6e9572d4]");
        __asm__("fldcw word [esp+0xc]");
        __asm__("fistp qword [esp]");
        __asm__("fldcw word [esp+0xe]");
        __asm__("fild qword [esp]");
        if (v1 < 0) {
            __asm__("fadd dword [0x6e9572d8]");
        }
        __asm__("fsubp st1, st0");
        __asm__("fldz ");
        __asm__("fucomip st0, st1");
        if (!reinterpret_cast<uint1_t>(static_cast<uint32_t>(reinterpret_cast<uint1_t>(v1 == 0)))) {
            __asm__("fchs ");
            __asm__("fldcw word [esp+0xc]");
            __asm__("fistp qword [esp]");
            __asm__("fldcw word [esp+0xe]");
            return 0;
        } else {
            __asm__("fldcw word [esp+0xc]");
            __asm__("fistp qword [esp]");
            __asm__("fldcw word [esp+0xe]");
            return 0;
        }
    }
}

void fun_6e9478b0(void** a1) {
    void** eax2;

    eax2 = a1;
    if (*reinterpret_cast<unsigned char*>(&eax2) & 1) {
        __asm__("fldz ");
        __asm__("fdiv st0, st0");
        __asm__("fstp st0");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&eax2) & 4) {
        __asm__("fld1 ");
        __asm__("fdiv dword [esp]");
        __asm__("fstp st0");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&eax2) & 8) {
        __asm__("fnstenv [esp]");
        __asm__("fldenv [esp]");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&eax2) & 16) {
        __asm__("fnstenv [esp]");
        __asm__("fldenv [esp]");
        __asm__("wait ");
    }
    if (*reinterpret_cast<unsigned char*>(&eax2) & 32) {
        __asm__("fnstenv [esp]");
        __asm__("fldenv [esp]");
        __asm__("wait ");
    }
    return;
}

int32_t __lttf2(uint32_t a1, void** a2, void** a3, void** a4, uint32_t a5, void** a6, void** a7, uint32_t a8) {
    void** edi9;
    uint32_t esi10;
    void** ecx11;
    uint32_t v12;
    uint32_t edx13;
    uint32_t edi14;
    uint32_t eax15;
    uint32_t ebx16;
    uint32_t edx17;
    int32_t ebx18;
    uint32_t ecx19;
    uint32_t ebp20;
    uint32_t esi21;
    int32_t eax22;
    int1_t cf23;

    edi9 = a4;
    esi10 = a8;
    ecx11 = edi9;
    v12 = *reinterpret_cast<uint16_t*>(&edi9);
    edx13 = reinterpret_cast<unsigned char>(edi9) >> 24;
    edi14 = *reinterpret_cast<uint16_t*>(&esi10);
    eax15 = reinterpret_cast<unsigned char>(edi9) >> 16 & 0x7fff;
    ebx16 = esi10 >> 24;
    *reinterpret_cast<unsigned char*>(&ebx16) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&ebx16) >> 7);
    edx17 = esi10 >> 16 & 0x7fff;
    if (eax15 != 0x7fff || !(reinterpret_cast<unsigned char>(a2) | a1 | reinterpret_cast<unsigned char>(a3) | v12)) {
        if (edx17 != 0x7fff || !(reinterpret_cast<unsigned char>(a6) | a5 | reinterpret_cast<unsigned char>(a7) | edi14)) {
            ebx18 = 0;
            if (!eax15) {
                ebx18 = 0;
                *reinterpret_cast<unsigned char*>(&ebx18) = reinterpret_cast<uint1_t>((reinterpret_cast<unsigned char>(a2) | a1 | reinterpret_cast<unsigned char>(a3) | v12) == 0);
            }
            ecx19 = ebx16;
            ebp20 = *reinterpret_cast<unsigned char*>(&edx13) >> 7;
            esi21 = *reinterpret_cast<unsigned char*>(&ecx19);
            if (edx17) 
                goto addr_6e94ae09_6;
            if (!(reinterpret_cast<unsigned char>(a6) | a5 | reinterpret_cast<unsigned char>(a7) | edi14)) 
                goto addr_6e94ae40_8;
        } else {
            if (eax15 == 0x7fff) {
                if (!(v12 | (reinterpret_cast<unsigned char>(a2) | a1 | reinterpret_cast<unsigned char>(a3)))) {
                    addr_6e94ae75_11:
                    eax22 = 2;
                    if (!(reinterpret_cast<unsigned char>(a6) | a5 | reinterpret_cast<unsigned char>(a7) | edi14)) 
                        goto addr_6e94ae4a_12; else 
                        goto addr_6e94ae8a_13;
                } else {
                    goto addr_6e94ae68_15;
                }
            } else {
                addr_6e94aeaf_16:
                if (*reinterpret_cast<int16_t*>(&esi10) < reinterpret_cast<int16_t>(0)) {
                    addr_6e94aec3_17:
                    return 2;
                } else {
                    addr_6e94aeb7_18:
                    fun_6e9478b0(1);
                    goto addr_6e94aec3_17;
                }
            }
        }
    } else {
        addr_6e94ae68_15:
        if (*reinterpret_cast<int16_t*>(&ecx11) >= 0) 
            goto addr_6e94aeb7_18; else 
            goto addr_6e94ae6d_19;
    }
    addr_6e94ae09_6:
    if (ebx18) {
        addr_6e94aed0_20:
        eax22 = -1;
        if (!esi21) {
            addr_6e94ae4a_12:
            return eax22;
        } else {
            addr_6e94aedd_21:
            return 1;
        }
    } else {
        if (ebp20 != esi21) 
            goto addr_6e94ae19_23;
        if (reinterpret_cast<int32_t>(eax15) > reinterpret_cast<int32_t>(edx17)) 
            goto addr_6e94ae19_23;
        if (reinterpret_cast<int32_t>(eax15) < reinterpret_cast<int32_t>(edx17)) 
            goto addr_6e94af0e_26;
        cf23 = v12 < edi14;
        if (v12 > edi14) 
            goto addr_6e94ae19_23;
        if (v12 != edi14) 
            goto addr_6e94af08_29;
        cf23 = reinterpret_cast<unsigned char>(a3) < reinterpret_cast<unsigned char>(a7);
        if (reinterpret_cast<unsigned char>(a3) > reinterpret_cast<unsigned char>(a7)) {
            addr_6e94ae19_23:
            if (!ebp20) 
                goto addr_6e94aedd_21;
        } else {
            if (a3 != a7) 
                goto addr_6e94af08_29;
            cf23 = reinterpret_cast<unsigned char>(a2) < reinterpret_cast<unsigned char>(a6);
            if (reinterpret_cast<unsigned char>(a2) > reinterpret_cast<unsigned char>(a6)) 
                goto addr_6e94ae19_23; else 
                goto addr_6e94af35_33;
        }
    }
    addr_6e94ae26_34:
    eax22 = -1;
    goto addr_6e94ae4a_12;
    addr_6e94af35_33:
    if (a2 != a6) {
        addr_6e94af08_29:
        if (!cf23) {
            addr_6e94ae48_35:
            eax22 = 0;
            goto addr_6e94ae4a_12;
        } else {
            addr_6e94af0e_26:
            if (ebp20) 
                goto addr_6e94aedd_21;
        }
    } else {
        if (a1 <= a5) {
            eax22 = 0;
            if (a1 >= a5) 
                goto addr_6e94ae4a_12;
            goto addr_6e94af0e_26;
        }
    }
    goto addr_6e94ae26_34;
    addr_6e94ae40_8:
    if (ebx18) 
        goto addr_6e94ae48_35;
    if (ebx18) 
        goto addr_6e94aed0_20;
    eax22 = 1;
    if (!ebp20) 
        goto addr_6e94ae4a_12;
    goto addr_6e94ae26_34;
    addr_6e94ae8a_13:
    goto addr_6e94aeaf_16;
    addr_6e94ae6d_19:
    if (edx17 != 0x7fff) 
        goto addr_6e94aec3_17; else 
        goto addr_6e94ae75_11;
}

void** fun_6e950b70(void** a1, void** a2) {
    uint32_t ecx3;
    uint32_t* edi4;
    uint32_t* edx5;
    uint32_t esi6;
    void** eax7;
    void** tmp32_8;
    uint32_t edx9;
    uint32_t ebx10;

    ecx3 = 0;
    edi4 = edx5;
    esi6 = 0;
    do {
        eax7 = tmp32_8;
        edx9 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax7 + 0xffffffff));
        ebx10 = (edx9 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx3);
        ecx3 = ecx3 + 7;
        esi6 = esi6 | ebx10;
    } while (*reinterpret_cast<signed char*>(&edx9) < 0);
    if (ecx3 <= 31 && edx9 & 64) {
        esi6 = esi6 | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx3);
    }
    *edi4 = esi6;
    return eax7;
}

struct s48 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_6e954ad8(int32_t a1);

void** g6e95d048;

void** g6e95d04c;

struct s49 {
    void* f0;
    int32_t f4;
    void** f8;
    signed char[3] pad12;
    void** f12;
};

struct s49* fun_6e953a30(int32_t a1);

void fun_6e954ae0(void** a1);

uint32_t fun_6e953420(void** ecx, void** a2);

void** fun_6e953510(void** ecx, void** a2, void** a3, void** a4, void** a5);

void** fun_6e953340(void** ecx, void** a2, void* a3);

struct s48* _Unwind_Find_FDE(void** a1, void** a2, int32_t a3) {
    void** ebx4;
    void** edi5;
    void* esp6;
    void** ebp7;
    struct s49* eax8;
    void** ecx9;
    struct s49* esi10;
    void** eax11;
    void*** edx12;
    struct s49* eax13;
    void* esp14;
    void** v15;
    void** v16;
    void** v17;
    void* v18;
    void** v19;

    ebx4 = a1;
    edi5 = a2;
    fun_6e954ad8(0x6e956004);
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 44 - 4 + 4);
    ebp7 = g6e95d048;
    if (!ebp7) {
        do {
            addr_6e9543b2_2:
            ebp7 = g6e95d04c;
            if (!ebp7) 
                break;
            g6e95d04c = *reinterpret_cast<void***>(ebp7 + 20);
            eax8 = fun_6e953a30(0x6e956004);
            esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 + 4);
            ecx9 = g6e95d048;
            esi10 = eax8;
            if (ecx9) {
                eax11 = *reinterpret_cast<void***>(ebp7);
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx9)) >= reinterpret_cast<unsigned char>(eax11)) {
                    do {
                        edx12 = reinterpret_cast<void***>(ecx9 + 20);
                        ecx9 = *reinterpret_cast<void***>(ecx9 + 20);
                        if (!ecx9) 
                            break;
                    } while (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx9)) >= reinterpret_cast<unsigned char>(eax11));
                    *reinterpret_cast<void***>(ebp7 + 20) = ecx9;
                    *edx12 = ebp7;
                    if (!esi10) 
                        goto addr_6e9543b2_2; else 
                        goto addr_6e954407_8;
                }
            }
            *reinterpret_cast<void***>(ebp7 + 20) = ecx9;
            g6e95d048 = ebp7;
        } while (!esi10);
        goto addr_6e954480_11;
    } else {
        if (reinterpret_cast<unsigned char>(ebx4) < reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp7))) {
            do {
                ebp7 = *reinterpret_cast<void***>(ebp7 + 20);
                if (!ebp7) 
                    goto addr_6e9543b2_2;
            } while (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp7)) > reinterpret_cast<unsigned char>(ebx4));
            goto addr_6e954482_15;
        } else {
            goto addr_6e954482_15;
        }
    }
    fun_6e954ae0(0x6e956004);
    return 0;
    addr_6e954480_11:
    goto addr_6e954407_8;
    addr_6e954482_15:
    eax13 = fun_6e953a30(0x6e956004);
    esp6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 + 4);
    esi10 = eax13;
    if (eax13) {
        addr_6e954407_8:
        fun_6e954ae0(0x6e956004);
        esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp6) - 4 + 4);
        *reinterpret_cast<void***>(edi5) = *reinterpret_cast<void***>(ebp7 + 4);
        *reinterpret_cast<void***>(edi5 + 4) = *reinterpret_cast<void***>(ebp7 + 8);
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebp7 + 16)) & 4) {
            fun_6e953420(ecx9, 0x6e956004);
            esp14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp14) - 4 + 4);
        }
    } else {
        goto addr_6e9543b2_2;
    }
    fun_6e953510(ebp7 + 8, 0x6e956004, v15, v16, v17);
    fun_6e953340(&esi10->f8, reinterpret_cast<int32_t>(esp14) - 4 + 4 + 28, v18);
    *reinterpret_cast<void***>(edi5 + 8) = v19;
    goto a3;
}

int32_t strlen = 0x1f432;

void* fun_6e955978(void** a1, void** a2) {
    goto strlen;
}

struct s50 {
    void** f0;
    signed char[11] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
    signed char[3] pad44;
    void** f44;
    signed char[3] pad48;
    void** f48;
    signed char[11] pad60;
    void** f60;
    signed char[3] pad64;
    void*** f64;
    signed char[79] pad147;
    unsigned char f147;
};

struct s51 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s52 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s53 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    void** f16;
    signed char[3] pad20;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
};

struct s54 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s55 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s56 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s57 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s58 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s59 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s60 {
    void** f0;
    signed char[3] pad4;
    int32_t f4;
};

struct s61 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s62 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s63 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    signed char[20] pad32;
    int32_t f32;
    int32_t f36;
    int32_t f40;
};

struct s64 {
    int32_t f0;
    int32_t f4;
    signed char[4] pad12;
    void** f12;
};

void fun_6e950bb0(void** ecx, void** a2) {
    void** esp3;
    void** ebp4;
    void** esi5;
    struct s50* esp6;
    void** v7;
    void** edx8;
    void** v9;
    void** eax10;
    void** edx11;
    void** eax12;
    void** edi13;
    struct s18* v14;
    void** edx15;
    void** ebx16;
    void** ecx17;
    uint32_t esi18;
    uint32_t edi19;
    int32_t ecx20;
    uint32_t ebx21;
    uint32_t edx22;
    uint32_t edx23;
    void** edi24;
    struct s51* edx25;
    unsigned char v26;
    void** v27;
    struct s52* ebx28;
    void** edx29;
    uint32_t edx30;
    void** edi31;
    int32_t ecx32;
    void** v33;
    uint32_t ebx34;
    uint32_t edx35;
    struct s53* esp36;
    struct s53* esp37;
    void** v38;
    void** edx39;
    void** ebx40;
    uint32_t esi41;
    int32_t ecx42;
    uint32_t edx43;
    uint32_t eax44;
    int32_t ecx45;
    uint32_t ebx46;
    uint32_t edx47;
    uint32_t esi48;
    int32_t ecx49;
    uint32_t ebx50;
    uint32_t edx51;
    uint32_t esi52;
    int32_t ecx53;
    uint32_t ebx54;
    uint32_t edx55;
    int32_t ecx56;
    uint32_t ebx57;
    uint32_t edx58;
    int32_t ecx59;
    uint32_t esi60;
    uint32_t edx61;
    uint32_t eax62;
    void** edi63;
    int32_t ecx64;
    uint32_t esi65;
    uint32_t ebx66;
    uint32_t edx67;
    struct s54* edx68;
    struct s53* esp69;
    uint32_t eax70;
    struct s18* eax71;
    void** esi72;
    struct s18* edi73;
    int32_t ecx74;
    int32_t ecx75;
    void** edi76;
    struct s18* eax77;
    struct s18* esi78;
    struct s18* edi79;
    uint32_t esi80;
    int32_t ecx81;
    uint32_t edx82;
    uint32_t eax83;
    int32_t ecx84;
    uint32_t esi85;
    uint32_t ebx86;
    uint32_t edx87;
    int32_t ecx88;
    uint32_t esi89;
    uint32_t ebx90;
    uint32_t edx91;
    uint32_t esi92;
    int32_t ecx93;
    uint32_t ebx94;
    uint32_t edx95;
    void* esi96;
    int32_t ecx97;
    uint32_t edx98;
    uint32_t eax99;
    uint32_t esi100;
    int32_t ecx101;
    uint32_t edx102;
    uint32_t eax103;
    struct s55* eax104;
    void* esi105;
    int32_t ecx106;
    uint32_t edx107;
    uint32_t eax108;
    uint32_t esi109;
    int32_t ecx110;
    uint32_t edx111;
    uint32_t eax112;
    struct s53* esp113;
    void** edx114;
    uint32_t v115;
    struct s56* ecx116;
    uint32_t esi117;
    int32_t ecx118;
    uint32_t edx119;
    uint32_t eax120;
    struct s53* esp121;
    uint32_t edx122;
    int32_t v123;
    struct s53* esp124;
    int32_t v125;
    uint32_t esi126;
    int32_t ecx127;
    uint32_t edx128;
    uint32_t eax129;
    uint32_t edi130;
    int32_t ecx131;
    uint32_t ebx132;
    uint32_t edx133;
    void** edi134;
    struct s57* edx135;
    uint32_t esi136;
    int32_t ecx137;
    uint32_t edx138;
    uint32_t eax139;
    struct s53* esp140;
    void** edx141;
    uint32_t v142;
    struct s58* ecx143;
    int32_t ecx144;
    uint32_t esi145;
    uint32_t edx146;
    uint32_t eax147;
    struct s59* eax148;
    void* esi149;
    int32_t ecx150;
    uint32_t edx151;
    uint32_t eax152;
    uint32_t esi153;
    int32_t ecx154;
    uint32_t ebx155;
    uint32_t edx156;
    uint32_t esi157;
    int32_t ecx158;
    uint32_t edx159;
    uint32_t eax160;
    uint32_t edi161;
    int32_t ecx162;
    uint32_t ebx163;
    uint32_t edx164;
    struct s60* edx165;
    void** edi166;
    void** eax167;
    void** edx168;
    uint32_t eax169;
    uint32_t eax170;
    unsigned char v171;
    uint32_t eax172;
    unsigned char v173;
    uint32_t eax174;
    uint32_t eax175;
    struct s61* eax176;
    uint32_t eax177;
    void** esi178;
    uint32_t eax179;
    uint32_t edx180;
    struct s53* esp181;
    void** eax182;
    void** eax183;
    struct s53* esp184;
    uint32_t eax185;
    uint32_t eax186;
    signed char v187;
    uint32_t eax188;
    void** eax189;
    uint32_t eax190;
    uint32_t eax191;
    void** eax192;
    uint32_t eax193;
    struct s53* esp194;
    void** ecx195;
    struct s31* eax196;
    void** ebx197;
    void** ecx198;
    struct s53* esp199;
    void** edx200;
    int32_t ecx201;
    void** esi202;
    uint32_t ebx203;
    uint32_t eax204;
    struct s53* esp205;
    struct s53* esp206;
    uint16_t* eax207;
    void** edx208;
    void** eax209;
    uint16_t* edx210;
    int32_t edi211;
    void** edi212;
    void*** edi213;
    uint32_t edx214;
    uint32_t ebx215;
    uint32_t edx216;
    void** edx217;
    uint32_t eax218;
    uint32_t ebx219;
    uint32_t edx220;
    struct s53* esp221;
    void** eax222;
    uint32_t edx223;
    void** edx224;
    struct s26* eax225;
    struct s27* edi226;
    struct s53* esp227;
    uint32_t edx228;
    uint32_t edx229;
    uint32_t eax230;
    struct s53* esp231;
    void** edi232;
    void** edx233;
    struct s62* eax234;
    uint32_t edx235;
    void** edx236;
    void** ebx237;
    void** ebp238;
    uint32_t ebx239;
    uint32_t edx240;
    struct s53* esp241;
    void** edx242;
    uint32_t eax243;
    void** eax244;
    void** ebx245;
    void** ebp246;
    int32_t ecx247;
    uint32_t edx248;
    uint32_t eax249;
    struct s53* esp250;
    struct s50* esp251;
    struct s53* esp252;
    void** edx253;
    uint32_t ecx254;
    void** ebx255;
    int32_t ecx256;
    void** ebp257;
    uint32_t eax258;
    uint32_t esi259;
    struct s53* esp260;
    struct s50* esp261;
    uint32_t ecx262;
    void** ebp263;
    uint32_t eax264;
    uint32_t esi265;
    struct s53* esp266;
    struct s63* esp267;
    int1_t zf268;
    int32_t eax269;
    int32_t* ebx270;
    int32_t eax271;
    struct s64* esp272;
    int32_t eax273;
    struct s64* esp274;
    struct s53* esp275;
    void** eax276;
    void** eax277;
    void** edi278;
    uint32_t ebx279;
    struct s53* esp280;
    void** eax281;
    void** edi282;
    uint32_t ebx283;
    struct s53* esp284;
    uint32_t edx285;

    esp3 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp4 = esp3;
    esi5 = ecx;
    esp6 = reinterpret_cast<struct s50*>(reinterpret_cast<uint32_t>(esp3 - 4) - 4 - 4 - 60);
    v7 = edx8;
    v9 = ecx;
    *reinterpret_cast<struct s18**>(a2 + 0x90) = reinterpret_cast<struct s18*>(0);
    if (reinterpret_cast<unsigned char>(eax10) >= reinterpret_cast<unsigned char>(edx11) || reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 0xa4)) >= reinterpret_cast<unsigned char>((*reinterpret_cast<uint32_t*>(esi5 + 96) >> 31) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(esi5 + 76)))) {
        addr_6e950c5c_2:
        return;
    } else {
        eax12 = eax10;
        edi13 = *reinterpret_cast<void***>(a2 + 0xa4);
        v14 = reinterpret_cast<struct s18*>(0);
        do {
            edx15 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12))));
            ebx16 = eax12 + 1;
            ecx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx15) & 0xffffffc0);
            if (*reinterpret_cast<unsigned char*>(&ecx17) == 64) {
                *reinterpret_cast<void***>(a2 + 0xa4) = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(edx15) & 63) * *reinterpret_cast<uint32_t*>(a2 + 0xb0) + reinterpret_cast<unsigned char>(edi13));
                eax12 = ebx16;
                continue;
            } else {
                if (*reinterpret_cast<unsigned char*>(&ecx17) == 0x80) {
                    eax12 = ebx16;
                    esi18 = reinterpret_cast<unsigned char>(edx15) & 63;
                    edi19 = 0;
                    ecx20 = 0;
                    do {
                        ++eax12;
                        ebx21 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                        edx22 = (ebx21 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx20);
                        ecx20 = ecx20 + 7;
                        edi19 = edi19 | edx22;
                    } while (*reinterpret_cast<signed char*>(&ebx21) < 0);
                } else {
                    if (*reinterpret_cast<unsigned char*>(&ecx17) == 0xc0) {
                        edx23 = reinterpret_cast<unsigned char>(edx15) & 63;
                        if (edx23 > 17) {
                            addr_6e950cd5_11:
                            eax12 = ebx16;
                            continue;
                        } else {
                            *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a2 + edx23 * 8) + 4) = 0;
                            eax12 = ebx16;
                            continue;
                        }
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&edx15) > 47) 
                            goto addr_6e950ccc_14;
                        esi5 = esi5;
                        goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(edx15) * 4 + 0x6e9573f8);
                    }
                }
            }
            addr_6e950c87_16:
            edi24 = reinterpret_cast<void**>(edi19 * *reinterpret_cast<uint32_t*>(a2 + 0xac));
            if (esi18 <= 17) {
                edx25 = reinterpret_cast<struct s51*>(a2 + esi18 * 8);
                edx25->f4 = 1;
                edx25->f0 = edi24;
                continue;
            }
            edi13 = a2;
            esi5 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edi13 + 0xb8)));
            ecx17 = esi5;
            if (*reinterpret_cast<unsigned char*>(&ecx17) == 0xff) 
                goto addr_6e950ccc_14;
            ecx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) & 0x70);
            v26 = *reinterpret_cast<unsigned char*>(&ecx17);
            if (*reinterpret_cast<unsigned char*>(&ecx17) == 32) {
                edi13 = *reinterpret_cast<void***>(v9 + 84);
                v27 = edi13;
            } else {
                if (*reinterpret_cast<unsigned char*>(&ecx17) <= 32) {
                    if (!*reinterpret_cast<unsigned char*>(&ecx17)) 
                        goto addr_6e9512db_23;
                    if (*reinterpret_cast<unsigned char*>(&ecx17) == 16) 
                        goto addr_6e9512db_23; else 
                        goto addr_6e950ccc_14;
                } else {
                    edi13 = reinterpret_cast<void**>(static_cast<uint32_t>(v26));
                    ecx17 = edi13;
                    if (*reinterpret_cast<unsigned char*>(&ecx17) == 64) {
                        edi13 = *reinterpret_cast<void***>(v9 + 92);
                        v27 = edi13;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ecx17) == 80) {
                            addr_6e9512db_23:
                            v27 = reinterpret_cast<void**>(0);
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&ecx17) != 48) 
                                goto addr_6e950ccc_14;
                            edi13 = *reinterpret_cast<void***>(v9 + 88);
                            v27 = edi13;
                        }
                    }
                }
            }
            ecx17 = esi5;
            if (*reinterpret_cast<unsigned char*>(&ecx17) == 80) {
                ebx28 = reinterpret_cast<struct s52*>(reinterpret_cast<uint32_t>(ebx16 + 3) & 0xfffffffc);
                eax12 = reinterpret_cast<void**>(&ebx28->f4);
                edx29 = ebx28->f0;
            } else {
                edx30 = reinterpret_cast<unsigned char>(esi5) & 15;
                if (*reinterpret_cast<unsigned char*>(&edx30) > 12) 
                    goto addr_6e950ccc_14;
                edx15 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx30)));
                switch (edx15) {
                case 0:
                case 3:
                case 11:
                    edi31 = *reinterpret_cast<void***>(eax12 + 1);
                    eax12 = eax12 + 5;
                    break;
                case 1:
                    eax12 = ebx16;
                    edi31 = reinterpret_cast<void**>(0);
                    ecx32 = 0;
                    v33 = ebx16;
                    do {
                        ++eax12;
                        ebx34 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                        edx35 = (ebx34 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx32);
                        ecx32 = ecx32 + 7;
                        edi31 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi31) | edx35);
                    } while (*reinterpret_cast<signed char*>(&ebx34) < 0);
                    ebx16 = v33;
                    break;
                case 2:
                    edi31 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax12 + 1))));
                    eax12 = eax12 + 3;
                    break;
                case 4:
                case 12:
                    edi31 = *reinterpret_cast<void***>(eax12 + 1);
                    eax12 = eax12 + 9;
                    break;
                    addr_6e950ccc_14:
                case 5:
                case 6:
                case 7:
                case 8:
                    esp36 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                    esp36->f0 = reinterpret_cast<void**>(0x6e950cd5);
                    fun_6e955970(ecx17, esp36->f4, esp36->f8, esp36->f12, esp36->f16, esp36->f20, 0, esp36->f28, esp36->f32);
                    esp6 = reinterpret_cast<struct s50*>(&esp36->f4);
                    goto addr_6e950cd5_11;
                case 9:
                    esp37 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                    esp37->f0 = reinterpret_cast<void**>(0x6e9512fa);
                    eax12 = fun_6e950b70(esp37->f4, esp37->f8);
                    esp6 = reinterpret_cast<struct s50*>(&esp37->f4);
                    edi31 = v38;
                    break;
                case 10:
                    edi31 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax12 + 1))));
                    eax12 = eax12 + 3;
                case 0x154:
                    goto 0x6e954590;
                case 0x14d:
                    goto 0x6e9545f6;
                case 0x14b:
                case 0x14e:
                case 0x156:
                    goto 0x6e954550;
                case 0x147:
                    goto 0x6e9533b0;
                case 0x143:
                case 0x144:
                case 0x145:
                case 0x146:
                    goto 0x6e953400;
                case 0x14c:
                    goto 0x6e9545d0;
                case 0x142:
                case 0x14a:
                    goto 0x6e9533a0;
                case 0x158:
                    goto 0x6e954c30;
                case 0x140:
                    goto 0x6e9533f0;
                case 0x150:
                case 0x151:
                case 0x152:
                case 0x153:
                    goto 0x6e954601;
                case 0x13e:
                case 0x141:
                case 0x149:
                    goto 0x6e953370;
                case 0x13c:
                    goto 0x6e952425;
                case 0x13b:
                    goto 0x6e952480;
                case 0x137:
                    goto 0x6e952287;
                case 0x136:
                    goto 0x6e952276;
                case 0x132:
                    goto 0x6e952203;
                case 0x126:
                    goto 0x6e952236;
                case 0x125:
                    goto 0x6e95222b;
                case 0x124:
                    goto 0x6e95221f;
                case 13:
                case 16:
                case 24:
                    goto 0x6e951750;
                case 44:
                    goto 0x6e951d60;
                case 0x120:
                    goto 0x6e9522ae;
                case 26:
                case 29:
                case 37:
                    goto 0x6e95185d;
                case 0x11f:
                    goto 0x6e952298;
                case 0x12d:
                    goto 0x6e9521d7;
                case 56:
                    goto 0x6e951f30;
                case 0x11a:
                case 0x122:
                    goto 0x6e952115;
                case 0x130:
                    goto 0x6e9521f8;
                case 0x118:
                    goto 0x6e9522ba;
                case 0x135:
                    goto 0x6e952265;
                case 0x117:
                    goto 0x6e9522c6;
                case 0x155:
                    goto 0x6e954587;
                case 0x94:
                case 0x95:
                case 0x96:
                case 0x97:
                case 0x98:
                case 0x99:
                case 0x9a:
                case 0x9b:
                case 0x9c:
                case 0x9d:
                case 0x9e:
                case 0x9f:
                case 0xa0:
                case 0xa1:
                case 0xa2:
                case 0xa3:
                case 0xa4:
                case 0xa5:
                case 0xa6:
                case 0xa7:
                case 0xa8:
                case 0xa9:
                case 0xaa:
                case 0xab:
                case 0xac:
                case 0xad:
                case 0xae:
                case 0xaf:
                case 0xb0:
                case 0xb1:
                case 0xb2:
                case 0xb3:
                    goto 0x6e951e80;
                case 0xba:
                    goto 0x6e951d25;
                case 0x74:
                case 0x75:
                case 0x76:
                case 0x77:
                case 0x78:
                case 0x79:
                case 0x7a:
                case 0x7b:
                case 0x7c:
                case 0x7d:
                case 0x7e:
                case 0x7f:
                case 0x80:
                case 0x81:
                case 0x82:
                case 0x83:
                case 0x84:
                case 0x85:
                case 0x86:
                case 0x87:
                case 0x88:
                case 0x89:
                case 0x8a:
                case 0x8b:
                case 0x8c:
                case 0x8d:
                case 0x8e:
                case 0x8f:
                case 0x90:
                case 0x91:
                case 0x92:
                case 0x93:
                    goto 0x6e951cf0;
                case 0x148:
                    goto 0x6e9533a7;
                case 0x139:
                    goto 0x6e952541;
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 0x65:
                case 0x66:
                case 0x67:
                case 0x68:
                case 0x69:
                case 0x6a:
                case 0x6b:
                case 0x6c:
                case 0x6d:
                case 0x6e:
                case 0x6f:
                case 0x70:
                case 0x71:
                case 0x72:
                case 0x73:
                    goto 0x6e951ed0;
                case 83:
                    goto 0x6e952010;
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 69:
                case 70:
                case 72:
                case 73:
                case 74:
                case 75:
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                    goto 0x6e952045;
                case 57:
                    goto 0x6e951f06;
                case 0x127:
                    goto 0x6e9521b6;
                case 15:
                    goto 0x6e9519c1;
                case 36:
                    goto 0x6e951ba6;
                case 35:
                    goto 0x6e951b45;
                case 53:
                    goto 0x6e951f70;
                case 46:
                    goto 0x6e951d40;
                case 52:
                    goto 0x6e951f86;
                case 0x13a:
                    goto 0x6e952520;
                case 0x12b:
                    goto 0x6e9521cd;
                case 50:
                case 51:
                    goto 0x6e951ce0;
                case 47:
                    goto 0x6e951d30;
                case 39:
                case 48:
                case 49:
                    goto 0x6e951cb0;
                case 0x134:
                    goto 0x6e952254;
                case 22:
                    goto 0x6e95199d;
                case 23:
                    goto 0x6e9519b5;
                case 30:
                case 38:
                    goto 0x6e951b39;
                case 58:
                    goto 0x6e951ee0;
                case 17:
                case 25:
                    goto 0x6e951840;
                case 0x13f:
                    goto 0x6e9533c3;
                case 59:
                    goto 0x6e952070;
                case 40:
                case 41:
                case 43:
                case 60:
                case 0xb5:
                case 0xb7:
                case 0xb9:
                case 0xbb:
                case 0xbc:
                case 0xbd:
                case 0xbe:
                case 0xbf:
                case 0xc0:
                case 0xc1:
                case 0xc2:
                case 0xc3:
                case 0xc4:
                case 0xc5:
                case 0xc6:
                case 0xc7:
                case 0xc8:
                case 0xc9:
                case 0xca:
                case 0xcb:
                case 0xcc:
                case 0xcd:
                case 0xce:
                case 0xcf:
                case 0xd0:
                case 0xd1:
                case 0xd2:
                case 0xd3:
                case 0xd4:
                case 0xd5:
                case 0xd6:
                case 0xd7:
                case 0xd8:
                case 0xd9:
                case 0xda:
                case 0xdb:
                case 0xdc:
                case 0xdd:
                case 0xde:
                case 0xdf:
                case 0xe0:
                case 0xe1:
                case 0xe2:
                case 0xe3:
                case 0xe4:
                case 0xe5:
                case 0xe6:
                case 0xe7:
                case 0xe8:
                case 0xe9:
                case 0xea:
                case 0xeb:
                case 0xec:
                case 0xed:
                case 0xee:
                case 0xef:
                case 0xf0:
                case 0xf1:
                case 0xf2:
                case 0xf3:
                case 0xf4:
                case 0xf5:
                case 0xf6:
                case 0xf7:
                case 0xf8:
                case 0xf9:
                case 0xfa:
                case 0xfb:
                case 0xfc:
                case 0xfd:
                case 0xfe:
                case 0xff:
                case 0x100:
                case 0x101:
                case 0x102:
                case 0x103:
                case 0x104:
                case 0x105:
                case 0x106:
                case 0x107:
                case 0x108:
                case 0x109:
                case 0x10a:
                case 0x10b:
                case 0x10c:
                case 0x10d:
                case 0x10e:
                case 0x10f:
                case 0x110:
                case 0x111:
                case 0x112:
                case 0x113:
                case 0x114:
                case 0x11b:
                case 0x11c:
                case 0x11d:
                case 0x11e:
                case 0x128:
                case 0x129:
                case 0x12c:
                case 0x131:
                    goto 0x6e951d20;
                case 76:
                    goto 0x6e952020;
                case 0x13d:
                    goto 0x6e9524d6;
                case 28:
                    goto 0x6e951b5d;
                case 0x14f:
                case 0x157:
                    goto 0x6e954580;
                case 0x133:
                    goto 0x6e952243;
                case 0x12e:
                    goto 0x6e9521e2;
                case 18:
                case 19:
                case 20:
                case 21:
                case 31:
                case 32:
                case 33:
                case 34:
                    goto 0x6e951746;
                case 0x115:
                    goto 0x6e951db0;
                case 27:
                    goto 0x6e951b6a;
                case 54:
                    goto 0x6e951f58;
                case 0xb4:
                    goto 0x6e951e24;
                case 45:
                    goto 0x6e951d50;
                case 0x12a:
                    goto 0x6e9521c2;
                case 14:
                    goto 0x6e9519cd;
                case 0x123:
                    goto 0x6e952214;
                case 0x116:
                case 0x119:
                case 0x121:
                    goto 0x6e9520c0;
                case 0x138:
                    goto 0x6e952442;
                case 42:
                case 61:
                case 67:
                case 68:
                case 71:
                case 0xb8:
                    goto 0x6e951d70;
                case 0xb6:
                    goto 0x6e951fb0;
                case 0x12f:
                    goto 0x6e9521ed;
                case 55:
                    goto 0x6e951f46;
                }
                edx29 = reinterpret_cast<void**>(0);
                if (edi31) {
                    edx39 = v27;
                    if (v26 == 16) {
                        edx39 = ebx16;
                    }
                    ebx40 = esi5;
                    edx29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx39) + reinterpret_cast<unsigned char>(edi31));
                    if (*reinterpret_cast<signed char*>(&ebx40) < 0) {
                        edx29 = *reinterpret_cast<void***>(edx29);
                    }
                }
            }
            *reinterpret_cast<void***>(a2 + 0xa4) = edx29;
            continue;
            eax12 = eax12 + 2;
            *reinterpret_cast<void***>(a2 + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff)) * *reinterpret_cast<uint32_t*>(a2 + 0xb0) + reinterpret_cast<unsigned char>(edi13));
            continue;
            eax12 = eax12 + 3;
            *reinterpret_cast<void***>(a2 + 0xa4) = reinterpret_cast<void**>(*reinterpret_cast<uint16_t*>(eax12 + 0xfffffffe) * *reinterpret_cast<uint32_t*>(a2 + 0xb0) + reinterpret_cast<unsigned char>(edi13));
            continue;
            eax12 = eax12 + 5;
            *reinterpret_cast<void***>(a2 + 0xa4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xfffffffc)) * *reinterpret_cast<uint32_t*>(a2 + 0xb0) + reinterpret_cast<unsigned char>(edi13));
            continue;
            esi41 = 0;
            ecx42 = 0;
            do {
                ++ebx16;
                edx43 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax44 = (edx43 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx42);
                ecx42 = ecx42 + 7;
                esi41 = esi41 | eax44;
            } while (*reinterpret_cast<signed char*>(&edx43) < 0);
            eax12 = ebx16;
            edi19 = 0;
            ecx45 = 0;
            esi18 = esi41;
            do {
                ++eax12;
                ebx46 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx47 = (ebx46 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx45);
                ecx45 = ecx45 + 7;
                edi19 = edi19 | edx47;
            } while (*reinterpret_cast<signed char*>(&ebx46) < 0);
            goto addr_6e950c87_16;
            eax12 = ebx16;
            esi48 = 0;
            ecx49 = 0;
            do {
                ++eax12;
                ebx50 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx51 = (ebx50 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx49);
                ecx49 = ecx49 + 7;
                esi48 = esi48 | edx51;
            } while (*reinterpret_cast<signed char*>(&ebx50) < 0);
            addr_6e950df9_58:
            if (esi48 <= 17) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a2 + esi48 * 8) + 4) = 0;
                continue;
            }
            eax12 = ebx16;
            esi52 = 0;
            ecx53 = 0;
            do {
                ++eax12;
                ebx54 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx55 = (ebx54 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx53);
                ecx53 = ecx53 + 7;
                esi52 = esi52 | edx55;
            } while (*reinterpret_cast<signed char*>(&ebx54) < 0);
            if (esi52 <= 17) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(a2 + esi52 * 8) + 4) = 6;
                continue;
            }
            eax12 = ebx16;
            esi48 = 0;
            ecx56 = 0;
            do {
                ++eax12;
                ebx57 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx58 = (ebx57 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx56);
                ecx56 = ecx56 + 7;
                esi48 = esi48 | edx58;
            } while (*reinterpret_cast<signed char*>(&ebx57) < 0);
            goto addr_6e950df9_58;
            ecx59 = 0;
            esi60 = 0;
            do {
                ++ebx16;
                edx61 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax62 = (edx61 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx59);
                ecx59 = ecx59 + 7;
                esi60 = esi60 | eax62;
            } while (*reinterpret_cast<signed char*>(&edx61) < 0);
            eax12 = ebx16;
            edi63 = reinterpret_cast<void**>(0);
            ecx64 = 0;
            esi65 = esi60;
            do {
                ++eax12;
                ebx66 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx67 = (ebx66 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx64);
                ecx64 = ecx64 + 7;
                edi63 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi63) | edx67);
            } while (*reinterpret_cast<signed char*>(&ebx66) < 0);
            if (esi65 <= 17) {
                edx68 = reinterpret_cast<struct s54*>(a2 + esi65 * 8);
                edx68->f4 = 2;
                edx68->f0 = edi63;
                continue;
            }
            if (!v14) {
                esp69 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp69->f0 = reinterpret_cast<void**>(0x6e951363);
                eax70 = fun_6e941590(ecx17);
                esp6 = reinterpret_cast<struct s50*>(reinterpret_cast<uint32_t>(&esp69->f4) - eax70);
                eax71 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esp6) + 15 & 0xfffffff0);
            } else {
                eax71 = v14;
                v14 = v14->f144;
            }
            esi72 = a2;
            edi73 = eax71;
            ecx74 = 41;
            while (ecx74) {
                --ecx74;
                edi73->f0 = *reinterpret_cast<void***>(esi72);
                edi73 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(edi73) + 4);
                esi72 = esi72 + 4;
            }
            *reinterpret_cast<struct s18**>(a2 + 0x90) = eax71;
            eax12 = ebx16;
            continue;
            ecx75 = 41;
            edi76 = a2;
            eax77 = *reinterpret_cast<struct s18**>(a2 + 0x90);
            esi78 = eax77;
            while (ecx75) {
                --ecx75;
                *reinterpret_cast<void***>(edi76) = esi78->f0;
                edi76 = edi76 + 4;
                esi78 = reinterpret_cast<struct s18*>(reinterpret_cast<uint32_t>(esi78) + 4);
            }
            edi79 = v14;
            v14 = eax77;
            eax77->f144 = edi79;
            eax12 = ebx16;
            continue;
            esi80 = 0;
            ecx81 = 0;
            do {
                ++ebx16;
                edx82 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax83 = (edx82 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx81);
                ecx81 = ecx81 + 7;
                esi80 = esi80 | eax83;
            } while (*reinterpret_cast<signed char*>(&edx82) < 0);
            ecx84 = 0;
            *reinterpret_cast<uint32_t*>(a2 + 0x98) = esi80;
            eax12 = ebx16;
            esi85 = 0;
            do {
                ++eax12;
                ebx86 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx87 = (ebx86 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx84);
                ecx84 = ecx84 + 7;
                esi85 = esi85 | edx87;
            } while (*reinterpret_cast<signed char*>(&ebx86) < 0);
            *reinterpret_cast<uint32_t*>(a2 + 0x94) = esi85;
            *reinterpret_cast<int32_t*>(a2 + 0xa0) = 1;
            continue;
            eax12 = ebx16;
            ecx88 = 0;
            esi89 = 0;
            do {
                ++eax12;
                ebx90 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx91 = (ebx90 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx88);
                ecx88 = ecx88 + 7;
                esi89 = esi89 | edx91;
            } while (*reinterpret_cast<signed char*>(&ebx90) < 0);
            *reinterpret_cast<uint32_t*>(a2 + 0x98) = esi89;
            *reinterpret_cast<int32_t*>(a2 + 0xa0) = 1;
            continue;
            eax12 = ebx16;
            esi92 = 0;
            ecx93 = 0;
            do {
                ++eax12;
                ebx94 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx95 = (ebx94 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx93);
                ecx93 = ecx93 + 7;
                esi92 = esi92 | edx95;
            } while (*reinterpret_cast<signed char*>(&ebx94) < 0);
            *reinterpret_cast<uint32_t*>(a2 + 0x94) = esi92;
            continue;
            esi96 = reinterpret_cast<void*>(0);
            ecx97 = 0;
            *reinterpret_cast<void***>(a2 + 0x9c) = ebx16;
            *reinterpret_cast<int32_t*>(a2 + 0xa0) = 2;
            do {
                ++ebx16;
                edx98 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax99 = (edx98 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx97);
                ecx97 = ecx97 + 7;
                esi96 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi96) | eax99);
            } while (*reinterpret_cast<signed char*>(&edx98) < 0);
            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<uint32_t>(esi96));
            continue;
            esi100 = 0;
            ecx101 = 0;
            do {
                ++ebx16;
                edx102 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax103 = (edx102 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx101);
                ecx101 = ecx101 + 7;
                esi100 = esi100 | eax103;
            } while (*reinterpret_cast<signed char*>(&edx102) < 0);
            if (esi100 <= 17) {
                eax104 = reinterpret_cast<struct s55*>(a2 + esi100 * 8);
                eax104->f4 = 3;
                eax104->f0 = ebx16;
            }
            esi105 = reinterpret_cast<void*>(0);
            ecx106 = 0;
            do {
                ++ebx16;
                edx107 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax108 = (edx107 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx106);
                ecx106 = ecx106 + 7;
                esi105 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi105) | eax108);
            } while (*reinterpret_cast<signed char*>(&edx107) < 0);
            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<uint32_t>(esi105));
            continue;
            esi109 = 0;
            ecx110 = 0;
            do {
                ++ebx16;
                edx111 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax112 = (edx111 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx110);
                ecx110 = ecx110 + 7;
                esi109 = esi109 | eax112;
            } while (*reinterpret_cast<signed char*>(&edx111) < 0);
            esp113 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp113->f0 = reinterpret_cast<void**>(0x6e951087);
            eax12 = fun_6e950b70(esp113->f4, esp113->f8);
            esp6 = reinterpret_cast<struct s50*>(&esp113->f4);
            edx114 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(a2 + 0xac) * v115);
            if (esi109 <= 17) {
                ecx116 = reinterpret_cast<struct s56*>(a2 + esi109 * 8);
                ecx116->f4 = 1;
                ecx116->f0 = edx114;
                continue;
            }
            esi117 = 0;
            ecx118 = 0;
            do {
                ++ebx16;
                edx119 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax120 = (edx119 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx118);
                ecx118 = ecx118 + 7;
                esi117 = esi117 | eax120;
            } while (*reinterpret_cast<signed char*>(&edx119) < 0);
            *reinterpret_cast<uint32_t*>(a2 + 0x98) = esi117;
            esp121 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp121->f0 = reinterpret_cast<void**>(0x6e9510dc);
            eax12 = fun_6e950b70(esp121->f4, esp121->f8);
            esp6 = reinterpret_cast<struct s50*>(&esp121->f4);
            edx122 = v123 * *reinterpret_cast<uint32_t*>(a2 + 0xac);
            *reinterpret_cast<int32_t*>(a2 + 0xa0) = 1;
            *reinterpret_cast<uint32_t*>(a2 + 0x94) = edx122;
            continue;
            esp124 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp124->f0 = reinterpret_cast<void**>(0x6e951108);
            eax12 = fun_6e950b70(esp124->f4, esp124->f8);
            esp6 = reinterpret_cast<struct s50*>(&esp124->f4);
            *reinterpret_cast<uint32_t*>(a2 + 0x94) = v125 * *reinterpret_cast<uint32_t*>(a2 + 0xac);
            continue;
            esi126 = 0;
            ecx127 = 0;
            do {
                ++ebx16;
                edx128 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax129 = (edx128 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx127);
                ecx127 = ecx127 + 7;
                esi126 = esi126 | eax129;
            } while (*reinterpret_cast<signed char*>(&edx128) < 0);
            eax12 = ebx16;
            edi130 = 0;
            ecx131 = 0;
            do {
                ++eax12;
                ebx132 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx133 = (ebx132 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx131);
                ecx131 = ecx131 + 7;
                edi130 = edi130 | edx133;
            } while (*reinterpret_cast<signed char*>(&ebx132) < 0);
            edi134 = reinterpret_cast<void**>(edi130 * *reinterpret_cast<uint32_t*>(a2 + 0xac));
            if (esi126 <= 17) {
                edx135 = reinterpret_cast<struct s57*>(a2 + esi126 * 8);
                edx135->f4 = 4;
                edx135->f0 = edi134;
                continue;
            }
            esi136 = 0;
            ecx137 = 0;
            do {
                ++ebx16;
                edx138 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax139 = (edx138 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx137);
                ecx137 = ecx137 + 7;
                esi136 = esi136 | eax139;
            } while (*reinterpret_cast<signed char*>(&edx138) < 0);
            esp140 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp140->f0 = reinterpret_cast<void**>(0x6e9511a1);
            eax12 = fun_6e950b70(esp140->f4, esp140->f8);
            esp6 = reinterpret_cast<struct s50*>(&esp140->f4);
            edx141 = reinterpret_cast<void**>(*reinterpret_cast<uint32_t*>(a2 + 0xac) * v142);
            if (esi136 <= 17) {
                ecx143 = reinterpret_cast<struct s58*>(a2 + esi136 * 8);
                ecx143->f4 = 4;
                ecx143->f0 = edx141;
                continue;
            }
            ecx144 = 0;
            esi145 = 0;
            do {
                ++ebx16;
                edx146 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax147 = (edx146 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx144);
                ecx144 = ecx144 + 7;
                esi145 = esi145 | eax147;
            } while (*reinterpret_cast<signed char*>(&edx146) < 0);
            if (esi145 <= 17) {
                eax148 = reinterpret_cast<struct s59*>(a2 + esi145 * 8);
                eax148->f4 = 5;
                eax148->f0 = ebx16;
            }
            esi149 = reinterpret_cast<void*>(0);
            ecx150 = 0;
            do {
                ++ebx16;
                edx151 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax152 = (edx151 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx150);
                ecx150 = ecx150 + 7;
                esi149 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi149) | eax152);
            } while (*reinterpret_cast<signed char*>(&edx151) < 0);
            eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<uint32_t>(esi149));
            continue;
            eax12 = ebx16;
            esi153 = 0;
            ecx154 = 0;
            do {
                ++eax12;
                ebx155 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx156 = (ebx155 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx154);
                ecx154 = ecx154 + 7;
                esi153 = esi153 | edx156;
            } while (*reinterpret_cast<signed char*>(&ebx155) < 0);
            *reinterpret_cast<uint32_t*>(v9 + 0x68) = esi153;
            continue;
            esi157 = 0;
            ecx158 = 0;
            do {
                ++ebx16;
                edx159 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
                eax160 = (edx159 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx158);
                ecx158 = ecx158 + 7;
                esi157 = esi157 | eax160;
            } while (*reinterpret_cast<signed char*>(&edx159) < 0);
            eax12 = ebx16;
            edi161 = 0;
            ecx162 = 0;
            do {
                ++eax12;
                ebx163 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                edx164 = (ebx163 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx162);
                ecx162 = ecx162 + 7;
                edi161 = edi161 | edx164;
            } while (*reinterpret_cast<signed char*>(&ebx163) < 0);
            if (esi157 <= 17) {
                edx165 = reinterpret_cast<struct s60*>(a2 + esi157 * 8);
                edi166 = reinterpret_cast<void**>(-(edi161 * *reinterpret_cast<uint32_t*>(a2 + 0xac)));
                edx165->f4 = 1;
                edx165->f0 = edi166;
            }
        } while (reinterpret_cast<unsigned char>(eax12) < reinterpret_cast<unsigned char>(v7) && (esi5 = v9, edi13 = *reinterpret_cast<void***>(a2 + 0xa4), reinterpret_cast<unsigned char>(edi13) < reinterpret_cast<unsigned char>((*reinterpret_cast<uint32_t*>(esi5 + 96) >> 31) + reinterpret_cast<uint32_t>(*reinterpret_cast<void**>(esi5 + 76)))));
        goto addr_6e950c5c_2;
    }
    while (1) {
        eax167 = *reinterpret_cast<void***>(edi13 + 1);
        edi13 = edi13 + 5;
        while (1) {
            edx15 = reinterpret_cast<void**>(0);
            if (eax167) {
                edx168 = esp6->f40;
                if (esp6->f24 == 16) {
                    edx168 = esp6->f36;
                }
                edx15 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx168) + reinterpret_cast<unsigned char>(eax167));
                if (*reinterpret_cast<signed char*>(&ebx16) < reinterpret_cast<signed char>(0)) {
                    edx15 = *reinterpret_cast<void***>(edx15);
                }
            }
            while (1) {
                while (1) {
                    eax169 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi5));
                    ++esi5;
                    if (!*reinterpret_cast<signed char*>(&eax169)) 
                        goto addr_6e951642_149;
                    if (*reinterpret_cast<signed char*>(&eax169) != 76) {
                        if (*reinterpret_cast<signed char*>(&eax169) == 82) {
                            eax170 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13));
                            ++edi13;
                            v171 = *reinterpret_cast<unsigned char*>(&eax170);
                        } else {
                            if (*reinterpret_cast<signed char*>(&eax169) == 80) 
                                break;
                            if (*reinterpret_cast<signed char*>(&eax169) != 83) 
                                goto addr_6e951926_155;
                        }
                    } else {
                        eax172 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13));
                        ++edi13;
                        v173 = *reinterpret_cast<unsigned char*>(&eax172);
                    }
                }
                ebx16 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13))));
                if (*reinterpret_cast<unsigned char*>(&ebx16) == 0xff) 
                    goto addr_6e951746_159;
                eax174 = reinterpret_cast<unsigned char>(ebx16) & 0x70;
                esp6->f24 = *reinterpret_cast<void***>(&eax174);
                if (*reinterpret_cast<void***>(&eax174) == 32) {
                    esp6->f40 = *reinterpret_cast<void***>(esp6->f16 + 84);
                } else {
                    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax174)) <= 32) {
                        if (!*reinterpret_cast<void***>(&eax174)) 
                            goto addr_6e951850_164;
                        esi5 = esi5;
                        if (*reinterpret_cast<void***>(&eax174) == 16) 
                            goto addr_6e951850_164; else 
                            goto addr_6e951746_159;
                    } else {
                        eax175 = reinterpret_cast<unsigned char>(esp6->f24);
                        if (*reinterpret_cast<signed char*>(&eax175) == 64) {
                            esp6->f40 = *reinterpret_cast<void***>(esp6->f16 + 92);
                        } else {
                            if (*reinterpret_cast<signed char*>(&eax175) == 80) {
                                addr_6e951850_164:
                                esp6->f40 = reinterpret_cast<void**>(0);
                            } else {
                                if (*reinterpret_cast<signed char*>(&eax175) != 48) 
                                    goto addr_6e951746_159;
                                esp6->f40 = *reinterpret_cast<void***>(esp6->f16 + 88);
                            }
                        }
                    }
                }
                esp6->f36 = edi13 + 1;
                if (*reinterpret_cast<unsigned char*>(&ebx16) != 80) 
                    break;
                eax176 = reinterpret_cast<struct s61*>(reinterpret_cast<unsigned char>(edi13 + 4) & 0xfffffffc);
                edi13 = reinterpret_cast<void**>(&eax176->f4);
                edx15 = eax176->f0;
            }
            eax177 = reinterpret_cast<unsigned char>(ebx16) & 15;
            if (*reinterpret_cast<unsigned char*>(&eax177) > 12) 
                goto addr_6e951746_159;
            eax12 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax177)));
            switch (eax12) {
            case 1:
                edi13 = esp6->f36;
                ecx17 = reinterpret_cast<void**>(0);
                esp6->f44 = esi5;
                esi178 = reinterpret_cast<void**>(0);
                do {
                    ++edi13;
                    eax179 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi13 + 0xffffffff));
                    edx180 = (eax179 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                    ecx17 = ecx17 + 7;
                    esi178 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi178) | edx180);
                } while (*reinterpret_cast<signed char*>(&eax179) < 0);
                eax167 = esi178;
                esi5 = esp6->f44;
                break;
            case 2:
                eax167 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(edi13 + 1))));
                edi13 = edi13 + 3;
                break;
            case 4:
            case 12:
                eax167 = *reinterpret_cast<void***>(edi13 + 1);
                edi13 = edi13 + 9;
                break;
            case 9:
                esp181 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp181->f0 = reinterpret_cast<void**>(0x6e9519aa);
                eax182 = fun_6e950b70(esp181->f4, esp181->f8);
                esp6 = reinterpret_cast<struct s50*>(&esp181->f4);
                edi13 = eax182;
                eax167 = esp6->f60;
                break;
            case 10:
                eax167 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(edi13 + 1))));
                edi13 = edi13 + 3;
            case 0x147:
                goto 0x6e954590;
            case 0x140:
                goto 0x6e9545f6;
            case 0x13e:
            case 0x141:
            case 0x149:
                goto 0x6e954550;
            case 0x13a:
                goto 0x6e9533b0;
            case 0x136:
            case 0x137:
            case 0x138:
            case 0x139:
                goto 0x6e953400;
            case 0x13f:
                goto 0x6e9545d0;
            case 0x135:
            case 0x13d:
                goto 0x6e9533a0;
            case 0x14b:
                goto 0x6e954c30;
            case 0x133:
                goto 0x6e9533f0;
            case 0x143:
            case 0x144:
            case 0x145:
            case 0x146:
                goto 0x6e954601;
            case 0x131:
            case 0x134:
            case 0x13c:
                goto 0x6e953370;
            case 0x12f:
                goto 0x6e952425;
            case 0x12e:
                goto 0x6e952480;
            case 0x12d:
                goto 0x6e952520;
            case 0x12a:
                goto 0x6e952287;
            case 0x129:
                goto 0x6e952276;
            case 0x125:
                goto 0x6e952203;
            case 43:
                goto 0x6e951f30;
            case 0x10d:
            case 0x115:
                goto 0x6e952115;
            case 0x120:
                goto 0x6e9521d7;
            case 0x119:
                goto 0x6e952236;
            case 0x118:
                goto 0x6e95222b;
            case 0x117:
                goto 0x6e95221f;
            case 0:
            case 3:
            case 11:
                goto 0x6e951750;
            case 31:
                goto 0x6e951d60;
            case 0x113:
                goto 0x6e9522ae;
            case 13:
            case 16:
            case 24:
                goto 0x6e95185d;
            case 0x112:
                goto 0x6e952298;
            case 0x123:
                goto 0x6e9521f8;
            case 0x10b:
                goto 0x6e9522ba;
            case 0x128:
                goto 0x6e952265;
            case 0x10a:
                goto 0x6e9522c6;
            case 0x148:
                goto 0x6e954587;
            case 0x87:
            case 0x88:
            case 0x89:
            case 0x8a:
            case 0x8b:
            case 0x8c:
            case 0x8d:
            case 0x8e:
            case 0x8f:
            case 0x90:
            case 0x91:
            case 0x92:
            case 0x93:
            case 0x94:
            case 0x95:
            case 0x96:
            case 0x97:
            case 0x98:
            case 0x99:
            case 0x9a:
            case 0x9b:
            case 0x9c:
            case 0x9d:
            case 0x9e:
            case 0x9f:
            case 0xa0:
            case 0xa1:
            case 0xa2:
            case 0xa3:
            case 0xa4:
            case 0xa5:
            case 0xa6:
                goto 0x6e951e80;
            case 0xad:
                goto 0x6e951d25;
            case 0x67:
            case 0x68:
            case 0x69:
            case 0x6a:
            case 0x6b:
            case 0x6c:
            case 0x6d:
            case 0x6e:
            case 0x6f:
            case 0x70:
            case 0x71:
            case 0x72:
            case 0x73:
            case 0x74:
            case 0x75:
            case 0x76:
            case 0x77:
            case 0x78:
            case 0x79:
            case 0x7a:
            case 0x7b:
            case 0x7c:
            case 0x7d:
            case 0x7e:
            case 0x7f:
            case 0x80:
            case 0x81:
            case 0x82:
            case 0x83:
            case 0x84:
            case 0x85:
            case 0x86:
                goto 0x6e951cf0;
            case 23:
                goto 0x6e951ba6;
            case 22:
                goto 0x6e951b45;
            case 40:
                goto 0x6e951f70;
            case 0x11a:
                goto 0x6e9521b6;
            case 0x13b:
                goto 0x6e9533a7;
            case 0x12c:
                goto 0x6e952541;
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 0x65:
            case 0x66:
                goto 0x6e951ed0;
            case 70:
                goto 0x6e952010;
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 56:
            case 57:
            case 59:
            case 60:
            case 61:
            case 62:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
                goto 0x6e952045;
            case 14:
                goto 0x6e951b6a;
            case 0x108:
                goto 0x6e951db0;
            case 41:
                goto 0x6e951f58;
            case 44:
                goto 0x6e951f06;
            case 37:
            case 38:
                goto 0x6e951ce0;
            case 0x11e:
                goto 0x6e9521cd;
            case 33:
                goto 0x6e951d40;
            case 39:
                goto 0x6e951f86;
            case 34:
                goto 0x6e951d30;
            case 0x109:
            case 0x10c:
            case 0x114:
                goto 0x6e9520c0;
            case 0x12b:
                goto 0x6e952442;
            case 29:
            case 48:
            case 54:
            case 55:
            case 58:
            case 0xab:
                goto 0x6e951d70;
            case 0x127:
                goto 0x6e952254;
            case 0x132:
                goto 0x6e9533c3;
            case 46:
                goto 0x6e952070;
            case 27:
            case 28:
            case 30:
            case 47:
            case 0xa8:
            case 0xaa:
            case 0xac:
            case 0xae:
            case 0xaf:
            case 0xb0:
            case 0xb1:
            case 0xb2:
            case 0xb3:
            case 0xb4:
            case 0xb5:
            case 0xb6:
            case 0xb7:
            case 0xb8:
            case 0xb9:
            case 0xba:
            case 0xbb:
            case 0xbc:
            case 0xbd:
            case 0xbe:
            case 0xbf:
            case 0xc0:
            case 0xc1:
            case 0xc2:
            case 0xc3:
            case 0xc4:
            case 0xc5:
            case 0xc6:
            case 0xc7:
            case 0xc8:
            case 0xc9:
            case 0xca:
            case 0xcb:
            case 0xcc:
            case 0xcd:
            case 0xce:
            case 0xcf:
            case 0xd0:
            case 0xd1:
            case 0xd2:
            case 0xd3:
            case 0xd4:
            case 0xd5:
            case 0xd6:
            case 0xd7:
            case 0xd8:
            case 0xd9:
            case 0xda:
            case 0xdb:
            case 0xdc:
            case 0xdd:
            case 0xde:
            case 0xdf:
            case 0xe0:
            case 0xe1:
            case 0xe2:
            case 0xe3:
            case 0xe4:
            case 0xe5:
            case 0xe6:
            case 0xe7:
            case 0xe8:
            case 0xe9:
            case 0xea:
            case 0xeb:
            case 0xec:
            case 0xed:
            case 0xee:
            case 0xef:
            case 0xf0:
            case 0xf1:
            case 0xf2:
            case 0xf3:
            case 0xf4:
            case 0xf5:
            case 0xf6:
            case 0xf7:
            case 0xf8:
            case 0xf9:
            case 0xfa:
            case 0xfb:
            case 0xfc:
            case 0xfd:
            case 0xfe:
            case 0xff:
            case 0x100:
            case 0x101:
            case 0x102:
            case 0x103:
            case 0x104:
            case 0x105:
            case 0x106:
            case 0x107:
            case 0x10e:
            case 0x10f:
            case 0x110:
            case 0x111:
            case 0x11b:
            case 0x11c:
            case 0x11f:
            case 0x124:
                goto 0x6e951d20;
            case 26:
            case 35:
            case 36:
                goto 0x6e951cb0;
            case 17:
            case 25:
                goto 0x6e951b39;
            case 0x11d:
                goto 0x6e9521c2;
            case 0xa9:
                goto 0x6e951fb0;
            case 0x122:
                goto 0x6e9521ed;
            case 42:
                goto 0x6e951f46;
            case 45:
                goto 0x6e951ee0;
            case 63:
                goto 0x6e952020;
            case 0x130:
                goto 0x6e9524d6;
            case 15:
                goto 0x6e951b5d;
            case 0x142:
            case 0x14a:
                goto 0x6e954580;
            case 0x126:
                goto 0x6e952243;
            case 0x121:
                goto 0x6e9521e2;
            case 5:
            case 6:
            case 7:
            case 8:
            case 18:
            case 19:
            case 20:
            case 21:
                goto 0x6e951746;
            case 0xa7:
                goto 0x6e951e24;
            case 32:
                goto 0x6e951d50;
            case 0x116:
                goto 0x6e952214;
            }
        }
        addr_6e951642_149:
        if (!esp6->f32) {
            eax183 = edi13;
        } else {
            addr_6e95164e_183:
            esi5 = esp6->f20;
            ecx17 = esp6->f16;
            esp6->f0 = ebp4;
            esp184 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp184->f0 = reinterpret_cast<void**>(0x6e951664);
            fun_6e950bb0(ecx17, esp184->f4);
            esp6 = reinterpret_cast<struct s50*>(&esp184->f12 + 4);
            edx15 = esp6->f28 + 8;
            eax185 = v171;
            if (*reinterpret_cast<signed char*>(&eax185) == -1) {
                ebx16 = reinterpret_cast<void**>(0);
                goto addr_6e9516a3_185;
            } else {
                eax186 = eax185 & 7;
                if (*reinterpret_cast<unsigned char*>(&eax186) == 2) {
                    ebx16 = reinterpret_cast<void**>(4);
                    goto addr_6e9516a3_185;
                } else {
                    if (*reinterpret_cast<unsigned char*>(&eax186) <= 2) {
                        if (*reinterpret_cast<unsigned char*>(&eax186)) 
                            goto addr_6e951746_159; else 
                            goto addr_6e951bc5_190;
                    } else {
                        esi5 = esi5;
                        if (*reinterpret_cast<unsigned char*>(&eax186) == 3) {
                            addr_6e951bc5_190:
                            ebx16 = reinterpret_cast<void**>(8);
                            goto addr_6e9516a3_185;
                        } else {
                            ebx16 = reinterpret_cast<void**>(16);
                            if (*reinterpret_cast<unsigned char*>(&eax186) != 4) 
                                goto addr_6e951746_159; else 
                                goto addr_6e9516a3_185;
                        }
                    }
                }
            }
        }
        addr_6e95192a_193:
        if (eax183) 
            goto addr_6e95164e_183; else 
            goto addr_6e951932_194;
        addr_6e9516a3_185:
        ebx16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<unsigned char>(edx15));
        esi5 = reinterpret_cast<void**>(0);
        if (v187) {
            ecx17 = reinterpret_cast<void**>(0);
            do {
                ++ebx16;
                edx15 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff))));
                eax188 = (reinterpret_cast<unsigned char>(edx15) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                ecx17 = ecx17 + 7;
                esi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi5) | eax188);
            } while (*reinterpret_cast<signed char*>(&edx15) < reinterpret_cast<signed char>(0));
            esi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi5) + reinterpret_cast<unsigned char>(ebx16));
        }
        edi13 = reinterpret_cast<void**>(static_cast<uint32_t>(v173));
        eax189 = edi13;
        if (*reinterpret_cast<signed char*>(&eax189) == -1) 
            goto addr_6e951889_199;
        eax190 = reinterpret_cast<unsigned char>(eax189) & 0x70;
        esp6->f20 = *reinterpret_cast<void***>(&eax190);
        if (*reinterpret_cast<void***>(&eax190) == 32) {
            esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 84);
        } else {
            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(&eax190)) <= 32) {
                if (!*reinterpret_cast<void***>(&eax190)) 
                    goto addr_6e951a0e_204;
                if (!reinterpret_cast<int1_t>(*reinterpret_cast<void***>(&eax190) == 16)) 
                    goto addr_6e951746_159; else 
                    goto addr_6e951a0e_204;
            } else {
                eax191 = reinterpret_cast<unsigned char>(esp6->f20);
                if (*reinterpret_cast<signed char*>(&eax191) == 64) {
                    esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 92);
                } else {
                    if (*reinterpret_cast<signed char*>(&eax191) == 80) {
                        addr_6e951a0e_204:
                        esp6->f24 = reinterpret_cast<void**>(0);
                    } else {
                        if (*reinterpret_cast<signed char*>(&eax191) != 48) 
                            goto addr_6e951746_159;
                        esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 88);
                    }
                }
            }
        }
        eax192 = edi13;
        if (*reinterpret_cast<signed char*>(&eax192) == 80) 
            goto addr_6e951c00_212;
        eax193 = reinterpret_cast<unsigned char>(edi13) & 15;
        if (*reinterpret_cast<unsigned char*>(&eax193) > 12) 
            goto addr_6e951746_159;
        eax12 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax193)));
        switch (eax12) {
            addr_6e951746_159:
        case 5:
        case 6:
        case 7:
        case 8:
            esp194 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp194->f0 = reinterpret_cast<void**>(0x6e95174b);
            fun_6e955970(ecx17, esp194->f4, esp194->f8, 0, esp194->f16, esp194->f20, esp194->f24, esp194->f28, esp194->f32);
            esp6 = reinterpret_cast<struct s50*>(&esp194->f4);
            esi5 = esi5;
            continue;
        case 0x13a:
            goto 0x6e954590;
        case 0x133:
            goto 0x6e9545f6;
        case 0x131:
        case 0x134:
        case 0x13c:
            goto 0x6e954550;
        case 0x12d:
            goto 0x6e9533b0;
        case 0x129:
        case 0x12a:
        case 0x12b:
        case 0x12c:
            goto 0x6e953400;
        case 0x132:
            goto 0x6e9545d0;
        case 0x128:
        case 0x130:
            goto 0x6e9533a0;
        case 0x13e:
            goto 0x6e954c30;
        case 0x126:
            goto 0x6e9533f0;
        case 0x136:
        case 0x137:
        case 0x138:
        case 0x139:
            goto 0x6e954601;
        case 0x124:
        case 0x127:
        case 0x12f:
            goto 0x6e953370;
        case 0x122:
            goto 0x6e952425;
        case 0x121:
            goto 0x6e952480;
        case 0x120:
            goto 0x6e952520;
        case 0x11d:
            goto 0x6e952287;
        case 0x11c:
            goto 0x6e952276;
        case 0xfe:
            goto 0x6e9522ba;
        case 0x116:
            goto 0x6e9521f8;
        case 0x135:
        case 0x13d:
            goto 0x6e954580;
        case 0x119:
            goto 0x6e952243;
        case 0x114:
            goto 0x6e9521e2;
        case 30:
            goto 0x6e951f30;
        case 0x100:
        case 0x108:
            goto 0x6e952115;
        case 0x113:
            goto 0x6e9521d7;
        case 0x10c:
            goto 0x6e952236;
        case 0x10b:
            goto 0x6e95222b;
        case 0x11a:
            goto 0x6e952254;
        case 0x10a:
            goto 0x6e95221f;
        case 0x109:
            goto 0x6e952214;
        case 18:
            goto 0x6e951d60;
        case 0x106:
            goto 0x6e9522ae;
        case 0:
        case 3:
        case 11:
            goto 0x6e95185d;
        case 0x105:
            goto 0x6e952298;
        case 0x11b:
            goto 0x6e952265;
        case 0xfd:
            goto 0x6e9522c6;
        case 29:
            goto 0x6e951f46;
        case 0x115:
            goto 0x6e9521ed;
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 43:
        case 44:
        case 46:
        case 47:
        case 48:
        case 49:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
            goto 0x6e952045;
        case 57:
            goto 0x6e952010;
        case 0x123:
            goto 0x6e9524d6;
        case 2:
            goto 0x6e951b5d;
        case 50:
            goto 0x6e952020;
        case 14:
        case 15:
        case 17:
        case 34:
        case 0x9b:
        case 0x9d:
        case 0x9f:
        case 0xa1:
        case 0xa2:
        case 0xa3:
        case 0xa4:
        case 0xa5:
        case 0xa6:
        case 0xa7:
        case 0xa8:
        case 0xa9:
        case 0xaa:
        case 0xab:
        case 0xac:
        case 0xad:
        case 0xae:
        case 0xaf:
        case 0xb0:
        case 0xb1:
        case 0xb2:
        case 0xb3:
        case 0xb4:
        case 0xb5:
        case 0xb6:
        case 0xb7:
        case 0xb8:
        case 0xb9:
        case 0xba:
        case 0xbb:
        case 0xbc:
        case 0xbd:
        case 0xbe:
        case 0xbf:
        case 0xc0:
        case 0xc1:
        case 0xc2:
        case 0xc3:
        case 0xc4:
        case 0xc5:
        case 0xc6:
        case 0xc7:
        case 0xc8:
        case 0xc9:
        case 0xca:
        case 0xcb:
        case 0xcc:
        case 0xcd:
        case 0xce:
        case 0xcf:
        case 0xd0:
        case 0xd1:
        case 0xd2:
        case 0xd3:
        case 0xd4:
        case 0xd5:
        case 0xd6:
        case 0xd7:
        case 0xd8:
        case 0xd9:
        case 0xda:
        case 0xdb:
        case 0xdc:
        case 0xdd:
        case 0xde:
        case 0xdf:
        case 0xe0:
        case 0xe1:
        case 0xe2:
        case 0xe3:
        case 0xe4:
        case 0xe5:
        case 0xe6:
        case 0xe7:
        case 0xe8:
        case 0xe9:
        case 0xea:
        case 0xeb:
        case 0xec:
        case 0xed:
        case 0xee:
        case 0xef:
        case 0xf0:
        case 0xf1:
        case 0xf2:
        case 0xf3:
        case 0xf4:
        case 0xf5:
        case 0xf6:
        case 0xf7:
        case 0xf8:
        case 0xf9:
        case 0xfa:
        case 0x101:
        case 0x102:
        case 0x103:
        case 0x104:
        case 0x10e:
        case 0x10f:
        case 0x112:
        case 0x117:
            goto 0x6e951d20;
        case 0x125:
            goto 0x6e9533c3;
        case 33:
            goto 0x6e952070;
        case 1:
            goto 0x6e951b6a;
        case 0xfb:
            goto 0x6e951db0;
        case 28:
            goto 0x6e951f58;
        case 24:
        case 25:
            goto 0x6e951ce0;
        case 0x111:
            goto 0x6e9521cd;
        case 20:
            goto 0x6e951d40;
        case 26:
            goto 0x6e951f86;
        case 21:
            goto 0x6e951d30;
        case 31:
            goto 0x6e951f06;
        case 0x10d:
            goto 0x6e9521b6;
        case 9:
            goto 0x6e951b45;
        case 10:
            goto 0x6e951ba6;
        case 27:
            goto 0x6e951f70;
        case 0x9a:
            goto 0x6e951e24;
        case 19:
            goto 0x6e951d50;
        case 0xfc:
        case 0xff:
        case 0x107:
            goto 0x6e9520c0;
        case 0x11e:
            goto 0x6e952442;
        case 16:
        case 35:
        case 41:
        case 42:
        case 45:
        case 0x9e:
            goto 0x6e951d70;
        case 0x13b:
            goto 0x6e954587;
        case 0x7a:
        case 0x7b:
        case 0x7c:
        case 0x7d:
        case 0x7e:
        case 0x7f:
        case 0x80:
        case 0x81:
        case 0x82:
        case 0x83:
        case 0x84:
        case 0x85:
        case 0x86:
        case 0x87:
        case 0x88:
        case 0x89:
        case 0x8a:
        case 0x8b:
        case 0x8c:
        case 0x8d:
        case 0x8e:
        case 0x8f:
        case 0x90:
        case 0x91:
        case 0x92:
        case 0x93:
        case 0x94:
        case 0x95:
        case 0x96:
        case 0x97:
        case 0x98:
        case 0x99:
            goto 0x6e951e80;
        case 13:
        case 22:
        case 23:
            goto 0x6e951cb0;
        case 4:
        case 12:
            goto 0x6e951b39;
        case 0x110:
            goto 0x6e9521c2;
        case 0x9c:
            goto 0x6e951fb0;
        case 0x118:
            goto 0x6e952203;
        case 0xa0:
            goto 0x6e951d25;
        case 90:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 97:
        case 98:
        case 99:
        case 100:
        case 0x65:
        case 0x66:
        case 0x67:
        case 0x68:
        case 0x69:
        case 0x6a:
        case 0x6b:
        case 0x6c:
        case 0x6d:
        case 0x6e:
        case 0x6f:
        case 0x70:
        case 0x71:
        case 0x72:
        case 0x73:
        case 0x74:
        case 0x75:
        case 0x76:
        case 0x77:
        case 0x78:
        case 0x79:
            goto 0x6e951cf0;
        case 32:
            goto 0x6e951ee0;
        case 0x12e:
            goto 0x6e9533a7;
        case 0x11f:
            goto 0x6e952541;
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
            goto 0x6e951ed0;
        }
        addr_6e951926_155:
        eax183 = esp6->f32;
        goto addr_6e95192a_193;
    }
    ecx195 = *reinterpret_cast<void***>(ebx16);
    addr_6e951864_216:
    eax196 = reinterpret_cast<struct s31*>(0);
    if (ecx195) {
        if (!reinterpret_cast<int1_t>(esp6->f20 == 16)) {
            ebx16 = esp6->f24;
        }
        eax196 = reinterpret_cast<struct s31*>(reinterpret_cast<unsigned char>(ecx195) + reinterpret_cast<unsigned char>(ebx16));
        ebx197 = edi13;
        if (*reinterpret_cast<signed char*>(&ebx197) < 0) {
            eax196 = *reinterpret_cast<struct s31**>(&eax196->f0);
        }
    }
    addr_6e951880_221:
    *reinterpret_cast<struct s31**>(esp6->f16 + 80) = eax196;
    addr_6e951889_199:
    ecx198 = esp6->f16;
    if (!esi5) {
    }
    esp6->f0 = ebp4;
    esp199 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp199->f0 = reinterpret_cast<void**>(0x6e9518a6);
    fun_6e950bb0(ecx198, esp199->f4);
    goto *reinterpret_cast<int32_t*>(&esp199->f12 + 4 + 76 + 4 + 4 + 4 + 4);
    edx200 = ebx16;
    esp6->f36 = esi5;
    ecx201 = 0;
    esp6->f32 = ebx16;
    esi202 = reinterpret_cast<void**>(0);
    do {
        ++edx200;
        ebx203 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx200 + 0xffffffff));
        eax204 = (ebx203 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx201);
        ecx201 = ecx201 + 7;
        esi202 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi202) | eax204);
    } while (*reinterpret_cast<signed char*>(&ebx203) < 0);
    ecx195 = esi202;
    ebx16 = esp6->f32;
    esi5 = esp6->f36;
    goto addr_6e951864_216;
    ecx195 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ebx16))));
    goto addr_6e951864_216;
    ecx195 = *reinterpret_cast<void***>(ebx16);
    goto addr_6e951864_216;
    esp205 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp205->f0 = reinterpret_cast<void**>(0x6e951b50);
    fun_6e950b70(esp205->f4, esp205->f8);
    esp6 = reinterpret_cast<struct s50*>(&esp205->f4);
    ecx195 = esp6->f60;
    goto addr_6e951864_216;
    ecx195 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ebx16))));
    goto addr_6e951864_216;
    do {
        addr_6e951d20_231:
        esp206 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
        esp206->f0 = reinterpret_cast<void**>(0x6e951d25);
        fun_6e955970(ecx17, esp206->f4, esp206->f8, esp206->f12, esp206->f16, esp206->f20, esp206->f24, esp206->f28, esp206->f32);
        esp6 = reinterpret_cast<struct s50*>(&esp206->f4);
        while (1) {
            eax12 = esi5;
            while (1) {
                while (reinterpret_cast<unsigned char>(eax12) < reinterpret_cast<unsigned char>(esp6->f12)) {
                    edx15 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12))));
                    esi5 = eax12 + 1;
                    ecx17 = edx15 + 0xfffffffd;
                    edi13 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx15)));
                    if (*reinterpret_cast<unsigned char*>(&ecx17) > 0xee) 
                        goto addr_6e951d20_231;
                    ecx17 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx17)));
                    switch (ecx17) {
                    case 16:
                        if (!ebp4) 
                            goto addr_6e951d20_231;
                        --ebp4;
                        eax12 = esi5;
                        break;
                    case 19:
                        if (reinterpret_cast<signed char>(ebp4) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_231;
                        eax207 = reinterpret_cast<uint16_t*>(ebp4 + 0xfffffffe);
                        edx208 = ebp4 + 0xffffffff;
                        ebx16 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<uint32_t>(eax207) * 4 + 48);
                        ecx17 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(edx208) * 4 + 48);
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(edx208) * 4 + 48) = ebx16;
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<uint32_t>(eax207) * 4 + 48) = ecx17;
                        eax12 = esi5;
                        break;
                    case 20:
                        if (reinterpret_cast<signed char>(ebp4) <= reinterpret_cast<signed char>(2)) 
                            goto addr_6e951d20_231;
                        ecx17 = ebp4 + 0xffffffff;
                        eax209 = ebp4 + 0xfffffffd;
                        edx210 = reinterpret_cast<uint16_t*>(ebp4 + 0xfffffffe);
                        ebx16 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<uint32_t>(edx210) * 4 + 48);
                        esp6->f20 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ecx17) * 4 + 48);
                        edi211 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(eax209) * 4 + 48);
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ecx17) * 4 + 48) = ebx16;
                        *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<uint32_t>(edx210) * 4 + 48) = edi211;
                        *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(eax209) * 4 + 48) = esp6->f20;
                        eax12 = esi5;
                        break;
                    case 37:
                        if (!ebp4) 
                            goto addr_6e951d20_231;
                        --ebp4;
                        eax12 = eax12 + 3;
                        ebx16 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebp4) * 4 + 48);
                        if (!ebx16) 
                            break;
                        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax12 + 1))));
                        break;
                    case 44:
                        eax12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax12 + 1))) + 3);
                    case 0x12d:
                        goto 0x6e954590;
                    case 0x126:
                        goto 0x6e9545f6;
                    case 0x124:
                    case 0x127:
                    case 0x12f:
                        goto 0x6e954550;
                    case 0x120:
                        goto 0x6e9533b0;
                    case 0x11c:
                    case 0x11d:
                    case 0x11e:
                    case 0x11f:
                        goto 0x6e953400;
                    case 0x125:
                        goto 0x6e9545d0;
                    case 0x11b:
                    case 0x123:
                        goto 0x6e9533a0;
                    case 0x131:
                        goto 0x6e954c30;
                    case 0x119:
                        goto 0x6e9533f0;
                    case 0x129:
                    case 0x12a:
                    case 0x12b:
                    case 0x12c:
                        goto 0x6e954601;
                    case 0x117:
                    case 0x11a:
                    case 0x122:
                        goto 0x6e953370;
                    case 0x116:
                        goto 0x6e9524d6;
                    case 0x115:
                        goto 0x6e952425;
                    case 0x114:
                        goto 0x6e952480;
                    case 0x121:
                        goto 0x6e9533a7;
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 70:
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                        goto 0x6e951ed0;
                    case 0x112:
                        goto 0x6e952541;
                    case 0x128:
                    case 0x130:
                        goto 0x6e954580;
                    case 0x107:
                        goto 0x6e9521e2;
                    case 0x10c:
                        goto 0x6e952243;
                    case 0xf1:
                        goto 0x6e9522ba;
                    case 0x109:
                        goto 0x6e9521f8;
                    case 0x10f:
                        goto 0x6e952276;
                    case 17:
                        goto 0x6e951f30;
                    case 0xf3:
                    case 0xfb:
                        goto 0x6e952115;
                    case 0x106:
                        goto 0x6e9521d7;
                    case 0xff:
                        goto 0x6e952236;
                    case 0xfe:
                        goto 0x6e95222b;
                    case 0x10d:
                        goto 0x6e952254;
                    case 0xfd:
                        goto 0x6e95221f;
                    case 0xfc:
                        goto 0x6e952214;
                    case 5:
                        goto 0x6e951d60;
                    case 0xf9:
                        goto 0x6e9522ae;
                    case 0xf8:
                        goto 0x6e952298;
                    case 0x10e:
                        goto 0x6e952265;
                    case 0xf0:
                        goto 0x6e9522c6;
                    case 0x103:
                        goto 0x6e9521c2;
                    case 0x108:
                        goto 0x6e9521ed;
                    case 0x8f:
                        goto 0x6e951fb0;
                    case 0x110:
                        goto 0x6e952287;
                    case 0x93:
                        goto 0x6e951d25;
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 0x65:
                    case 0x66:
                    case 0x67:
                    case 0x68:
                    case 0x69:
                    case 0x6a:
                    case 0x6b:
                    case 0x6c:
                        goto 0x6e951cf0;
                    case 14:
                        goto 0x6e951f70;
                    case 0x100:
                        goto 0x6e9521b6;
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 30:
                    case 31:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                        goto 0x6e952045;
                    case 0xef:
                    case 0xf2:
                    case 0xfa:
                        goto 0x6e9520c0;
                    case 0x111:
                        goto 0x6e952442;
                    case 3:
                    case 22:
                    case 28:
                    case 29:
                    case 32:
                    case 0x91:
                        goto 0x6e951d70;
                    case 18:
                        goto 0x6e951f06;
                    case 15:
                        goto 0x6e951f58;
                    case 0xee:
                        goto 0x6e951db0;
                    case 6:
                        goto 0x6e951d50;
                    case 0x8d:
                        goto 0x6e951e24;
                    case 11:
                    case 12:
                        goto 0x6e951ce0;
                    case 0x104:
                        goto 0x6e9521cd;
                    case 7:
                        goto 0x6e951d40;
                    case 13:
                        goto 0x6e951f86;
                    case 8:
                        goto 0x6e951d30;
                    case 1:
                    case 2:
                    case 4:
                    case 21:
                    case 0x8e:
                    case 0x90:
                    case 0x92:
                    case 0x94:
                    case 0x95:
                    case 0x96:
                    case 0x97:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9c:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                    case 0xa3:
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                    case 0xa7:
                    case 0xa8:
                    case 0xa9:
                    case 0xaa:
                    case 0xab:
                    case 0xac:
                    case 0xad:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xf4:
                    case 0xf5:
                    case 0xf6:
                    case 0xf7:
                    case 0x101:
                    case 0x102:
                    case 0x105:
                    case 0x10a:
                        goto 0x6e951d20;
                    case 0x118:
                        goto 0x6e9533c3;
                    case 0x10b:
                        goto 0x6e952203;
                    case 0x113:
                        goto 0x6e952520;
                    case 0x12e:
                        goto 0x6e954587;
                    case 0x6d:
                    case 0x6e:
                    case 0x6f:
                    case 0x70:
                    case 0x71:
                    case 0x72:
                    case 0x73:
                    case 0x74:
                    case 0x75:
                    case 0x76:
                    case 0x77:
                    case 0x78:
                    case 0x79:
                    case 0x7a:
                    case 0x7b:
                    case 0x7c:
                    case 0x7d:
                    case 0x7e:
                    case 0x7f:
                    case 0x80:
                    case 0x81:
                    case 0x82:
                    case 0x83:
                    case 0x84:
                    case 0x85:
                    case 0x86:
                    case 0x87:
                    case 0x88:
                    case 0x89:
                    case 0x8a:
                    case 0x8b:
                    case 0x8c:
                        goto 0x6e951e80;
                    case 0:
                    case 9:
                    case 10:
                        goto 0x6e951cb0;
                    }
                }
                goto addr_6e951cca_246;
                edi212 = *reinterpret_cast<void***>(eax12 + 1);
                ebx16 = ebp4;
                eax12 = eax12 + 5;
                addr_6e951cb8_248:
                if (reinterpret_cast<unsigned char>(ebx16) > reinterpret_cast<unsigned char>(63)) 
                    goto addr_6e951d20_231;
                ebp4 = ebx16 + 1;
                *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebx16) * 4 + 48) = edi212;
                continue;
                if (!ebp4) 
                    goto addr_6e951d20_231;
                ebx16 = ebp4 + 0xffffffff;
                edi213 = *reinterpret_cast<void****>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebx16) * 4 + 48);
                if (*reinterpret_cast<unsigned char*>(&edx15) == 31) {
                    edi212 = reinterpret_cast<void**>(-reinterpret_cast<uint32_t>(edi213));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                } else {
                    if (*reinterpret_cast<unsigned char*>(&edx15) <= 31) {
                        if (*reinterpret_cast<unsigned char*>(&edx15) == 6) {
                            edi212 = *edi213;
                            eax12 = esi5;
                            goto addr_6e951cb8_248;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx15) != 25) 
                                goto addr_6e951d20_231;
                            eax12 = esi5;
                            edx214 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi213) >> 31);
                            edi212 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edi213) ^ edx214) - edx214);
                            goto addr_6e951cb8_248;
                        }
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&edx15) == 35) {
                            eax12 = esi5;
                            ebp4 = reinterpret_cast<void**>(0);
                            ecx17 = reinterpret_cast<void**>(0);
                            esi5 = ebx16;
                            do {
                                ++eax12;
                                ebx215 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                                edx216 = (ebx215 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                                ecx17 = ecx17 + 7;
                                ebp4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp4) | edx216);
                            } while (*reinterpret_cast<signed char*>(&ebx215) < 0);
                            ebx16 = esi5;
                            edi212 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi213) + reinterpret_cast<unsigned char>(ebp4));
                            goto addr_6e951cb8_248;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx15) == 0x94) {
                                edx217 = eax12 + 2;
                                eax218 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 1));
                                if (*reinterpret_cast<unsigned char*>(&eax218) == 2) {
                                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*edi213)));
                                    eax12 = edx217;
                                    goto addr_6e951cb8_248;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&eax218) <= 2) {
                                        if (*reinterpret_cast<unsigned char*>(&eax218) != 1) 
                                            goto addr_6e951d20_231;
                                        edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi213)));
                                        eax12 = edx217;
                                        goto addr_6e951cb8_248;
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&eax218) == 4) 
                                            goto addr_6e9521ad_269;
                                        if (*reinterpret_cast<unsigned char*>(&eax218) != 8) 
                                            goto addr_6e951d20_231;
                                        addr_6e9521ad_269:
                                        edi212 = *edi213;
                                        eax12 = edx217;
                                        goto addr_6e951cb8_248;
                                    }
                                }
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx15) != 32) 
                                    goto addr_6e951d20_231;
                                edi212 = reinterpret_cast<void**>(~reinterpret_cast<uint32_t>(edi213));
                                eax12 = esi5;
                                goto addr_6e951cb8_248;
                            }
                        }
                    }
                }
                edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 1))));
                ebx16 = ebp4;
                eax12 = eax12 + 2;
                goto addr_6e951cb8_248;
                edi212 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax12 + 1))));
                ebx16 = ebp4;
                eax12 = eax12 + 2;
                goto addr_6e951cb8_248;
                edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax12 + 1))));
                ebx16 = ebp4;
                eax12 = eax12 + 3;
                goto addr_6e951cb8_248;
                edi212 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax12 + 1))));
                ebx16 = ebp4;
                eax12 = eax12 + 3;
                goto addr_6e951cb8_248;
                edi212 = *reinterpret_cast<void***>(eax12 + 1);
                ebx16 = ebp4;
                eax12 = eax12 + 9;
                goto addr_6e951cb8_248;
                eax12 = esi5;
                edi212 = reinterpret_cast<void**>(0);
                ecx17 = reinterpret_cast<void**>(0);
                esi5 = esi5;
                do {
                    ++eax12;
                    ebx219 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                    edx220 = (ebx219 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                    ecx17 = ecx17 + 7;
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi212) | edx220);
                } while (*reinterpret_cast<signed char*>(&ebx219) < 0);
                ebx16 = ebp4;
                goto addr_6e951cb8_248;
                esp221 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp221->f0 = reinterpret_cast<void**>(0x6e951f7b);
                eax12 = fun_6e950b70(esp221->f4, esp221->f8);
                esp6 = reinterpret_cast<struct s50*>(&esp221->f4);
                ebx16 = ebp4;
                edi212 = esp6->f44;
                goto addr_6e951cb8_248;
                if (!ebp4) 
                    goto addr_6e951d20_231;
                edi212 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebp4) * 4 + 44);
                addr_6e951f64_284:
                ebx16 = ebp4;
                eax12 = esi5;
                goto addr_6e951cb8_248;
                if (reinterpret_cast<signed char>(ebp4) <= reinterpret_cast<signed char>(1)) 
                    goto addr_6e951d20_231;
                edi212 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebp4) * 4 + 40);
                ebx16 = ebp4;
                eax12 = esi5;
                goto addr_6e951cb8_248;
                eax222 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 1))));
                ecx17 = ebp4 + 0xffffffff;
                esp6->f40 = eax222;
                if (reinterpret_cast<signed char>(eax222) >= reinterpret_cast<signed char>(ecx17)) 
                    goto addr_6e951d20_231;
                ecx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) - reinterpret_cast<unsigned char>(eax222));
                ebx16 = ebp4;
                edi212 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ecx17) * 4 + 48);
                eax12 = eax12 + 2;
                goto addr_6e951cb8_248;
                if (reinterpret_cast<signed char>(ebp4) <= reinterpret_cast<signed char>(1)) 
                    goto addr_6e951d20_231;
                edx223 = reinterpret_cast<uint32_t>(edx15 - 26);
                ecx17 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebp4) * 4 + 44);
                ebx16 = ebp4 + 0xfffffffe;
                eax12 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(ebx16) * 4 + 48);
                if (*reinterpret_cast<unsigned char*>(&edx223) > 20) 
                    goto addr_6e951d20_231;
                switch (*reinterpret_cast<unsigned char*>(&edx223)) {
                case 0:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) & reinterpret_cast<unsigned char>(eax12));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 1:
                    __asm__("cdq ");
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax12) / reinterpret_cast<signed char>(ecx17));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 2:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) - reinterpret_cast<unsigned char>(ecx17));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 3:
                    edx224 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) % reinterpret_cast<unsigned char>(ecx17));
                    eax12 = esi5;
                    edi212 = edx224;
                    goto addr_6e951cb8_248;
                case 4:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) * reinterpret_cast<unsigned char>(eax12));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 7:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) | reinterpret_cast<unsigned char>(eax12));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 8:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) + reinterpret_cast<unsigned char>(eax12));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 10:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) << *reinterpret_cast<unsigned char*>(&ecx17));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 11:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax12) >> *reinterpret_cast<unsigned char*>(&ecx17));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 12:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax12) >> *reinterpret_cast<unsigned char*>(&ecx17));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 13:
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) ^ reinterpret_cast<unsigned char>(eax12));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 15:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax12 == ecx17))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 16:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax12) >= reinterpret_cast<signed char>(ecx17)))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 17:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax12) > reinterpret_cast<signed char>(ecx17)))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 18:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax12) <= reinterpret_cast<signed char>(ecx17)))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 19:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax12) < reinterpret_cast<signed char>(ecx17)))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 20:
                    edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax12 != ecx17))));
                    eax12 = esi5;
                    goto addr_6e951cb8_248;
                case 53:
                    goto 0x6e954c30;
                case 49:
                    goto 0x6e954590;
                case 44:
                case 52:
                    goto 0x6e954580;
                case 41:
                    goto 0x6e9545d0;
                case 40:
                case 43:
                case 51:
                    goto 0x6e954550;
                case 28:
                    goto 0x6e9533c3;
                case 42:
                    goto 0x6e9545f6;
                case 26:
                    goto 0x6e9524d6;
                case 27:
                case 30:
                case 38:
                    goto 0x6e953370;
                case 25:
                    goto 0x6e952425;
                case 45:
                case 46:
                case 47:
                case 48:
                    goto 0x6e954601;
                case 21:
                    goto 0x6e952442;
                case 24:
                    goto 0x6e952480;
                case 32:
                case 33:
                case 34:
                case 35:
                    goto 0x6e953400;
                case 37:
                    goto 0x6e9533a7;
                case 29:
                    goto 0x6e9533f0;
                case 5:
                case 6:
                case 9:
                case 14:
                    goto 0x6e951d20;
                case 36:
                    goto 0x6e9533b0;
                case 31:
                case 39:
                    goto 0x6e9533a0;
                case 23:
                    goto 0x6e952520;
                case 50:
                    goto 0x6e954587;
                case 22:
                    goto 0x6e952541;
                }
                edi212 = edi13 - 48;
                ebx16 = ebp4;
                eax12 = esi5;
                goto addr_6e951cb8_248;
                eax225 = reinterpret_cast<struct s26*>(edi13 + 0xffffffb0);
                if (reinterpret_cast<int32_t>(eax225) > reinterpret_cast<int32_t>(17)) 
                    goto addr_6e951d20_231;
                ebx16 = esp6->f16;
                edi212 = *reinterpret_cast<void***>(ebx16 + reinterpret_cast<uint32_t>(eax225) * 4);
                if (!(*reinterpret_cast<unsigned char*>(ebx16 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<uint32_t>(eax225) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax225) + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_231;
                    edi212 = *reinterpret_cast<void***>(edi212);
                    goto addr_6e951f64_284;
                }
                edi226 = reinterpret_cast<struct s27*>(edi13 - 0x70);
                esp227 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp227->f0 = reinterpret_cast<void**>(0x6e951e8e);
                eax12 = fun_6e950b70(esp227->f4, esp227->f8);
                esp6 = reinterpret_cast<struct s50*>(&esp227->f4);
                if (reinterpret_cast<int32_t>(edi226) > reinterpret_cast<int32_t>(17)) 
                    goto addr_6e951d20_231;
                esi5 = esp6->f16;
                ecx17 = *reinterpret_cast<void***>(esi5 + reinterpret_cast<uint32_t>(edi226) * 4);
                if (!(*reinterpret_cast<unsigned char*>(esi5 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi5) + reinterpret_cast<uint32_t>(edi226) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi226) + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_231;
                    ecx17 = *reinterpret_cast<void***>(ecx17);
                }
                ebx16 = ebp4;
                edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp6->f40) + reinterpret_cast<unsigned char>(ecx17));
                goto addr_6e951cb8_248;
                eax12 = esi5;
                ecx17 = reinterpret_cast<void**>(0);
                esi5 = reinterpret_cast<void**>(0);
                do {
                    ++eax12;
                    ebx16 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff))));
                    edx228 = (reinterpret_cast<unsigned char>(ebx16) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                    ecx17 = ecx17 + 7;
                    esi5 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi5) | edx228);
                } while (*reinterpret_cast<signed char*>(&ebx16) < reinterpret_cast<signed char>(0));
                if (reinterpret_cast<signed char>(esi5) > reinterpret_cast<signed char>(17)) 
                    goto addr_6e951d20_231;
                ebx16 = esp6->f16;
                edi212 = *reinterpret_cast<void***>(ebx16 + reinterpret_cast<unsigned char>(esi5) * 4);
                if (!(*reinterpret_cast<unsigned char*>(ebx16 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx16) + reinterpret_cast<unsigned char>(esi5) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi5 + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_231;
                } else {
                    addr_6e951e76_324:
                    ebx16 = ebp4;
                    goto addr_6e951cb8_248;
                }
                addr_6e951e74_325:
                edi212 = *reinterpret_cast<void***>(edi212);
                goto addr_6e951e76_324;
                ebx16 = reinterpret_cast<void**>(0);
                ecx17 = reinterpret_cast<void**>(0);
                do {
                    ++esi5;
                    edx229 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi5 + 0xffffffff));
                    eax230 = (edx229 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                    ecx17 = ecx17 + 7;
                    ebx16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) | eax230);
                } while (*reinterpret_cast<signed char*>(&edx229) < 0);
                esp231 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp231->f0 = reinterpret_cast<void**>(0x6e951fd6);
                eax12 = fun_6e950b70(esp231->f4, esp231->f8);
                esp6 = reinterpret_cast<struct s50*>(&esp231->f4);
                if (reinterpret_cast<signed char>(ebx16) > reinterpret_cast<signed char>(17)) 
                    goto addr_6e951d20_231;
                esi5 = esp6->f16;
                edi232 = *reinterpret_cast<void***>(esi5 + reinterpret_cast<unsigned char>(ebx16) * 4);
                if (!(*reinterpret_cast<unsigned char*>(esi5 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi5) + reinterpret_cast<unsigned char>(ebx16) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx16 + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_231;
                    edi232 = *reinterpret_cast<void***>(edi232);
                }
                edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi232) + reinterpret_cast<unsigned char>(esp6->f40));
                ebx16 = ebp4;
                goto addr_6e951cb8_248;
                esi5 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 1))));
                ebx16 = esi5;
                if (*reinterpret_cast<unsigned char*>(&ebx16) == 0xff) 
                    goto addr_6e951d20_231;
                ebx16 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx16) & 0x70);
                if (*reinterpret_cast<unsigned char*>(&ebx16) == 32) {
                    esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 84);
                } else {
                    if (*reinterpret_cast<unsigned char*>(&ebx16) <= 32) {
                        if (!*reinterpret_cast<unsigned char*>(&ebx16)) 
                            goto addr_6e95214b_338;
                        if (*reinterpret_cast<unsigned char*>(&ebx16) != 16) 
                            goto addr_6e951d20_231; else 
                            goto addr_6e95214b_338;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ebx16) == 64) {
                            esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 92);
                        } else {
                            esi5 = esi5;
                            if (*reinterpret_cast<unsigned char*>(&ebx16) == 80) {
                                addr_6e95214b_338:
                                esp6->f24 = reinterpret_cast<void**>(0);
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ebx16) != 48) 
                                    goto addr_6e951d20_231;
                                esp6->f24 = *reinterpret_cast<void***>(esp6->f16 + 88);
                            }
                        }
                    }
                }
                edx233 = esi5;
                edi13 = eax12 + 2;
                esp6->f20 = edi13;
                if (*reinterpret_cast<signed char*>(&edx233) == 80) {
                    ebx16 = ebp4;
                    eax234 = reinterpret_cast<struct s62*>(reinterpret_cast<uint32_t>(eax12 + 5) & 0xfffffffc);
                    edi212 = eax234->f0;
                    eax12 = reinterpret_cast<void**>(&eax234->f4);
                    goto addr_6e951cb8_248;
                } else {
                    edx235 = reinterpret_cast<unsigned char>(esi5) & 15;
                    if (*reinterpret_cast<unsigned char*>(&edx235) > 12) 
                        goto addr_6e951d20_231;
                    goto *reinterpret_cast<int32_t*>(*reinterpret_cast<unsigned char*>(&edx235) * 4 + 0x6e957910);
                }
                edi212 = *reinterpret_cast<void***>(eax12 + 2);
                eax12 = eax12 + 6;
                addr_6e9520c6_350:
                if (!edi212) 
                    goto addr_6e951e76_324;
                edx236 = esp6->f24;
                ebx237 = esi5;
                if (*reinterpret_cast<unsigned char*>(&ebx16) == 16) {
                    edx236 = esp6->f20;
                }
                edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi212) + reinterpret_cast<unsigned char>(edx236));
                if (*reinterpret_cast<signed char*>(&ebx237) < 0) 
                    goto addr_6e951e74_325;
                ebx16 = ebp4;
                goto addr_6e951cb8_248;
                eax12 = esp6->f20;
                edi212 = reinterpret_cast<void**>(0);
                ecx17 = reinterpret_cast<void**>(0);
                esp6->f28 = ebp4;
                ebp238 = ebx16;
                do {
                    ++eax12;
                    ebx239 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax12 + 0xffffffff));
                    edx240 = (ebx239 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx17);
                    ecx17 = ecx17 + 7;
                    edi212 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi212) | edx240);
                } while (*reinterpret_cast<signed char*>(&ebx239) < 0);
                ebx16 = ebp238;
                ebp4 = esp6->f28;
                goto addr_6e9520c6_350;
                edi212 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax12 + 2))));
                eax12 = eax12 + 4;
                goto addr_6e9520c6_350;
                edi212 = *reinterpret_cast<void***>(eax12 + 2);
                eax12 = eax12 + 10;
                goto addr_6e9520c6_350;
                esp241 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                esp241->f0 = reinterpret_cast<void**>(0x6e9522a5);
                eax12 = fun_6e950b70(esp241->f4, esp241->f8);
                esp6 = reinterpret_cast<struct s50*>(&esp241->f4);
                edi212 = esp6->f44;
                goto addr_6e9520c6_350;
                edi212 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax12 + 2))));
                eax12 = eax12 + 4;
                goto addr_6e9520c6_350;
            }
        }
        addr_6e951cca_246:
    } while (!ebp4);
    goto addr_6e951cce_362;
    edx242 = *reinterpret_cast<void***>(ecx17);
    addr_6e953375_364:
    if (edx242) {
        eax243 = reinterpret_cast<unsigned char>(esi5) & 0x70;
        eax244 = esi5;
        if (*reinterpret_cast<signed char*>(&eax243) != 16) {
            edi13 = esp6->f12;
        }
        edx242 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx242) + reinterpret_cast<unsigned char>(edi13));
        if (*reinterpret_cast<signed char*>(&eax244) < 0) {
            edx242 = *reinterpret_cast<void***>(edx242);
        }
    }
    *esp6->f64 = edx242;
    goto *reinterpret_cast<int32_t*>(&esp6->f44 + 4 + 4 + 4 + 4);
    ebx245 = ecx17;
    ebp246 = reinterpret_cast<void**>(0);
    ecx247 = 0;
    esi5 = esi5;
    do {
        ++ebx245;
        edx248 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx245 + 0xffffffff));
        eax249 = (edx248 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx247);
        ecx247 = ecx247 + 7;
        ebp246 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp246) | eax249);
    } while (*reinterpret_cast<signed char*>(&edx248) < 0);
    edx242 = ebp246;
    goto addr_6e953375_364;
    edx242 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx17))));
    goto addr_6e953375_364;
    edx242 = *reinterpret_cast<void***>(ecx17);
    goto addr_6e953375_364;
    esp250 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp250->f0 = reinterpret_cast<void**>(0x6e953405);
    fun_6e955970(ecx17, esp250->f4, esp250->f8, esp250->f12, esp250->f16, esp250->f20, esp250->f24, esp250->f28, esp250->f32);
    esp251 = reinterpret_cast<struct s50*>(&esp250->f4);
    *esp251->f64 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx17 + 3) & 0xfffffffc);
    goto *reinterpret_cast<int32_t*>(&esp251->f44 + 4 + 4 + 4 + 4);
    esp252 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp252->f0 = reinterpret_cast<void**>(0x6e9533bb);
    fun_6e953120(esp252->f4);
    esp6 = reinterpret_cast<struct s50*>(&esp252->f4);
    edx242 = esp6->f28;
    goto addr_6e953375_364;
    edx242 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx17))));
    goto addr_6e953375_364;
    edx253 = *reinterpret_cast<void***>(ecx17);
    addr_6e954555_380:
    if (edx253) {
        ecx254 = reinterpret_cast<unsigned char>(eax12) & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx254) != 16) {
            edi13 = esp6->f12;
        }
        edx253 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx253) + reinterpret_cast<unsigned char>(edi13));
        if (*reinterpret_cast<signed char*>(&eax12) < 0) {
            edx253 = *reinterpret_cast<void***>(edx253);
        }
    }
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp6->f48)) = edx253;
    goto *reinterpret_cast<int32_t*>(&esp6->f28 + 4 + 4 + 4 + 4);
    ebx255 = ecx17;
    edx253 = reinterpret_cast<void**>(0);
    ecx256 = 0;
    ebp257 = eax12;
    do {
        ++ebx255;
        eax258 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx255 + 0xffffffff));
        esi259 = (eax258 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx256);
        ecx256 = ecx256 + 7;
        edx253 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx253) | esi259);
    } while (*reinterpret_cast<signed char*>(&eax258) < 0);
    eax12 = ebp257;
    goto addr_6e954555_380;
    edx253 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx17))));
    goto addr_6e954555_380;
    edx253 = *reinterpret_cast<void***>(ecx17);
    goto addr_6e954555_380;
    esp260 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp260->f0 = reinterpret_cast<void**>(0x6e954606);
    fun_6e955970(ecx17, esp260->f4, esp260->f8, esp260->f12, esp260->f16, esp260->f20, esp260->f24, esp260->f28, esp260->f32);
    esp261 = reinterpret_cast<struct s50*>(&esp260->f4);
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(&esp261->f48)) = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx17 + 3) & 0xfffffffc);
    goto *reinterpret_cast<int32_t*>(&esp261->f28 + 4 + 4 + 4 + 4);
    ebx255 = ecx17;
    edx253 = reinterpret_cast<void**>(0);
    ecx262 = 0;
    ebp263 = eax12;
    do {
        ++ebx255;
        eax264 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx255 + 0xffffffff));
        esi265 = (eax264 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx262);
        ecx262 = ecx262 + 7;
        edx253 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx253) | esi265);
    } while (*reinterpret_cast<signed char*>(&eax264) < 0);
    eax12 = ebp263;
    if (ecx262 <= 31 && eax264 & 64) {
        edx253 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx253) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx262));
        goto addr_6e954555_380;
    }
    edx253 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx17))));
    goto addr_6e954555_380;
    esp266 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
    esp266->f0 = ebx16;
    esp267 = reinterpret_cast<struct s63*>(reinterpret_cast<uint32_t>(esp266) - 24);
    zf268 = g6e956014 == 2;
    eax269 = esp267->f36;
    if (!zf268) {
        g6e956014 = 2;
    }
    if (eax269 == 2) {
        ebx270 = reinterpret_cast<int32_t*>(0x6e960028);
        if (!1) {
            do {
                eax271 = *ebx270;
                if (eax271) {
                    esp272 = reinterpret_cast<struct s64*>(reinterpret_cast<uint32_t>(esp267) - 4);
                    esp272->f0 = 0x6e954c78;
                    eax271(0x6e9519aa);
                    esp267 = reinterpret_cast<struct s63*>(&esp272->f4);
                }
                ++ebx270;
            } while (!reinterpret_cast<int1_t>(ebx270 == 0x6e960028));
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp267) + 24 + 4);
        }
    } else {
        if (eax269 == 1) {
            eax273 = esp267->f40;
            esp267->f4 = 1;
            esp267->f8 = eax273;
            esp267->f0 = esp267->f32;
            esp274 = reinterpret_cast<struct s64*>(reinterpret_cast<uint32_t>(esp267) - 4);
            esp274->f0 = 0x6e954cac;
            fun_6e955550(esp274->f4, 1, esp274->f12);
            esp267 = reinterpret_cast<struct s63*>(&esp274->f4);
        }
    }
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp267) + 24 + 4);
    addr_6e951cce_362:
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + 0x13c + 4 + 4 + 4 + 4);
    addr_6e951932_194:
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + 76 + 4 + 4 + 4 + 4);
    addr_6e951c00_212:
    eax196 = *reinterpret_cast<struct s31**>(reinterpret_cast<uint32_t>(ebx16 + 3) & 0xfffffffc);
    goto addr_6e951880_221;
    while (1) {
        addr_6e952519_411:
        while (1) {
            addr_6e952420_412:
            esp275 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
            esp275->f0 = reinterpret_cast<void**>(0x6e952425);
            fun_6e955970(ecx17, esp275->f4, esp275->f8, esp275->f12, esp275->f16, esp275->f20, esp275->f24, esp275->f28, esp275->f32);
            esp6 = reinterpret_cast<struct s50*>(&esp275->f4);
            while (1) {
                eax276 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp6->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)));
                if (*reinterpret_cast<unsigned char*>(esi5 + 0x6e95d028) > 4) 
                    break;
                while (1) {
                    *reinterpret_cast<void***>(esp6->f16) = reinterpret_cast<void**>(1);
                    while (1) {
                        edi13 = esp6->f12;
                        *reinterpret_cast<void***>(edi13) = eax276;
                        while (1) {
                            ++esi5;
                            ebx16 = ebx16 + 8;
                            esp6->f16 = esp6->f16 + 1;
                            esp6->f12 = esp6->f12 + 4;
                            if (reinterpret_cast<int1_t>(esi5 == 18)) 
                                goto addr_6e952457_417;
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16)) > reinterpret_cast<unsigned char>(5)) 
                                continue;
                            eax12 = *reinterpret_cast<void***>(ebx16);
                            switch (eax12) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        eax276 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esp6->f24) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)));
                        if (!(*reinterpret_cast<unsigned char*>(esp6->f20 + 99) & 64)) 
                            continue;
                        addr_6e9524ca_422:
                        *reinterpret_cast<void***>(esp6->f16) = reinterpret_cast<void**>(0);
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)) + 0x9c)) 
                            goto addr_6e952560_424;
                        eax276 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)) * 4 + 48);
                        if (!(*reinterpret_cast<unsigned char*>(esp6->f20 + 99) & 64)) 
                            continue;
                        goto addr_6e9524ca_422;
                        eax277 = *reinterpret_cast<void***>(ebx16 + 0xfffffffc);
                        edi278 = ebx16;
                        esi5 = esi5;
                        do {
                            ++eax277;
                            ebx279 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax277 + 0xffffffff));
                        } while (*reinterpret_cast<signed char*>(&ebx279) < 0);
                        ebx16 = edi278;
                        ecx17 = reinterpret_cast<void**>(&esp6->f48);
                        esp6->f0 = esp6->f24;
                        esp280 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                        esp280->f0 = reinterpret_cast<void**>(0x6e9524bc);
                        eax276 = fun_6e951c60(ecx17, esp280->f4);
                        esp6 = reinterpret_cast<struct s50*>(&esp280->f12 + 4);
                        if (*reinterpret_cast<unsigned char*>(esp6->f20 + 99) & 64) 
                            goto addr_6e9524ca_422;
                    }
                    eax281 = *reinterpret_cast<void***>(ebx16 + 0xfffffffc);
                    edi282 = ebx16;
                    do {
                        ++eax281;
                        ebx283 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax281 + 0xffffffff));
                    } while (*reinterpret_cast<signed char*>(&ebx283) < 0);
                    ebx16 = edi282;
                    ecx17 = reinterpret_cast<void**>(&esp6->f48);
                    esp6->f0 = esp6->f24;
                    esp284 = reinterpret_cast<struct s53*>(reinterpret_cast<uint32_t>(esp6) - 4);
                    esp284->f0 = reinterpret_cast<void**>(0x6e95250c);
                    eax276 = fun_6e951c60(ecx17, esp284->f4);
                    esp6 = reinterpret_cast<struct s50*>(&esp284->f12 + 4);
                    addr_6e95250c_433:
                    if (*reinterpret_cast<unsigned char*>(esi5 + 0x6e95d028) <= 4) 
                        continue; else 
                        goto addr_6e952519_411;
                    addr_6e952560_424:
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e952420_412;
                    edx285 = *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc) + 0x6e95d028);
                    eax276 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esp6) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xfffffffc)) * 4 + 48);
                    if (!(esp6->f147 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx285) != 4) 
                            goto addr_6e952420_412;
                        eax276 = *reinterpret_cast<void***>(eax276);
                        goto addr_6e95250c_433;
                    }
                }
            }
        }
    }
    addr_6e952457_417:
    if (*reinterpret_cast<signed char*>(esp6->f28 + 0xbb)) {
        *reinterpret_cast<uint32_t*>(esp6->f20 + 96) = *reinterpret_cast<uint32_t*>(esp6->f20 + 96) | 0x80000000;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + 0xbc + 4 + 4 + 4 + 4);
    } else {
        *reinterpret_cast<uint32_t*>(esp6->f20 + 96) = *reinterpret_cast<uint32_t*>(esp6->f20 + 96) & 0x7fffffff;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp6) + 0xbc + 4 + 4 + 4 + 4);
    }
}

struct s65 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s66 {
    signed char[1] pad1;
    void** f1;
};

struct s67 {
    signed char[4] pad4;
    void** f4;
};

struct s68 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s69 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s70 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s71 {
    signed char[187] pad187;
    signed char f187;
};

struct s72 {
    signed char[96] pad96;
    uint32_t f96;
};

void** fun_6e951c60(void** ecx, void** a2) {
    void*** esp3;
    void** v4;
    void** edx5;
    void** v6;
    uint32_t eax7;
    uint32_t edx8;
    void** eax9;
    void** ebp10;
    void** edx11;
    void** ecx12;
    uint32_t eax13;
    void** esi14;
    void** eax15;
    void** edi16;
    void** v17;
    void*** v18;
    int32_t v19;
    void** ebx20;
    void** ebp21;
    int32_t ecx22;
    uint32_t edx23;
    uint32_t eax24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    int32_t* v33;
    int32_t v34;
    void** v35;
    void** v36;
    void** edx37;
    uint32_t ecx38;
    void** eax39;
    void** v40;
    void*** v41;
    int32_t v42;
    void** ebx43;
    int32_t ecx44;
    void** ebp45;
    uint32_t eax46;
    uint32_t esi47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    int32_t* v56;
    int32_t v57;
    uint32_t ecx58;
    void** ebp59;
    uint32_t eax60;
    uint32_t esi61;
    int32_t v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void* edx69;
    void** edi70;
    void** ebx71;
    void*** edi72;
    uint32_t edx73;
    uint32_t ebx74;
    uint32_t edx75;
    void** edx76;
    uint32_t eax77;
    uint32_t ebx78;
    uint32_t edx79;
    void** v80;
    void** v81;
    void** v82;
    void** eax83;
    void** v84;
    uint16_t* eax85;
    void** edx86;
    void** eax87;
    uint16_t* edx88;
    int32_t edi89;
    uint32_t edx90;
    void** edx91;
    struct s26* eax92;
    struct s27* edi93;
    void** v94;
    void** v95;
    uint32_t edx96;
    uint32_t edx97;
    uint32_t eax98;
    void** v99;
    void** v100;
    void** edi101;
    void** edx102;
    struct s65* eax103;
    uint32_t edx104;
    void** ebp105;
    uint32_t ebx106;
    uint32_t edx107;
    void** v108;
    void** v109;
    void** v110;
    void** edx111;
    void** ebx112;
    int1_t zf113;
    int32_t v114;
    int32_t* ebx115;
    int32_t eax116;
    int32_t v117;
    int32_t v118;
    int32_t v119;
    void** v120;
    void** v121;
    void** v122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** eax129;
    void* v130;
    struct s66* v131;
    struct s67* v132;
    void* v133;
    struct s68* v134;
    struct s69* v135;
    void** eax136;
    void** edi137;
    uint32_t ebx138;
    void** v139;
    struct s70* v140;
    void** eax141;
    void** edi142;
    uint32_t ebx143;
    void** v144;
    uint32_t edx145;
    unsigned char v146;
    struct s71* v147;
    struct s72* v148;
    int32_t v149;
    int32_t v150;

    esp3 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x13c);
    v4 = edx5;
    v6 = ecx;
    if (eax7 >= edx8) {
        eax9 = a2;
    } else {
        ebp10 = reinterpret_cast<void**>(1);
        goto addr_6e951c90_4;
    }
    addr_6e951cd2_5:
    return eax9;
    addr_6e951cce_6:
    eax9 = (esp3 + reinterpret_cast<unsigned char>(ebp10) * 4)[44];
    goto addr_6e951cd2_5;
    edx11 = *reinterpret_cast<void***>(ecx12);
    addr_6e953375_8:
    if (edx11) {
        eax13 = reinterpret_cast<unsigned char>(esi14) & 0x70;
        eax15 = esi14;
        if (*reinterpret_cast<signed char*>(&eax13) != 16) {
            edi16 = v17;
        }
        edx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx11) + reinterpret_cast<unsigned char>(edi16));
        if (*reinterpret_cast<signed char*>(&eax15) < 0) {
            edx11 = *reinterpret_cast<void***>(edx11);
        }
    }
    *v18 = edx11;
    goto v19;
    ebx20 = ecx12;
    ebp21 = reinterpret_cast<void**>(0);
    ecx22 = 0;
    esi14 = esi14;
    do {
        ++ebx20;
        edx23 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx20 + 0xffffffff));
        eax24 = (edx23 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx22);
        ecx22 = ecx22 + 7;
        ebp21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp21) | eax24);
    } while (*reinterpret_cast<signed char*>(&edx23) < 0);
    edx11 = ebp21;
    goto addr_6e953375_8;
    edx11 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx12))));
    goto addr_6e953375_8;
    edx11 = *reinterpret_cast<void***>(ecx12);
    goto addr_6e953375_8;
    fun_6e955970(ecx12, v25, v26, v27, v28, v29, v30, v31, v32);
    *v33 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx12 + 3) & 0xfffffffc);
    goto v34;
    fun_6e953120(v35);
    edx11 = v36;
    goto addr_6e953375_8;
    edx11 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx12))));
    goto addr_6e953375_8;
    edx37 = *reinterpret_cast<void***>(ecx12);
    addr_6e954555_24:
    if (edx37) {
        ecx38 = reinterpret_cast<unsigned char>(eax39) & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx38) != 16) {
            edi16 = v40;
        }
        edx37 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx37) + reinterpret_cast<unsigned char>(edi16));
        if (*reinterpret_cast<signed char*>(&eax39) < 0) {
            edx37 = *reinterpret_cast<void***>(edx37);
        }
    }
    *v41 = edx37;
    goto v42;
    ebx43 = ecx12;
    edx37 = reinterpret_cast<void**>(0);
    ecx44 = 0;
    ebp45 = eax39;
    do {
        ++ebx43;
        eax46 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx43 + 0xffffffff));
        esi47 = (eax46 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx44);
        ecx44 = ecx44 + 7;
        edx37 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx37) | esi47);
    } while (*reinterpret_cast<signed char*>(&eax46) < 0);
    eax39 = ebp45;
    goto addr_6e954555_24;
    edx37 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx12))));
    goto addr_6e954555_24;
    edx37 = *reinterpret_cast<void***>(ecx12);
    goto addr_6e954555_24;
    fun_6e955970(ecx12, v48, v49, v50, v51, v52, v53, v54, v55);
    *v56 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx12 + 3) & 0xfffffffc);
    goto v57;
    ebx43 = ecx12;
    edx37 = reinterpret_cast<void**>(0);
    ecx58 = 0;
    ebp59 = eax39;
    do {
        ++ebx43;
        eax60 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx43 + 0xffffffff));
        esi61 = (eax60 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx58);
        ecx58 = ecx58 + 7;
        edx37 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx37) | esi61);
    } while (*reinterpret_cast<signed char*>(&eax60) < 0);
    eax39 = ebp59;
    if (ecx58 <= 31 && eax60 & 64) {
        edx37 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx37) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx58));
        goto addr_6e954555_24;
    }
    edx37 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx12))));
    goto addr_6e954555_24;
    addr_6e954c55_42:
    goto v62;
    do {
        addr_6e951d20_43:
        fun_6e955970(ecx12, v63, v64, v65, v4, v6, v66, v67, v68);
        esp3 = esp3 - 4 + 4;
        while (1) {
            eax39 = esi14;
            while (reinterpret_cast<unsigned char>(eax39) < reinterpret_cast<unsigned char>(v4)) {
                addr_6e951c90_4:
                edx69 = reinterpret_cast<void*>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39))));
                esi14 = eax39 + 1;
                ecx12 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edx69) + 0xfffffffd);
                edi16 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx69)));
                if (*reinterpret_cast<unsigned char*>(&ecx12) > 0xee) 
                    goto addr_6e951d20_43;
                ecx12 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx12)));
                switch (ecx12) {
                case 0:
                case 9:
                case 10:
                    edi70 = *reinterpret_cast<void***>(eax39 + 1);
                    ebx71 = ebp10;
                    eax39 = eax39 + 5;
                    break;
                case 3:
                case 22:
                case 28:
                case 29:
                case 32:
                case 0x91:
                    if (!ebp10) 
                        goto addr_6e951d20_43;
                    ebx71 = ebp10 + 0xffffffff;
                    edi72 = *reinterpret_cast<void****>(esp3 + reinterpret_cast<unsigned char>(ebx71) * 4 + 48);
                    if (*reinterpret_cast<unsigned char*>(&edx69) == 31) {
                        edi70 = reinterpret_cast<void**>(-reinterpret_cast<uint32_t>(edi72));
                        eax39 = esi14;
                        break;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&edx69) <= 31) {
                            if (*reinterpret_cast<unsigned char*>(&edx69) == 6) {
                                edi70 = *edi72;
                                eax39 = esi14;
                                break;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx69) != 25) 
                                    goto addr_6e951d20_43;
                                eax39 = esi14;
                                edx73 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi72) >> 31);
                                edi70 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edi72) ^ edx73) - edx73);
                                break;
                            }
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx69) == 35) {
                                eax39 = esi14;
                                ebp10 = reinterpret_cast<void**>(0);
                                ecx12 = reinterpret_cast<void**>(0);
                                esi14 = ebx71;
                                do {
                                    ++eax39;
                                    ebx74 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 0xffffffff));
                                    edx75 = (ebx74 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                                    ecx12 = ecx12 + 7;
                                    ebp10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp10) | edx75);
                                } while (*reinterpret_cast<signed char*>(&ebx74) < 0);
                                ebx71 = esi14;
                                edi70 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi72) + reinterpret_cast<unsigned char>(ebp10));
                                break;
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx69) == 0x94) {
                                    edx76 = eax39 + 2;
                                    eax77 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 1));
                                    if (*reinterpret_cast<unsigned char*>(&eax77) == 2) {
                                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*edi72)));
                                        eax39 = edx76;
                                        break;
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&eax77) <= 2) {
                                            if (*reinterpret_cast<unsigned char*>(&eax77) != 1) 
                                                goto addr_6e951d20_43;
                                            edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi72)));
                                            eax39 = edx76;
                                            break;
                                        } else {
                                            if (*reinterpret_cast<unsigned char*>(&eax77) == 4) 
                                                goto addr_6e9521ad_67;
                                            if (*reinterpret_cast<unsigned char*>(&eax77) != 8) 
                                                goto addr_6e951d20_43;
                                            addr_6e9521ad_67:
                                            edi70 = *edi72;
                                            eax39 = edx76;
                                            break;
                                        }
                                    }
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&edx69) != 32) 
                                        goto addr_6e951d20_43;
                                    edi70 = reinterpret_cast<void**>(~reinterpret_cast<uint32_t>(edi72));
                                    eax39 = esi14;
                                    break;
                                }
                            }
                        }
                    }
                case 5:
                    edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 1))));
                    ebx71 = ebp10;
                    eax39 = eax39 + 2;
                    break;
                case 6:
                    edi70 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax39 + 1))));
                    ebx71 = ebp10;
                    eax39 = eax39 + 2;
                    break;
                case 7:
                    edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax39 + 1))));
                    ebx71 = ebp10;
                    eax39 = eax39 + 3;
                    break;
                case 8:
                    edi70 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax39 + 1))));
                    ebx71 = ebp10;
                    eax39 = eax39 + 3;
                    break;
                case 11:
                case 12:
                    edi70 = *reinterpret_cast<void***>(eax39 + 1);
                    ebx71 = ebp10;
                    eax39 = eax39 + 9;
                    break;
                case 13:
                    eax39 = esi14;
                    edi70 = reinterpret_cast<void**>(0);
                    ecx12 = reinterpret_cast<void**>(0);
                    esi14 = esi14;
                    do {
                        ++eax39;
                        ebx78 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 0xffffffff));
                        edx79 = (ebx78 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                        ecx12 = ecx12 + 7;
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi70) | edx79);
                    } while (*reinterpret_cast<signed char*>(&ebx78) < 0);
                    ebx71 = ebp10;
                    break;
                case 14:
                    eax39 = fun_6e950b70(v80, v81);
                    esp3 = esp3 - 4 + 4;
                    ebx71 = ebp10;
                    edi70 = v82;
                    break;
                case 15:
                    if (!ebp10) 
                        goto addr_6e951d20_43;
                    edi70 = (esp3 + reinterpret_cast<unsigned char>(ebp10) * 4)[44];
                    goto addr_6e951f64_82;
                case 16:
                    if (!ebp10) 
                        goto addr_6e951d20_43;
                    --ebp10;
                    eax39 = esi14;
                    continue;
                case 17:
                    if (reinterpret_cast<signed char>(ebp10) <= reinterpret_cast<signed char>(1)) 
                        goto addr_6e951d20_43;
                    edi70 = (esp3 + reinterpret_cast<unsigned char>(ebp10) * 4)[40];
                    ebx71 = ebp10;
                    eax39 = esi14;
                    break;
                case 18:
                    eax83 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 1))));
                    ecx12 = ebp10 + 0xffffffff;
                    v84 = eax83;
                    if (reinterpret_cast<signed char>(eax83) >= reinterpret_cast<signed char>(ecx12)) 
                        goto addr_6e951d20_43;
                    ecx12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) - reinterpret_cast<unsigned char>(eax83));
                    ebx71 = ebp10;
                    edi70 = (esp3 + reinterpret_cast<unsigned char>(ecx12) * 4)[48];
                    eax39 = eax39 + 2;
                    break;
                case 19:
                    if (reinterpret_cast<signed char>(ebp10) <= reinterpret_cast<signed char>(1)) 
                        goto addr_6e951d20_43;
                    eax85 = reinterpret_cast<uint16_t*>(ebp10 + 0xfffffffe);
                    edx86 = ebp10 + 0xffffffff;
                    ebx71 = (esp3 + reinterpret_cast<uint32_t>(eax85) * 4)[48];
                    ecx12 = (esp3 + reinterpret_cast<unsigned char>(edx86) * 4)[48];
                    (esp3 + reinterpret_cast<unsigned char>(edx86) * 4)[48] = ebx71;
                    (esp3 + reinterpret_cast<uint32_t>(eax85) * 4)[48] = ecx12;
                    eax39 = esi14;
                    continue;
                case 20:
                    if (reinterpret_cast<signed char>(ebp10) <= reinterpret_cast<signed char>(2)) 
                        goto addr_6e951d20_43;
                    ecx12 = ebp10 + 0xffffffff;
                    eax87 = ebp10 + 0xfffffffd;
                    edx88 = reinterpret_cast<uint16_t*>(ebp10 + 0xfffffffe);
                    ebx71 = (esp3 + reinterpret_cast<uint32_t>(edx88) * 4)[48];
                    v66 = (esp3 + reinterpret_cast<unsigned char>(ecx12) * 4)[48];
                    edi89 = *reinterpret_cast<int32_t*>(esp3 + reinterpret_cast<unsigned char>(eax87) * 4 + 48);
                    (esp3 + reinterpret_cast<unsigned char>(ecx12) * 4)[48] = ebx71;
                    *reinterpret_cast<int32_t*>(esp3 + reinterpret_cast<uint32_t>(edx88) * 4 + 48) = edi89;
                    (esp3 + reinterpret_cast<unsigned char>(eax87) * 4)[48] = v66;
                    eax39 = esi14;
                    continue;
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 30:
                case 31:
                case 33:
                case 34:
                case 35:
                case 36:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                    if (reinterpret_cast<signed char>(ebp10) <= reinterpret_cast<signed char>(1)) 
                        goto addr_6e951d20_43;
                    edx90 = reinterpret_cast<uint32_t>(edx69) - 26;
                    ecx12 = (esp3 + reinterpret_cast<unsigned char>(ebp10) * 4)[44];
                    ebx71 = ebp10 + 0xfffffffe;
                    eax39 = (esp3 + reinterpret_cast<unsigned char>(ebx71) * 4)[48];
                    if (*reinterpret_cast<unsigned char*>(&edx90) > 20) 
                        goto addr_6e951d20_43;
                    switch (*reinterpret_cast<unsigned char*>(&edx90)) {
                    case 0:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) & reinterpret_cast<unsigned char>(eax39));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 1:
                        __asm__("cdq ");
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax39) / reinterpret_cast<signed char>(ecx12));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 2:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) - reinterpret_cast<unsigned char>(ecx12));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 3:
                        edx91 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) % reinterpret_cast<unsigned char>(ecx12));
                        eax39 = esi14;
                        edi70 = edx91;
                        goto addr_6e951cb8_97;
                    case 4:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) * reinterpret_cast<unsigned char>(eax39));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 7:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) | reinterpret_cast<unsigned char>(eax39));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 8:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) + reinterpret_cast<unsigned char>(eax39));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 10:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) << *reinterpret_cast<unsigned char*>(&ecx12));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 11:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) >> *reinterpret_cast<unsigned char*>(&ecx12));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 12:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax39) >> *reinterpret_cast<unsigned char*>(&ecx12));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 13:
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx12) ^ reinterpret_cast<unsigned char>(eax39));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 15:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax39 == ecx12))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 16:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax39) >= reinterpret_cast<signed char>(ecx12)))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 17:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax39) > reinterpret_cast<signed char>(ecx12)))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 18:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax39) <= reinterpret_cast<signed char>(ecx12)))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 19:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax39) < reinterpret_cast<signed char>(ecx12)))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 20:
                        edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax39 != ecx12))));
                        eax39 = esi14;
                        goto addr_6e951cb8_97;
                    case 53:
                        goto 0x6e954c30;
                    case 49:
                        goto 0x6e954590;
                    case 44:
                    case 52:
                        goto 0x6e954580;
                    case 41:
                        goto 0x6e9545d0;
                    case 40:
                    case 43:
                    case 51:
                        goto 0x6e954550;
                    case 28:
                        goto 0x6e9533c3;
                    case 42:
                        goto 0x6e9545f6;
                    case 26:
                        goto 0x6e9524d6;
                    case 27:
                    case 30:
                    case 38:
                        goto 0x6e953370;
                    case 25:
                        goto 0x6e952425;
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                        goto 0x6e954601;
                    case 21:
                        goto 0x6e952442;
                    case 24:
                        goto 0x6e952480;
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                        goto 0x6e953400;
                    case 37:
                        goto 0x6e9533a7;
                    case 29:
                        goto 0x6e9533f0;
                    case 5:
                    case 6:
                    case 9:
                    case 14:
                        goto 0x6e951d20;
                    case 36:
                        goto 0x6e9533b0;
                    case 31:
                    case 39:
                        goto 0x6e9533a0;
                    case 23:
                        goto 0x6e952520;
                    case 50:
                        goto 0x6e954587;
                    case 22:
                        goto 0x6e952541;
                    }
                case 37:
                    if (!ebp10) 
                        goto addr_6e951d20_43;
                    --ebp10;
                    eax39 = eax39 + 3;
                    ebx71 = (esp3 + reinterpret_cast<unsigned char>(ebp10) * 4)[48];
                    if (!ebx71) 
                        continue;
                    eax39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax39 + 1))));
                    continue;
                case 44:
                    eax39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax39) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax39 + 1))) + 3);
                    continue;
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 67:
                case 68:
                case 69:
                case 70:
                case 71:
                case 72:
                case 73:
                case 74:
                case 75:
                case 76:
                    edi70 = edi16 - 48;
                    ebx71 = ebp10;
                    eax39 = esi14;
                    break;
                case 77:
                case 78:
                case 79:
                case 80:
                case 81:
                case 82:
                case 83:
                case 84:
                case 85:
                case 86:
                case 87:
                case 88:
                case 89:
                case 90:
                case 91:
                case 92:
                case 93:
                case 94:
                case 95:
                case 96:
                case 97:
                case 98:
                case 99:
                case 100:
                case 0x65:
                case 0x66:
                case 0x67:
                case 0x68:
                case 0x69:
                case 0x6a:
                case 0x6b:
                case 0x6c:
                    eax92 = reinterpret_cast<struct s26*>(edi16 + 0xffffffb0);
                    if (reinterpret_cast<int32_t>(eax92) > reinterpret_cast<int32_t>(17)) 
                        goto addr_6e951d20_43;
                    ebx71 = v6;
                    edi70 = *reinterpret_cast<void***>(ebx71 + reinterpret_cast<uint32_t>(eax92) * 4);
                    if (!(*reinterpret_cast<unsigned char*>(ebx71 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx71) + reinterpret_cast<uint32_t>(eax92) + 0x6c)) {
                        if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax92) + 0x6e95d028)) != 4) 
                            goto addr_6e951d20_43;
                        edi70 = *reinterpret_cast<void***>(edi70);
                        goto addr_6e951f64_82;
                    }
                case 0x6d:
                case 0x6e:
                case 0x6f:
                case 0x70:
                case 0x71:
                case 0x72:
                case 0x73:
                case 0x74:
                case 0x75:
                case 0x76:
                case 0x77:
                case 0x78:
                case 0x79:
                case 0x7a:
                case 0x7b:
                case 0x7c:
                case 0x7d:
                case 0x7e:
                case 0x7f:
                case 0x80:
                case 0x81:
                case 0x82:
                case 0x83:
                case 0x84:
                case 0x85:
                case 0x86:
                case 0x87:
                case 0x88:
                case 0x89:
                case 0x8a:
                case 0x8b:
                case 0x8c:
                    edi93 = reinterpret_cast<struct s27*>(edi16 - 0x70);
                    eax39 = fun_6e950b70(v94, v95);
                    esp3 = esp3 - 4 + 4;
                    if (reinterpret_cast<int32_t>(edi93) > reinterpret_cast<int32_t>(17)) 
                        goto addr_6e951d20_43;
                    esi14 = v6;
                    ecx12 = *reinterpret_cast<void***>(esi14 + reinterpret_cast<uint32_t>(edi93) * 4);
                    if (!(*reinterpret_cast<unsigned char*>(esi14 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi14) + reinterpret_cast<uint32_t>(edi93) + 0x6c)) {
                        if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi93) + 0x6e95d028)) != 4) 
                            goto addr_6e951d20_43;
                        ecx12 = *reinterpret_cast<void***>(ecx12);
                    }
                    ebx71 = ebp10;
                    edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v84) + reinterpret_cast<unsigned char>(ecx12));
                    break;
                case 0x8d:
                    eax39 = esi14;
                    ecx12 = reinterpret_cast<void**>(0);
                    esi14 = reinterpret_cast<void**>(0);
                    do {
                        ++eax39;
                        ebx71 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 0xffffffff))));
                        edx96 = (reinterpret_cast<unsigned char>(ebx71) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                        ecx12 = ecx12 + 7;
                        esi14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi14) | edx96);
                    } while (*reinterpret_cast<signed char*>(&ebx71) < reinterpret_cast<signed char>(0));
                    if (reinterpret_cast<signed char>(esi14) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e951d20_43;
                    ebx71 = v6;
                    edi70 = *reinterpret_cast<void***>(ebx71 + reinterpret_cast<unsigned char>(esi14) * 4);
                    if (!(*reinterpret_cast<unsigned char*>(ebx71 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx71) + reinterpret_cast<unsigned char>(esi14) + 0x6c)) {
                        if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi14 + 0x6e95d028)) != 4) 
                            goto addr_6e951d20_43; else 
                            goto addr_6e951e74_133;
                    } else {
                        addr_6e951e76_134:
                        ebx71 = ebp10;
                        break;
                    }
                case 0x8f:
                    ebx71 = reinterpret_cast<void**>(0);
                    ecx12 = reinterpret_cast<void**>(0);
                    do {
                        ++esi14;
                        edx97 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi14 + 0xffffffff));
                        eax98 = (edx97 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                        ecx12 = ecx12 + 7;
                        ebx71 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx71) | eax98);
                    } while (*reinterpret_cast<signed char*>(&edx97) < 0);
                    eax39 = fun_6e950b70(v99, v100);
                    esp3 = esp3 - 4 + 4;
                    if (reinterpret_cast<signed char>(ebx71) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e951d20_43;
                    esi14 = v6;
                    edi101 = *reinterpret_cast<void***>(esi14 + reinterpret_cast<unsigned char>(ebx71) * 4);
                    if (!(*reinterpret_cast<unsigned char*>(esi14 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi14) + reinterpret_cast<unsigned char>(ebx71) + 0x6c)) {
                        if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx71 + 0x6e95d028)) != 4) 
                            goto addr_6e951d20_43;
                        edi101 = *reinterpret_cast<void***>(edi101);
                    }
                    edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi101) + reinterpret_cast<unsigned char>(v84));
                    ebx71 = ebp10;
                    break;
                case 0xee:
                    esi14 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 1))));
                    ebx71 = esi14;
                    if (*reinterpret_cast<unsigned char*>(&ebx71) == 0xff) 
                        goto addr_6e951d20_43;
                    ebx71 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx71) & 0x70);
                    if (*reinterpret_cast<unsigned char*>(&ebx71) == 32) {
                        v67 = *reinterpret_cast<void***>(v6 + 84);
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ebx71) <= 32) {
                            if (!*reinterpret_cast<unsigned char*>(&ebx71)) 
                                goto addr_6e95214b_147;
                            if (*reinterpret_cast<unsigned char*>(&ebx71) != 16) 
                                goto addr_6e951d20_43; else 
                                goto addr_6e95214b_147;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&ebx71) == 64) {
                                v67 = *reinterpret_cast<void***>(v6 + 92);
                            } else {
                                esi14 = esi14;
                                if (*reinterpret_cast<unsigned char*>(&ebx71) == 80) {
                                    addr_6e95214b_147:
                                    v67 = reinterpret_cast<void**>(0);
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&ebx71) != 48) 
                                        goto addr_6e951d20_43;
                                    v67 = *reinterpret_cast<void***>(v6 + 88);
                                }
                            }
                        }
                    }
                    edx102 = esi14;
                    edi16 = eax39 + 2;
                    v66 = edi16;
                    if (*reinterpret_cast<signed char*>(&edx102) == 80) {
                        ebx71 = ebp10;
                        eax103 = reinterpret_cast<struct s65*>(reinterpret_cast<uint32_t>(eax39 + 5) & 0xfffffffc);
                        edi70 = eax103->f0;
                        eax39 = reinterpret_cast<void**>(&eax103->f4);
                        break;
                    } else {
                        edx104 = reinterpret_cast<unsigned char>(esi14) & 15;
                        if (*reinterpret_cast<unsigned char*>(&edx104) > 12) 
                            goto addr_6e951d20_43;
                        goto *reinterpret_cast<int32_t*>(*reinterpret_cast<unsigned char*>(&edx104) * 4 + 0x6e957910);
                    }
                case 0xef:
                case 0xf2:
                case 0xfa:
                    edi70 = *reinterpret_cast<void***>(eax39 + 2);
                    eax39 = eax39 + 6;
                    goto addr_6e9520c6_159;
                case 0xf0:
                    eax39 = v66;
                    edi70 = reinterpret_cast<void**>(0);
                    ecx12 = reinterpret_cast<void**>(0);
                    v68 = ebp10;
                    ebp105 = ebx71;
                    do {
                        ++eax39;
                        ebx106 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax39 + 0xffffffff));
                        edx107 = (ebx106 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                        ecx12 = ecx12 + 7;
                        edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi70) | edx107);
                    } while (*reinterpret_cast<signed char*>(&ebx106) < 0);
                    ebx71 = ebp105;
                    ebp10 = v68;
                    goto addr_6e9520c6_159;
                case 0xf1:
                    edi70 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax39 + 2))));
                    eax39 = eax39 + 4;
                    goto addr_6e9520c6_159;
                case 0xf3:
                case 0xfb:
                    edi70 = *reinterpret_cast<void***>(eax39 + 2);
                    eax39 = eax39 + 10;
                    goto addr_6e9520c6_159;
                case 0xf8:
                    eax39 = fun_6e950b70(v108, v109);
                    esp3 = esp3 - 4 + 4;
                    edi70 = v110;
                    goto addr_6e9520c6_159;
                case 0xf9:
                    edi70 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax39 + 2))));
                    eax39 = eax39 + 4;
                    goto addr_6e9520c6_159;
                case 0x12d:
                    goto 0x6e954590;
                case 0x126:
                    goto 0x6e9545f6;
                case 0x124:
                case 0x127:
                case 0x12f:
                    goto 0x6e954550;
                case 0x120:
                    goto 0x6e9533b0;
                case 0x11c:
                case 0x11d:
                case 0x11e:
                case 0x11f:
                    goto 0x6e953400;
                case 0x125:
                    goto 0x6e9545d0;
                case 0x11b:
                case 0x123:
                    goto 0x6e9533a0;
                case 0x131:
                    goto 0x6e954c30;
                case 0x119:
                    goto 0x6e9533f0;
                case 0x129:
                case 0x12a:
                case 0x12b:
                case 0x12c:
                    goto 0x6e954601;
                case 0x117:
                case 0x11a:
                case 0x122:
                    goto 0x6e953370;
                case 0x116:
                    goto 0x6e9524d6;
                case 0x115:
                    goto 0x6e952425;
                case 0x114:
                    goto 0x6e952480;
                case 0x121:
                    goto 0x6e9533a7;
                case 0x112:
                    goto 0x6e952541;
                case 0x128:
                case 0x130:
                    goto 0x6e954580;
                case 0x107:
                    goto 0x6e9521e2;
                case 0x10c:
                    goto 0x6e952243;
                case 0x109:
                    goto 0x6e9521f8;
                case 0x10f:
                    goto 0x6e952276;
                case 0x106:
                    goto 0x6e9521d7;
                case 0xff:
                    goto 0x6e952236;
                case 0xfe:
                    goto 0x6e95222b;
                case 0x10d:
                    goto 0x6e952254;
                case 0xfd:
                    goto 0x6e95221f;
                case 0xfc:
                    goto 0x6e952214;
                case 0x10e:
                    goto 0x6e952265;
                case 0x103:
                    goto 0x6e9521c2;
                case 0x108:
                    goto 0x6e9521ed;
                case 0x110:
                    goto 0x6e952287;
                case 0x93:
                    goto 0x6e951d25;
                case 0x100:
                    goto 0x6e9521b6;
                case 0x111:
                    goto 0x6e952442;
                case 0x104:
                    goto 0x6e9521cd;
                case 1:
                case 2:
                case 4:
                case 21:
                case 0x8e:
                case 0x90:
                case 0x92:
                case 0x94:
                case 0x95:
                case 0x96:
                case 0x97:
                case 0x98:
                case 0x99:
                case 0x9a:
                case 0x9b:
                case 0x9c:
                case 0x9d:
                case 0x9e:
                case 0x9f:
                case 0xa0:
                case 0xa1:
                case 0xa2:
                case 0xa3:
                case 0xa4:
                case 0xa5:
                case 0xa6:
                case 0xa7:
                case 0xa8:
                case 0xa9:
                case 0xaa:
                case 0xab:
                case 0xac:
                case 0xad:
                case 0xae:
                case 0xaf:
                case 0xb0:
                case 0xb1:
                case 0xb2:
                case 0xb3:
                case 0xb4:
                case 0xb5:
                case 0xb6:
                case 0xb7:
                case 0xb8:
                case 0xb9:
                case 0xba:
                case 0xbb:
                case 0xbc:
                case 0xbd:
                case 0xbe:
                case 0xbf:
                case 0xc0:
                case 0xc1:
                case 0xc2:
                case 0xc3:
                case 0xc4:
                case 0xc5:
                case 0xc6:
                case 0xc7:
                case 0xc8:
                case 0xc9:
                case 0xca:
                case 0xcb:
                case 0xcc:
                case 0xcd:
                case 0xce:
                case 0xcf:
                case 0xd0:
                case 0xd1:
                case 0xd2:
                case 0xd3:
                case 0xd4:
                case 0xd5:
                case 0xd6:
                case 0xd7:
                case 0xd8:
                case 0xd9:
                case 0xda:
                case 0xdb:
                case 0xdc:
                case 0xdd:
                case 0xde:
                case 0xdf:
                case 0xe0:
                case 0xe1:
                case 0xe2:
                case 0xe3:
                case 0xe4:
                case 0xe5:
                case 0xe6:
                case 0xe7:
                case 0xe8:
                case 0xe9:
                case 0xea:
                case 0xeb:
                case 0xec:
                case 0xed:
                case 0xf4:
                case 0xf5:
                case 0xf6:
                case 0xf7:
                case 0x101:
                case 0x102:
                case 0x105:
                case 0x10a:
                    goto 0x6e951d20;
                case 0x118:
                    goto 0x6e9533c3;
                case 0x10b:
                    goto 0x6e952203;
                case 0x113:
                    goto 0x6e952520;
                case 0x12e:
                    goto 0x6e954587;
                }
                addr_6e951cb8_97:
                if (reinterpret_cast<unsigned char>(ebx71) > reinterpret_cast<unsigned char>(63)) 
                    goto addr_6e951d20_43;
                ebp10 = ebx71 + 1;
                (esp3 + reinterpret_cast<unsigned char>(ebx71) * 4)[48] = edi70;
                continue;
                addr_6e9520c6_159:
                if (!edi70) 
                    goto addr_6e951e76_134;
                edx111 = v67;
                ebx112 = esi14;
                if (*reinterpret_cast<unsigned char*>(&ebx71) == 16) {
                    edx111 = v66;
                }
                edi70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi70) + reinterpret_cast<unsigned char>(edx111));
                if (*reinterpret_cast<signed char*>(&ebx112) >= 0) 
                    goto addr_6e9520e6_171;
                addr_6e951e74_133:
                edi70 = *reinterpret_cast<void***>(edi70);
                goto addr_6e951e76_134;
                addr_6e9520e6_171:
                ebx71 = ebp10;
                goto addr_6e951cb8_97;
                addr_6e951f64_82:
                ebx71 = ebp10;
                eax39 = esi14;
                goto addr_6e951cb8_97;
            }
            break;
        }
    } while (!ebp10);
    goto addr_6e951cce_6;
    zf113 = g6e956014 == 2;
    if (!zf113) {
        g6e956014 = 2;
    }
    if (v114 == 2) {
        ebx115 = reinterpret_cast<int32_t*>(0x6e960028);
        if (!1) {
            do {
                eax116 = *ebx115;
                if (eax116) {
                    eax116(v117);
                }
                ++ebx115;
            } while (!reinterpret_cast<int1_t>(ebx115 == 0x6e960028));
            goto v118;
        }
    } else {
        if (v114 == 1) {
            fun_6e955550(v119, 1, v120);
            goto addr_6e954c55_42;
        }
    }
    while (1) {
        addr_6e952519_184:
        while (1) {
            addr_6e952420_185:
            fun_6e955970(ecx12, v121, v122, v123, v124, v125, v126, v127, v128);
            esp3 = esp3 - 4 + 4;
            while (1) {
                eax129 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v130) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)));
                if (*reinterpret_cast<unsigned char*>(esi14 + 0x6e95d028) > 4) 
                    break;
                while (1) {
                    *reinterpret_cast<void***>(v125) = reinterpret_cast<void**>(1);
                    while (1) {
                        edi16 = v124;
                        *reinterpret_cast<void***>(edi16) = eax129;
                        while (1) {
                            ++esi14;
                            ebx71 = ebx71 + 8;
                            v125 = reinterpret_cast<void**>(&v131->f1);
                            v124 = reinterpret_cast<void**>(&v132->f4);
                            if (reinterpret_cast<int1_t>(esi14 == 18)) 
                                goto addr_6e952457_190;
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71)) > reinterpret_cast<unsigned char>(5)) 
                                continue;
                            eax39 = *reinterpret_cast<void***>(ebx71);
                            switch (eax39) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        eax129 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v133) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)));
                        if (!(v134->f99 & 64)) 
                            continue;
                        addr_6e9524ca_195:
                        *reinterpret_cast<void***>(v125) = reinterpret_cast<void**>(0);
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp3) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)) + 0x9c)) 
                            goto addr_6e952560_197;
                        eax129 = (esp3 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)) * 4)[48];
                        if (!(v135->f99 & 64)) 
                            continue;
                        goto addr_6e9524ca_195;
                        eax136 = *reinterpret_cast<void***>(ebx71 + 0xfffffffc);
                        edi137 = ebx71;
                        esi14 = esi14;
                        do {
                            ++eax136;
                            ebx138 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax136 + 0xffffffff));
                        } while (*reinterpret_cast<signed char*>(&ebx138) < 0);
                        ebx71 = edi137;
                        ecx12 = reinterpret_cast<void**>(esp3 + 48);
                        eax129 = fun_6e951c60(ecx12, v139);
                        esp3 = esp3 - 4 + 12 + 4;
                        if (v140->f99 & 64) 
                            goto addr_6e9524ca_195;
                    }
                    eax141 = *reinterpret_cast<void***>(ebx71 + 0xfffffffc);
                    edi142 = ebx71;
                    do {
                        ++eax141;
                        ebx143 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax141 + 0xffffffff));
                    } while (*reinterpret_cast<signed char*>(&ebx143) < 0);
                    ebx71 = edi142;
                    ecx12 = reinterpret_cast<void**>(esp3 + 48);
                    eax129 = fun_6e951c60(ecx12, v144);
                    esp3 = esp3 - 4 + 12 + 4;
                    addr_6e95250c_206:
                    if (*reinterpret_cast<unsigned char*>(esi14 + 0x6e95d028) <= 4) 
                        continue; else 
                        goto addr_6e952519_184;
                    addr_6e952560_197:
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e952420_185;
                    edx145 = *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc) + 0x6e95d028);
                    eax129 = (esp3 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx71 + 0xfffffffc)) * 4)[48];
                    if (!(v146 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx145) != 4) 
                            goto addr_6e952420_185;
                        eax129 = *reinterpret_cast<void***>(eax129);
                        goto addr_6e95250c_206;
                    }
                }
            }
        }
    }
    addr_6e952457_190:
    if (v147->f187) {
        v148->f96 = v148->f96 | 0x80000000;
        goto v149;
    } else {
        v148->f96 = v148->f96 & 0x7fffffff;
        goto v150;
    }
}

struct s76 {
    signed char[196] pad196;
    uint32_t f196;
};

struct s75 {
    signed char[4] pad4;
    struct s76* f4;
};

struct s74 {
    struct s75* f0;
    signed char[4] pad8;
    struct s76* f8;
    signed char[44] pad56;
    struct s76* f56;
};

struct s77 {
    unsigned char f0;
    signed char f1;
    signed char f2;
    signed char f3;
    signed char f4;
    signed char f5;
};

struct s73 {
    signed char[72] pad72;
    struct s74* f72;
    struct s77* f76;
    int32_t f80;
    void** f84;
    signed char[7] pad92;
    void** f92;
    signed char[3] pad96;
    uint32_t f96;
    signed char[4] pad104;
    int32_t f104;
};

struct s78 {
    signed char[8] pad8;
    unsigned char f8;
    void** f9;
    signed char f10;
    void** f11;
};

struct s79 {
    signed char f0;
    signed char f1;
};

struct s80 {
    signed char[8] pad8;
    void** f8;
};

struct s81 {
    signed char[84] pad84;
    void** f84;
};

struct s82 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s83 {
    signed char[80] pad80;
    void** f80;
};

struct s84 {
    signed char[84] pad84;
    void** f84;
};

struct s85 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s86 {
    signed char[1] pad1;
    void** f1;
};

struct s87 {
    signed char[4] pad4;
    void** f4;
};

struct s88 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s89 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s90 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s91 {
    signed char[187] pad187;
    signed char f187;
};

struct s92 {
    signed char[96] pad96;
    uint32_t f96;
};

int32_t fun_6e951400(void** ecx, void* a2, int32_t a3, int32_t a4, void** a5, void** a6, void** a7, void** a8) {
    void** ebp9;
    void** edx10;
    void** edi11;
    void** edx12;
    uint32_t edx13;
    void*** esp14;
    struct s73* v15;
    struct s73* eax16;
    uint32_t ecx17;
    int1_t zf18;
    struct s77* eax19;
    int32_t eax20;
    void** v21;
    void** v22;
    int32_t v23;
    struct s48* eax24;
    struct s74* ecx25;
    uint32_t eax26;
    uint32_t eax27;
    struct s76* eax28;
    int32_t eax29;
    struct s78* v30;
    void** eax31;
    void** v32;
    void** v33;
    void* eax34;
    void*** esp35;
    struct s79* eax36;
    signed char edx37;
    uint32_t edx38;
    int32_t v39;
    uint32_t edi40;
    int32_t ecx41;
    void** ebx42;
    uint32_t edx43;
    void** edx44;
    void** eax45;
    void** ecx46;
    void** edi47;
    uint32_t v48;
    uint32_t esi49;
    uint32_t eax50;
    uint32_t eax51;
    void** esi52;
    int32_t v53;
    void** eax54;
    void** v55;
    void** v56;
    struct s80* v57;
    uint32_t eax58;
    uint32_t eax59;
    uint32_t eax60;
    uint32_t eax61;
    void** v62;
    uint32_t eax63;
    uint32_t eax64;
    void** eax65;
    uint32_t eax66;
    void** v67;
    void** v68;
    struct s81* v69;
    uint32_t eax70;
    void** eax71;
    uint32_t eax72;
    void** eax73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** eax80;
    void* edx81;
    void* v82;
    void* v83;
    struct s82* eax84;
    uint32_t eax85;
    void** v86;
    void** esi87;
    uint32_t eax88;
    uint32_t edx89;
    void** v90;
    void** v91;
    void** eax92;
    void** v93;
    uint32_t eax94;
    void** v95;
    int32_t v96;
    void** eax97;
    struct s83* v98;
    void** ecx99;
    void** ebx100;
    void** edx101;
    void** v102;
    int32_t ecx103;
    void** v104;
    void** esi105;
    uint32_t ebx106;
    uint32_t eax107;
    void** v108;
    void** v109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    uint16_t* eax118;
    void** edx119;
    void** eax120;
    uint16_t* edx121;
    int32_t v122;
    int32_t edi123;
    void** edi124;
    void*** edi125;
    uint32_t edx126;
    uint32_t ebx127;
    uint32_t edx128;
    void** edx129;
    uint32_t eax130;
    uint32_t ebx131;
    uint32_t edx132;
    void** v133;
    void** v134;
    void** v135;
    void** eax136;
    uint32_t edx137;
    void** edx138;
    struct s26* eax139;
    void** v140;
    struct s27* edi141;
    void** v142;
    void** v143;
    void** v144;
    void* v145;
    uint32_t edx146;
    void** v147;
    uint32_t edx148;
    uint32_t eax149;
    void** v150;
    void** v151;
    void** v152;
    void** edi153;
    void* v154;
    struct s84* v155;
    void** edx156;
    struct s85* eax157;
    uint32_t edx158;
    void** edx159;
    void** ebx160;
    void** v161;
    void** ebp162;
    uint32_t ebx163;
    uint32_t edx164;
    void** v165;
    void** v166;
    void** v167;
    void** edx168;
    uint32_t eax169;
    void** eax170;
    void** v171;
    void*** v172;
    int32_t v173;
    void** ebx174;
    void** ebp175;
    int32_t ecx176;
    uint32_t edx177;
    uint32_t eax178;
    void** v179;
    void** v180;
    void** v181;
    void** v182;
    void** v183;
    void** v184;
    void** v185;
    void** v186;
    int32_t* v187;
    int32_t v188;
    void** v189;
    void** v190;
    void** edx191;
    uint32_t ecx192;
    void** v193;
    void*** v194;
    int32_t v195;
    void** ebx196;
    int32_t ecx197;
    void** ebp198;
    uint32_t eax199;
    uint32_t esi200;
    void** v201;
    void** v202;
    void** v203;
    void** v204;
    void** v205;
    void** v206;
    void** v207;
    void** v208;
    int32_t* v209;
    int32_t v210;
    uint32_t ecx211;
    void** ebp212;
    uint32_t eax213;
    uint32_t esi214;
    int1_t zf215;
    int32_t v216;
    int32_t* ebx217;
    int32_t eax218;
    int32_t v219;
    int32_t v220;
    int32_t v221;
    void** v222;
    int32_t v223;
    int32_t v224;
    void** v225;
    void** v226;
    void** v227;
    void** v228;
    void** v229;
    void** v230;
    void** v231;
    void** v232;
    void** eax233;
    void* v234;
    struct s86* v235;
    struct s87* v236;
    void* v237;
    struct s88* v238;
    struct s89* v239;
    void** eax240;
    void** edi241;
    uint32_t ebx242;
    void** v243;
    struct s90* v244;
    void** eax245;
    void** edi246;
    uint32_t ebx247;
    void** v248;
    uint32_t edx249;
    unsigned char v250;
    struct s91* v251;
    struct s92* v252;
    int32_t v253;
    int32_t v254;

    ebp9 = edx10;
    edi11 = edx12;
    edx13 = 0xc0;
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 76);
    v15 = eax16;
    if (!(reinterpret_cast<unsigned char>(ebp9) & 1)) {
        if (reinterpret_cast<unsigned char>(edi11) & 2) 
            goto addr_6e951955_3; else 
            goto addr_6e95142c_4;
    }
    edi11 = ebp9 + 1;
    *reinterpret_cast<unsigned char*>(&edx13) = 0xbf;
    *reinterpret_cast<void***>(ebp9) = reinterpret_cast<void**>(0);
    if (!(reinterpret_cast<unsigned char>(edi11) & 2)) {
        addr_6e95142c_4:
        ecx17 = edx13 >> 2;
        zf18 = (*reinterpret_cast<unsigned char*>(&edx13) & 2) == 0;
    } else {
        addr_6e951955_3:
        edi11 = edi11 + 2;
        *reinterpret_cast<uint16_t*>(edi11 + 0xfffffffe) = 0;
        edx13 = edx13 - 2;
        goto addr_6e95142c_4;
    }
    while (ecx17) {
        --ecx17;
        *reinterpret_cast<void***>(edi11) = reinterpret_cast<void**>(0);
        edi11 = edi11 + 4;
    }
    if (!zf18) {
        edi11 = edi11 + 2;
        *reinterpret_cast<uint16_t*>(edi11 + 0xfffffffe) = 0;
    }
    if (edx13 & 1) {
        *reinterpret_cast<void***>(edi11) = reinterpret_cast<void**>(0);
    }
    v15->f104 = 0;
    v15->f80 = 0;
    eax19 = v15->f76;
    if (!eax19) {
        eax20 = 5;
    } else {
        v21 = reinterpret_cast<void**>(&v15->f84);
        v22 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax19) + (v15->f96 >> 31) + 0xffffffff);
        eax24 = _Unwind_Find_FDE(v22, v21, v23);
        esp14 = esp14 - 4 + 4;
        if (!eax24) {
            ecx25 = v15->f72;
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(v15->f76) - 2) != -1 || (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(v15->f76) - 1) != -48 || (v15->f76->f0 != 0x83 || v15->f76->f1 != -8))) {
                eax26 = *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(v15->f76) - 5);
                if (*reinterpret_cast<signed char*>(&eax26) == -24) {
                    eax27 = v15->f76->f0;
                    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(v15->f76) - 4) != 0x68 || *reinterpret_cast<signed char*>(&eax27) != -61) {
                        if (*reinterpret_cast<signed char*>(&eax27) != 0x83 || (v15->f76->f1 != -60 || v15->f76->f3 != -72)) {
                            addr_6e9517a1_19:
                            eax20 = 5;
                            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(v15->f76) - 1) == 0x83 && (v15->f76->f0 == 9 && (!v15->f76->f1 && (v15->f76->f2 == 45 && (!v15->f76->f3 && (v15->f76->f4 == 16 && !v15->f76->f5)))))) {
                                *reinterpret_cast<int32_t*>(ebp9 + 0xa0) = 1;
                                *reinterpret_cast<signed char*>(&eax20) = 0;
                                *reinterpret_cast<uint32_t*>(ebp9 + 0x98) = 4;
                                *reinterpret_cast<uint32_t*>(ebp9 + 0x94) = 4;
                                *reinterpret_cast<void***>(ebp9 + 12) = reinterpret_cast<void**>(1);
                                *reinterpret_cast<void***>(ebp9 + 8) = reinterpret_cast<void**>(0xfffffffc);
                                *reinterpret_cast<uint32_t*>(ebp9 + 0xb4) = 8;
                                *reinterpret_cast<int32_t*>(ebp9 + 68) = 1;
                                *reinterpret_cast<uint32_t*>(ebp9 + 64) = 0;
                                *reinterpret_cast<signed char*>(ebp9 + 0xbb) = 1;
                            }
                        } else {
                            eax28 = ecx25->f56;
                            goto addr_6e951a47_22;
                        }
                    } else {
                        goto addr_6e951b2f_24;
                    }
                } else {
                    if (*reinterpret_cast<signed char*>(&eax26) != 0x8b) 
                        goto addr_6e9517a1_19;
                    if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(v15->f76) - 4) != 77) 
                        goto addr_6e9517a1_19;
                    if (v15->f76->f0 != 100) 
                        goto addr_6e9517a1_19;
                    if (v15->f76->f1 != 0x8b) 
                        goto addr_6e9517a1_19;
                    eax28 = ecx25->f8;
                    goto addr_6e951a47_22;
                }
            } else {
                addr_6e951b2f_24:
                eax28 = ecx25->f0->f4;
                goto addr_6e951a47_22;
            }
        } else {
            *reinterpret_cast<void***>(ebp9 + 0xa4) = v15->f92;
            eax29 = eax24->f4;
            v30 = reinterpret_cast<struct s78*>(reinterpret_cast<int32_t>(&eax24->f4) - eax29);
            eax31 = reinterpret_cast<void**>(&v30->f9);
            v32 = eax31;
            v33 = eax31;
            eax34 = fun_6e955978(v32, v21);
            esp35 = esp14 - 4 + 4;
            eax36 = reinterpret_cast<struct s79*>(reinterpret_cast<unsigned char>(eax31) + reinterpret_cast<uint32_t>(eax34) + 1);
            if (*reinterpret_cast<void***>(&v30->f9) == 0x65 && v30->f10 == 0x68) {
                edx37 = eax36->f0;
                eax36 = eax36 + 2;
                v33 = reinterpret_cast<void**>(&v30->f11);
                *reinterpret_cast<signed char*>(ebp9 + 0xbc) = edx37;
            }
            if (v30->f8 > 3) 
                goto addr_6e951c3d_33; else 
                goto addr_6e9514e1_34;
        }
    }
    addr_6e9515c5_35:
    return eax20;
    addr_6e951a47_22:
    edx38 = eax28->f196;
    *reinterpret_cast<int32_t*>(ebp9 + 0xa0) = 1;
    *reinterpret_cast<uint32_t*>(ebp9 + 0x98) = 4;
    *reinterpret_cast<void***>(ebp9 + 4) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ebp9) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax28) + 0xb0 - edx38);
    *reinterpret_cast<void***>(ebp9 + 24) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax28) + 0xa4 - edx38);
    *reinterpret_cast<void***>(ebp9 + 8) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax28) + 0xac - edx38);
    *reinterpret_cast<void***>(ebp9 + 16) = reinterpret_cast<void**>(reinterpret_cast<int32_t>(eax28) + 0xa8 - edx38);
    *reinterpret_cast<uint32_t*>(ebp9 + 48) = reinterpret_cast<int32_t>(eax28) + 0xa0 - edx38;
    *reinterpret_cast<uint32_t*>(ebp9 + 56) = reinterpret_cast<int32_t>(eax28) + 0x9c - edx38;
    *reinterpret_cast<uint32_t*>(ebp9 + 64) = reinterpret_cast<int32_t>(eax28) + 0xb8 - edx38;
    eax20 = 0;
    *reinterpret_cast<uint32_t*>(ebp9 + 0x94) = edx38 - reinterpret_cast<uint32_t>(ecx25);
    *reinterpret_cast<void***>(ebp9 + 28) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ebp9 + 12) = reinterpret_cast<void**>(1);
    *reinterpret_cast<void***>(ebp9 + 20) = reinterpret_cast<void**>(1);
    *reinterpret_cast<int32_t*>(ebp9 + 52) = 1;
    *reinterpret_cast<int32_t*>(ebp9 + 60) = 1;
    *reinterpret_cast<int32_t*>(ebp9 + 44) = 1;
    *reinterpret_cast<uint32_t*>(ebp9 + 40) = reinterpret_cast<int32_t>(eax28) + 0xb4 - edx38;
    *reinterpret_cast<int32_t*>(ebp9 + 68) = 1;
    *reinterpret_cast<uint32_t*>(ebp9 + 0xb4) = 8;
    *reinterpret_cast<signed char*>(ebp9 + 0xbb) = 1;
    goto addr_6e9515c5_35;
    addr_6e951c3d_33:
    if (eax36->f0 != 4 || eax36->f1) {
        addr_6e951932_36:
        goto v39;
    } else {
        ++eax36;
    }
    addr_6e9514e1_34:
    edi40 = 0;
    ecx41 = 0;
    do {
        eax36 = reinterpret_cast<struct s79*>(&eax36->f1);
        ebx42 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax36) - 1)));
        edx43 = (reinterpret_cast<unsigned char>(ebx42) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx41);
        ecx41 = ecx41 + 7;
        edi40 = edi40 | edx43;
    } while (*reinterpret_cast<signed char*>(&ebx42) < reinterpret_cast<signed char>(0));
    *reinterpret_cast<uint32_t*>(ebp9 + 0xb0) = edi40;
    edx44 = reinterpret_cast<void**>(esp35 + 56);
    eax45 = fun_6e950b70(v32, v21);
    esp35 = esp35 - 4 + 4;
    ecx46 = reinterpret_cast<void**>(0);
    edi47 = eax45;
    *reinterpret_cast<uint32_t*>(ebp9 + 0xac) = v48;
    if (v30->f8 == 1) {
        ++edi47;
        *reinterpret_cast<uint32_t*>(ebp9 + 0xb4) = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47));
    } else {
        esi49 = 0;
        do {
            ++edi47;
            edx44 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47 + 0xffffffff))));
            eax50 = (reinterpret_cast<unsigned char>(edx44) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
            ecx46 = ecx46 + 7;
            esi49 = esi49 | eax50;
        } while (*reinterpret_cast<signed char*>(&edx44) < reinterpret_cast<signed char>(0));
        *reinterpret_cast<uint32_t*>(ebp9 + 0xb4) = esi49;
    }
    *reinterpret_cast<unsigned char*>(ebp9 + 0xb9) = 0xff;
    eax51 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v33));
    if (*reinterpret_cast<signed char*>(&eax51) == 0x7a) {
        ecx46 = reinterpret_cast<void**>(0);
        do {
            ++edi47;
            edx44 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47 + 0xffffffff))));
            ecx46 = ecx46 + 7;
        } while (*reinterpret_cast<signed char*>(&edx44) < reinterpret_cast<signed char>(0));
        *reinterpret_cast<signed char*>(ebp9 + 0xba) = 1;
        ebx42 = v33 + 1;
        eax51 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v33 + 1));
        v33 = ebx42;
    }
    esi52 = v33 + 1;
    while (1) {
        if (!*reinterpret_cast<signed char*>(&eax51)) {
            if (!v53) {
                eax54 = edi47;
            } else {
                addr_6e95164e_52:
                esi52 = v55;
                ecx46 = v56;
                fun_6e950bb0(ecx46, ebp9);
                esp35 = esp35 - 4 + 12 + 4;
                edx44 = reinterpret_cast<void**>(&v57->f8);
                eax58 = *reinterpret_cast<unsigned char*>(ebp9 + 0xb8);
                if (*reinterpret_cast<signed char*>(&eax58) == -1) {
                    ebx42 = reinterpret_cast<void**>(0);
                    goto addr_6e9516a3_54;
                } else {
                    eax59 = eax58 & 7;
                    if (*reinterpret_cast<unsigned char*>(&eax59) == 2) {
                        ebx42 = reinterpret_cast<void**>(4);
                        goto addr_6e9516a3_54;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&eax59) <= 2) {
                            if (*reinterpret_cast<unsigned char*>(&eax59)) 
                                goto addr_6e951746_59; else 
                                goto addr_6e951bc5_60;
                        } else {
                            esi52 = esi52;
                            if (*reinterpret_cast<unsigned char*>(&eax59) == 3) {
                                addr_6e951bc5_60:
                                ebx42 = reinterpret_cast<void**>(8);
                                goto addr_6e9516a3_54;
                            } else {
                                ebx42 = reinterpret_cast<void**>(16);
                                if (*reinterpret_cast<unsigned char*>(&eax59) != 4) 
                                    goto addr_6e951746_59; else 
                                    goto addr_6e9516a3_54;
                            }
                        }
                    }
                }
            }
        } else {
            if (*reinterpret_cast<signed char*>(&eax51) != 76) {
                if (*reinterpret_cast<signed char*>(&eax51) == 82) {
                    eax60 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47));
                    ++edi47;
                    *reinterpret_cast<unsigned char*>(ebp9 + 0xb8) = *reinterpret_cast<unsigned char*>(&eax60);
                    goto addr_6e95158d_66;
                } else {
                    if (*reinterpret_cast<signed char*>(&eax51) == 80) {
                        ebx42 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47))));
                        if (*reinterpret_cast<unsigned char*>(&ebx42) == 0xff) 
                            goto addr_6e951746_59;
                        eax61 = reinterpret_cast<unsigned char>(ebx42) & 0x70;
                        if (*reinterpret_cast<unsigned char*>(&eax61) == 32) 
                            goto addr_6e951976_70; else 
                            goto addr_6e9515ed_71;
                    } else {
                        if (*reinterpret_cast<signed char*>(&eax51) != 83) {
                            eax54 = v62;
                        } else {
                            *reinterpret_cast<signed char*>(ebp9 + 0xbb) = 1;
                            goto addr_6e95158d_66;
                        }
                    }
                }
            } else {
                eax63 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47));
                ++edi47;
                *reinterpret_cast<unsigned char*>(ebp9 + 0xb9) = *reinterpret_cast<unsigned char*>(&eax63);
                goto addr_6e95158d_66;
            }
        }
        if (eax54) 
            goto addr_6e95164e_52; else 
            goto addr_6e951932_36;
        addr_6e9516a3_54:
        ebx42 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx42) + reinterpret_cast<unsigned char>(edx44));
        esi52 = reinterpret_cast<void**>(0);
        if (*reinterpret_cast<signed char*>(ebp9 + 0xba)) {
            ecx46 = reinterpret_cast<void**>(0);
            do {
                ++ebx42;
                edx44 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xffffffff))));
                eax64 = (reinterpret_cast<unsigned char>(edx44) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                ecx46 = ecx46 + 7;
                esi52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi52) | eax64);
            } while (*reinterpret_cast<signed char*>(&edx44) < reinterpret_cast<signed char>(0));
            esi52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi52) + reinterpret_cast<unsigned char>(ebx42));
        }
        edi47 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebp9 + 0xb9)));
        eax65 = edi47;
        if (*reinterpret_cast<signed char*>(&eax65) == -1) 
            break;
        eax66 = reinterpret_cast<unsigned char>(eax65) & 0x70;
        *reinterpret_cast<unsigned char*>(&v67) = *reinterpret_cast<unsigned char*>(&eax66);
        if (*reinterpret_cast<unsigned char*>(&eax66) == 32) {
            v68 = v69->f84;
        } else {
            if (*reinterpret_cast<unsigned char*>(&eax66) <= 32) {
                if (!*reinterpret_cast<unsigned char*>(&eax66)) 
                    goto addr_6e951a0e_85;
                if (*reinterpret_cast<unsigned char*>(&eax66) != 16) 
                    goto addr_6e951746_59; else 
                    goto addr_6e951a0e_85;
            } else {
                eax70 = *reinterpret_cast<unsigned char*>(&v67);
                if (*reinterpret_cast<signed char*>(&eax70) != 64) {
                    if (*reinterpret_cast<signed char*>(&eax70) == 80) {
                        addr_6e951a0e_85:
                    } else {
                        if (*reinterpret_cast<signed char*>(&eax70) != 48) 
                            goto addr_6e951746_59;
                    }
                }
            }
        }
        eax71 = edi47;
        if (*reinterpret_cast<signed char*>(&eax71) == 80) 
            goto addr_6e951c00_93;
        eax72 = reinterpret_cast<unsigned char>(edi47) & 15;
        if (*reinterpret_cast<unsigned char*>(&eax72) > 12) 
            goto addr_6e951746_59;
        eax73 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax72)));
        switch (eax73) {
            addr_6e951746_59:
        case 5:
        case 6:
        case 7:
        case 8:
            fun_6e955970(ecx46, v74, v75, v76, v77, v78, v67, v68, v79);
            esp35 = esp35 - 4 + 4;
            esi52 = esi52;
        case 0x13a:
            goto 0x6e954590;
        case 0x133:
            goto 0x6e9545f6;
        case 0x131:
        case 0x134:
        case 0x13c:
            goto 0x6e954550;
        case 0x12d:
            goto 0x6e9533b0;
        case 0x129:
        case 0x12a:
        case 0x12b:
        case 0x12c:
            goto 0x6e953400;
        case 0x132:
            goto 0x6e9545d0;
        case 0x128:
        case 0x130:
            goto 0x6e9533a0;
        case 0x13e:
            goto 0x6e954c30;
        case 0x126:
            goto 0x6e9533f0;
        case 0x136:
        case 0x137:
        case 0x138:
        case 0x139:
            goto 0x6e954601;
        case 0x124:
        case 0x127:
        case 0x12f:
            goto 0x6e953370;
        case 0x122:
            goto 0x6e952425;
        case 0x121:
            goto 0x6e952480;
        case 0x120:
            goto 0x6e952520;
        case 0x11d:
            goto 0x6e952287;
        case 0x11c:
            goto 0x6e952276;
        case 0xfe:
            goto 0x6e9522ba;
        case 0x116:
            goto 0x6e9521f8;
        case 0x135:
        case 0x13d:
            goto 0x6e954580;
        case 0x119:
            goto 0x6e952243;
        case 0x114:
            goto 0x6e9521e2;
        case 30:
            goto 0x6e951f30;
        case 0x100:
        case 0x108:
            goto 0x6e952115;
        case 0x113:
            goto 0x6e9521d7;
        case 0x10c:
            goto 0x6e952236;
        case 0x10b:
            goto 0x6e95222b;
        case 0x11a:
            goto 0x6e952254;
        case 0x10a:
            goto 0x6e95221f;
        case 0x109:
            goto 0x6e952214;
        case 18:
            goto 0x6e951d60;
        case 0x106:
            goto 0x6e9522ae;
        case 0:
        case 3:
        case 11:
            goto 0x6e95185d;
        case 0x105:
            goto 0x6e952298;
        case 0x11b:
            goto 0x6e952265;
        case 0xfd:
            goto 0x6e9522c6;
        case 29:
            goto 0x6e951f46;
        case 0x115:
            goto 0x6e9521ed;
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 43:
        case 44:
        case 46:
        case 47:
        case 48:
        case 49:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
            goto 0x6e952045;
        case 57:
            goto 0x6e952010;
        case 0x123:
            goto 0x6e9524d6;
        case 2:
            goto 0x6e951b5d;
        case 50:
            goto 0x6e952020;
        case 14:
        case 15:
        case 17:
        case 34:
        case 0x9b:
        case 0x9d:
        case 0x9f:
        case 0xa1:
        case 0xa2:
        case 0xa3:
        case 0xa4:
        case 0xa5:
        case 0xa6:
        case 0xa7:
        case 0xa8:
        case 0xa9:
        case 0xaa:
        case 0xab:
        case 0xac:
        case 0xad:
        case 0xae:
        case 0xaf:
        case 0xb0:
        case 0xb1:
        case 0xb2:
        case 0xb3:
        case 0xb4:
        case 0xb5:
        case 0xb6:
        case 0xb7:
        case 0xb8:
        case 0xb9:
        case 0xba:
        case 0xbb:
        case 0xbc:
        case 0xbd:
        case 0xbe:
        case 0xbf:
        case 0xc0:
        case 0xc1:
        case 0xc2:
        case 0xc3:
        case 0xc4:
        case 0xc5:
        case 0xc6:
        case 0xc7:
        case 0xc8:
        case 0xc9:
        case 0xca:
        case 0xcb:
        case 0xcc:
        case 0xcd:
        case 0xce:
        case 0xcf:
        case 0xd0:
        case 0xd1:
        case 0xd2:
        case 0xd3:
        case 0xd4:
        case 0xd5:
        case 0xd6:
        case 0xd7:
        case 0xd8:
        case 0xd9:
        case 0xda:
        case 0xdb:
        case 0xdc:
        case 0xdd:
        case 0xde:
        case 0xdf:
        case 0xe0:
        case 0xe1:
        case 0xe2:
        case 0xe3:
        case 0xe4:
        case 0xe5:
        case 0xe6:
        case 0xe7:
        case 0xe8:
        case 0xe9:
        case 0xea:
        case 0xeb:
        case 0xec:
        case 0xed:
        case 0xee:
        case 0xef:
        case 0xf0:
        case 0xf1:
        case 0xf2:
        case 0xf3:
        case 0xf4:
        case 0xf5:
        case 0xf6:
        case 0xf7:
        case 0xf8:
        case 0xf9:
        case 0xfa:
        case 0x101:
        case 0x102:
        case 0x103:
        case 0x104:
        case 0x10e:
        case 0x10f:
        case 0x112:
        case 0x117:
            goto 0x6e951d20;
        case 0x125:
            goto 0x6e9533c3;
        case 33:
            goto 0x6e952070;
        case 1:
            goto 0x6e951b6a;
        case 0xfb:
            goto 0x6e951db0;
        case 28:
            goto 0x6e951f58;
        case 24:
        case 25:
            goto 0x6e951ce0;
        case 0x111:
            goto 0x6e9521cd;
        case 20:
            goto 0x6e951d40;
        case 26:
            goto 0x6e951f86;
        case 21:
            goto 0x6e951d30;
        case 31:
            goto 0x6e951f06;
        case 0x10d:
            goto 0x6e9521b6;
        case 9:
            goto 0x6e951b45;
        case 10:
            goto 0x6e951ba6;
        case 27:
            goto 0x6e951f70;
        case 0x9a:
            goto 0x6e951e24;
        case 19:
            goto 0x6e951d50;
        case 0xfc:
        case 0xff:
        case 0x107:
            goto 0x6e9520c0;
        case 0x11e:
            goto 0x6e952442;
        case 16:
        case 35:
        case 41:
        case 42:
        case 45:
        case 0x9e:
            goto 0x6e951d70;
        case 0x13b:
            goto 0x6e954587;
        case 0x7a:
        case 0x7b:
        case 0x7c:
        case 0x7d:
        case 0x7e:
        case 0x7f:
        case 0x80:
        case 0x81:
        case 0x82:
        case 0x83:
        case 0x84:
        case 0x85:
        case 0x86:
        case 0x87:
        case 0x88:
        case 0x89:
        case 0x8a:
        case 0x8b:
        case 0x8c:
        case 0x8d:
        case 0x8e:
        case 0x8f:
        case 0x90:
        case 0x91:
        case 0x92:
        case 0x93:
        case 0x94:
        case 0x95:
        case 0x96:
        case 0x97:
        case 0x98:
        case 0x99:
            goto 0x6e951e80;
        case 13:
        case 22:
        case 23:
            goto 0x6e951cb0;
        case 4:
        case 12:
            goto 0x6e951b39;
        case 0x110:
            goto 0x6e9521c2;
        case 0x9c:
            goto 0x6e951fb0;
        case 0x118:
            goto 0x6e952203;
        case 0xa0:
            goto 0x6e951d25;
        case 90:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
        case 96:
        case 97:
        case 98:
        case 99:
        case 100:
        case 0x65:
        case 0x66:
        case 0x67:
        case 0x68:
        case 0x69:
        case 0x6a:
        case 0x6b:
        case 0x6c:
        case 0x6d:
        case 0x6e:
        case 0x6f:
        case 0x70:
        case 0x71:
        case 0x72:
        case 0x73:
        case 0x74:
        case 0x75:
        case 0x76:
        case 0x77:
        case 0x78:
        case 0x79:
            goto 0x6e951cf0;
        case 32:
            goto 0x6e951ee0;
        case 0x12e:
            goto 0x6e9533a7;
        case 0x11f:
            goto 0x6e952541;
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
            goto 0x6e951ed0;
        }
        eax80 = *reinterpret_cast<void***>(edi47 + 1);
        edi47 = edi47 + 5;
        addr_6e951756_97:
        edx44 = reinterpret_cast<void**>(0);
        if (eax80) {
            edx81 = v82;
            if (*reinterpret_cast<signed char*>(&v68) == 16) {
                edx81 = v83;
            }
            edx44 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(edx81) + reinterpret_cast<unsigned char>(eax80));
            if (*reinterpret_cast<signed char*>(&ebx42) < reinterpret_cast<signed char>(0)) {
                edx44 = *reinterpret_cast<void***>(edx44);
            }
        }
        addr_6e951772_102:
        *reinterpret_cast<void***>(ebp9 + 0xa8) = edx44;
        addr_6e95158d_66:
        eax51 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi52));
        ++esi52;
        continue;
        addr_6e951976_70:
        addr_6e95161b_103:
        if (*reinterpret_cast<unsigned char*>(&ebx42) == 80) {
            eax84 = reinterpret_cast<struct s82*>(reinterpret_cast<unsigned char>(edi47 + 4) & 0xfffffffc);
            edi47 = reinterpret_cast<void**>(&eax84->f4);
            edx44 = eax84->f0;
            goto addr_6e951772_102;
        } else {
            eax85 = reinterpret_cast<unsigned char>(ebx42) & 15;
            if (*reinterpret_cast<unsigned char*>(&eax85) > 12) 
                goto addr_6e951746_59;
            eax73 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&eax85)));
            goto *reinterpret_cast<int32_t*>(reinterpret_cast<unsigned char>(eax73) * 4 + 0x6e9574ec);
        }
        ++edi47;
        ecx46 = reinterpret_cast<void**>(0);
        v86 = esi52;
        esi87 = reinterpret_cast<void**>(0);
        do {
            ++edi47;
            eax88 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi47 + 0xffffffff));
            edx89 = (eax88 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
            ecx46 = ecx46 + 7;
            esi87 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi87) | edx89);
        } while (*reinterpret_cast<signed char*>(&eax88) < 0);
        eax80 = esi87;
        esi52 = v86;
        goto addr_6e951756_97;
        eax80 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(edi47 + 1))));
        edi47 = edi47 + 3;
        goto addr_6e951756_97;
        eax80 = *reinterpret_cast<void***>(edi47 + 1);
        edi47 = edi47 + 9;
        goto addr_6e951756_97;
        eax92 = fun_6e950b70(v90, v91);
        esp35 = esp35 - 4 + 4;
        edi47 = eax92;
        eax80 = v93;
        goto addr_6e951756_97;
        eax80 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(edi47 + 1))));
        edi47 = edi47 + 3;
        goto addr_6e951756_97;
        addr_6e9515ed_71:
        if (*reinterpret_cast<unsigned char*>(&eax61) <= 32) {
            if (!*reinterpret_cast<unsigned char*>(&eax61)) 
                goto addr_6e951850_115;
            esi52 = esi52;
            if (*reinterpret_cast<unsigned char*>(&eax61) == 16) 
                goto addr_6e951850_115; else 
                goto addr_6e951746_59;
        } else {
            eax94 = *reinterpret_cast<unsigned char*>(&eax61);
            if (*reinterpret_cast<signed char*>(&eax94) == 64) {
                goto addr_6e95161b_103;
            } else {
                if (*reinterpret_cast<signed char*>(&eax94) == 80) {
                    addr_6e951850_115:
                    goto addr_6e95161b_103;
                } else {
                    if (*reinterpret_cast<signed char*>(&eax94) != 48) 
                        goto addr_6e951746_59;
                    goto addr_6e95161b_103;
                }
            }
        }
    }
    addr_6e951889_122:
    if (!esi52) {
    }
    fun_6e950bb0(v95, ebp9);
    goto v96;
    addr_6e951c00_93:
    eax97 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ebx42 + 3) & 0xfffffffc);
    addr_6e951880_125:
    v98->f80 = eax97;
    goto addr_6e951889_122;
    ecx99 = *reinterpret_cast<void***>(ebx42);
    addr_6e951864_127:
    eax97 = reinterpret_cast<void**>(0);
    if (ecx99) {
        if (*reinterpret_cast<unsigned char*>(&v67) != 16) {
            ebx42 = v68;
        }
        eax97 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx99) + reinterpret_cast<unsigned char>(ebx42));
        ebx100 = edi47;
        if (*reinterpret_cast<signed char*>(&ebx100) < 0) {
            eax97 = *reinterpret_cast<void***>(eax97);
            goto addr_6e951880_125;
        }
    }
    edx101 = ebx42;
    v102 = esi52;
    ecx103 = 0;
    v104 = ebx42;
    esi105 = reinterpret_cast<void**>(0);
    do {
        ++edx101;
        ebx106 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx101 + 0xffffffff));
        eax107 = (ebx106 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx103);
        ecx103 = ecx103 + 7;
        esi105 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi105) | eax107);
    } while (*reinterpret_cast<signed char*>(&ebx106) < 0);
    ecx99 = esi105;
    ebx42 = v104;
    esi52 = v102;
    goto addr_6e951864_127;
    ecx99 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ebx42))));
    goto addr_6e951864_127;
    ecx99 = *reinterpret_cast<void***>(ebx42);
    goto addr_6e951864_127;
    fun_6e950b70(v108, v109);
    ecx99 = v110;
    goto addr_6e951864_127;
    ecx99 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ebx42))));
    goto addr_6e951864_127;
    do {
        addr_6e951d20_139:
        fun_6e955970(ecx46, v111, v112, v113, v114, v115, v67, v68, v116);
        esp35 = esp35 - 4 + 4;
        while (1) {
            eax73 = esi52;
            while (1) {
                while (reinterpret_cast<unsigned char>(eax73) < reinterpret_cast<unsigned char>(v117)) {
                    edx44 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73))));
                    esi52 = eax73 + 1;
                    ecx46 = edx44 + 0xfffffffd;
                    edi47 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&edx44)));
                    if (*reinterpret_cast<unsigned char*>(&ecx46) > 0xee) 
                        goto addr_6e951d20_139;
                    ecx46 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ecx46)));
                    switch (ecx46) {
                    case 16:
                        if (!ebp9) 
                            goto addr_6e951d20_139;
                        --ebp9;
                        eax73 = esi52;
                        break;
                    case 19:
                        if (reinterpret_cast<signed char>(ebp9) <= reinterpret_cast<signed char>(1)) 
                            goto addr_6e951d20_139;
                        eax118 = reinterpret_cast<uint16_t*>(ebp9 + 0xfffffffe);
                        edx119 = ebp9 + 0xffffffff;
                        ebx42 = (esp35 + reinterpret_cast<uint32_t>(eax118) * 4)[48];
                        ecx46 = (esp35 + reinterpret_cast<unsigned char>(edx119) * 4)[48];
                        (esp35 + reinterpret_cast<unsigned char>(edx119) * 4)[48] = ebx42;
                        (esp35 + reinterpret_cast<uint32_t>(eax118) * 4)[48] = ecx46;
                        eax73 = esi52;
                        break;
                    case 20:
                        if (reinterpret_cast<signed char>(ebp9) <= reinterpret_cast<signed char>(2)) 
                            goto addr_6e951d20_139;
                        ecx46 = ebp9 + 0xffffffff;
                        eax120 = ebp9 + 0xfffffffd;
                        edx121 = reinterpret_cast<uint16_t*>(ebp9 + 0xfffffffe);
                        ebx42 = (esp35 + reinterpret_cast<uint32_t>(edx121) * 4)[48];
                        v122 = *reinterpret_cast<int32_t*>(esp35 + reinterpret_cast<unsigned char>(ecx46) * 4 + 48);
                        edi123 = *reinterpret_cast<int32_t*>(esp35 + reinterpret_cast<unsigned char>(eax120) * 4 + 48);
                        (esp35 + reinterpret_cast<unsigned char>(ecx46) * 4)[48] = ebx42;
                        *reinterpret_cast<int32_t*>(esp35 + reinterpret_cast<uint32_t>(edx121) * 4 + 48) = edi123;
                        *reinterpret_cast<int32_t*>(esp35 + reinterpret_cast<unsigned char>(eax120) * 4 + 48) = v122;
                        eax73 = esi52;
                        break;
                    case 37:
                        if (!ebp9) 
                            goto addr_6e951d20_139;
                        --ebp9;
                        eax73 = eax73 + 3;
                        ebx42 = (esp35 + reinterpret_cast<unsigned char>(ebp9) * 4)[48];
                        if (!ebx42) 
                            break;
                        eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73 + 1))));
                        break;
                    case 44:
                        eax73 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) + static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73 + 1))) + 3);
                    case 0x12d:
                        goto 0x6e954590;
                    case 0x126:
                        goto 0x6e9545f6;
                    case 0x124:
                    case 0x127:
                    case 0x12f:
                        goto 0x6e954550;
                    case 0x120:
                        goto 0x6e9533b0;
                    case 0x11c:
                    case 0x11d:
                    case 0x11e:
                    case 0x11f:
                        goto 0x6e953400;
                    case 0x125:
                        goto 0x6e9545d0;
                    case 0x11b:
                    case 0x123:
                        goto 0x6e9533a0;
                    case 0x131:
                        goto 0x6e954c30;
                    case 0x119:
                        goto 0x6e9533f0;
                    case 0x129:
                    case 0x12a:
                    case 0x12b:
                    case 0x12c:
                        goto 0x6e954601;
                    case 0x117:
                    case 0x11a:
                    case 0x122:
                        goto 0x6e953370;
                    case 0x116:
                        goto 0x6e9524d6;
                    case 0x115:
                        goto 0x6e952425;
                    case 0x114:
                        goto 0x6e952480;
                    case 0x121:
                        goto 0x6e9533a7;
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 64:
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 70:
                    case 71:
                    case 72:
                    case 73:
                    case 74:
                    case 75:
                    case 76:
                        goto 0x6e951ed0;
                    case 0x112:
                        goto 0x6e952541;
                    case 0x128:
                    case 0x130:
                        goto 0x6e954580;
                    case 0x107:
                        goto 0x6e9521e2;
                    case 0x10c:
                        goto 0x6e952243;
                    case 0xf1:
                        goto 0x6e9522ba;
                    case 0x109:
                        goto 0x6e9521f8;
                    case 0x10f:
                        goto 0x6e952276;
                    case 17:
                        goto 0x6e951f30;
                    case 0xf3:
                    case 0xfb:
                        goto 0x6e952115;
                    case 0x106:
                        goto 0x6e9521d7;
                    case 0xff:
                        goto 0x6e952236;
                    case 0xfe:
                        goto 0x6e95222b;
                    case 0x10d:
                        goto 0x6e952254;
                    case 0xfd:
                        goto 0x6e95221f;
                    case 0xfc:
                        goto 0x6e952214;
                    case 5:
                        goto 0x6e951d60;
                    case 0xf9:
                        goto 0x6e9522ae;
                    case 0xf8:
                        goto 0x6e952298;
                    case 0x10e:
                        goto 0x6e952265;
                    case 0xf0:
                        goto 0x6e9522c6;
                    case 0x103:
                        goto 0x6e9521c2;
                    case 0x108:
                        goto 0x6e9521ed;
                    case 0x8f:
                        goto 0x6e951fb0;
                    case 0x110:
                        goto 0x6e952287;
                    case 0x93:
                        goto 0x6e951d25;
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 91:
                    case 92:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 0x65:
                    case 0x66:
                    case 0x67:
                    case 0x68:
                    case 0x69:
                    case 0x6a:
                    case 0x6b:
                    case 0x6c:
                        goto 0x6e951cf0;
                    case 14:
                        goto 0x6e951f70;
                    case 0x100:
                        goto 0x6e9521b6;
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 30:
                    case 31:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                        goto 0x6e952045;
                    case 0xef:
                    case 0xf2:
                    case 0xfa:
                        goto 0x6e9520c0;
                    case 0x111:
                        goto 0x6e952442;
                    case 3:
                    case 22:
                    case 28:
                    case 29:
                    case 32:
                    case 0x91:
                        goto 0x6e951d70;
                    case 18:
                        goto 0x6e951f06;
                    case 15:
                        goto 0x6e951f58;
                    case 0xee:
                        goto 0x6e951db0;
                    case 6:
                        goto 0x6e951d50;
                    case 0x8d:
                        goto 0x6e951e24;
                    case 11:
                    case 12:
                        goto 0x6e951ce0;
                    case 0x104:
                        goto 0x6e9521cd;
                    case 7:
                        goto 0x6e951d40;
                    case 13:
                        goto 0x6e951f86;
                    case 8:
                        goto 0x6e951d30;
                    case 1:
                    case 2:
                    case 4:
                    case 21:
                    case 0x8e:
                    case 0x90:
                    case 0x92:
                    case 0x94:
                    case 0x95:
                    case 0x96:
                    case 0x97:
                    case 0x98:
                    case 0x99:
                    case 0x9a:
                    case 0x9b:
                    case 0x9c:
                    case 0x9d:
                    case 0x9e:
                    case 0x9f:
                    case 0xa0:
                    case 0xa1:
                    case 0xa2:
                    case 0xa3:
                    case 0xa4:
                    case 0xa5:
                    case 0xa6:
                    case 0xa7:
                    case 0xa8:
                    case 0xa9:
                    case 0xaa:
                    case 0xab:
                    case 0xac:
                    case 0xad:
                    case 0xae:
                    case 0xaf:
                    case 0xb0:
                    case 0xb1:
                    case 0xb2:
                    case 0xb3:
                    case 0xb4:
                    case 0xb5:
                    case 0xb6:
                    case 0xb7:
                    case 0xb8:
                    case 0xb9:
                    case 0xba:
                    case 0xbb:
                    case 0xbc:
                    case 0xbd:
                    case 0xbe:
                    case 0xbf:
                    case 0xc0:
                    case 0xc1:
                    case 0xc2:
                    case 0xc3:
                    case 0xc4:
                    case 0xc5:
                    case 0xc6:
                    case 0xc7:
                    case 0xc8:
                    case 0xc9:
                    case 0xca:
                    case 0xcb:
                    case 0xcc:
                    case 0xcd:
                    case 0xce:
                    case 0xcf:
                    case 0xd0:
                    case 0xd1:
                    case 0xd2:
                    case 0xd3:
                    case 0xd4:
                    case 0xd5:
                    case 0xd6:
                    case 0xd7:
                    case 0xd8:
                    case 0xd9:
                    case 0xda:
                    case 0xdb:
                    case 0xdc:
                    case 0xdd:
                    case 0xde:
                    case 0xdf:
                    case 0xe0:
                    case 0xe1:
                    case 0xe2:
                    case 0xe3:
                    case 0xe4:
                    case 0xe5:
                    case 0xe6:
                    case 0xe7:
                    case 0xe8:
                    case 0xe9:
                    case 0xea:
                    case 0xeb:
                    case 0xec:
                    case 0xed:
                    case 0xf4:
                    case 0xf5:
                    case 0xf6:
                    case 0xf7:
                    case 0x101:
                    case 0x102:
                    case 0x105:
                    case 0x10a:
                        goto 0x6e951d20;
                    case 0x118:
                        goto 0x6e9533c3;
                    case 0x10b:
                        goto 0x6e952203;
                    case 0x113:
                        goto 0x6e952520;
                    case 0x12e:
                        goto 0x6e954587;
                    case 0x6d:
                    case 0x6e:
                    case 0x6f:
                    case 0x70:
                    case 0x71:
                    case 0x72:
                    case 0x73:
                    case 0x74:
                    case 0x75:
                    case 0x76:
                    case 0x77:
                    case 0x78:
                    case 0x79:
                    case 0x7a:
                    case 0x7b:
                    case 0x7c:
                    case 0x7d:
                    case 0x7e:
                    case 0x7f:
                    case 0x80:
                    case 0x81:
                    case 0x82:
                    case 0x83:
                    case 0x84:
                    case 0x85:
                    case 0x86:
                    case 0x87:
                    case 0x88:
                    case 0x89:
                    case 0x8a:
                    case 0x8b:
                    case 0x8c:
                        goto 0x6e951e80;
                    case 0:
                    case 9:
                    case 10:
                        goto 0x6e951cb0;
                    }
                }
                goto addr_6e951cca_154;
                edi124 = *reinterpret_cast<void***>(eax73 + 1);
                ebx42 = ebp9;
                eax73 = eax73 + 5;
                addr_6e951cb8_156:
                if (reinterpret_cast<unsigned char>(ebx42) > reinterpret_cast<unsigned char>(63)) 
                    goto addr_6e951d20_139;
                ebp9 = ebx42 + 1;
                (esp35 + reinterpret_cast<unsigned char>(ebx42) * 4)[48] = edi124;
                continue;
                if (!ebp9) 
                    goto addr_6e951d20_139;
                ebx42 = ebp9 + 0xffffffff;
                edi125 = *reinterpret_cast<void****>(esp35 + reinterpret_cast<unsigned char>(ebx42) * 4 + 48);
                if (*reinterpret_cast<unsigned char*>(&edx44) == 31) {
                    edi124 = reinterpret_cast<void**>(-reinterpret_cast<uint32_t>(edi125));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                } else {
                    if (*reinterpret_cast<unsigned char*>(&edx44) <= 31) {
                        if (*reinterpret_cast<unsigned char*>(&edx44) == 6) {
                            edi124 = *edi125;
                            eax73 = esi52;
                            goto addr_6e951cb8_156;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx44) != 25) 
                                goto addr_6e951d20_139;
                            eax73 = esi52;
                            edx126 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi125) >> 31);
                            edi124 = reinterpret_cast<void**>((reinterpret_cast<uint32_t>(edi125) ^ edx126) - edx126);
                            goto addr_6e951cb8_156;
                        }
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&edx44) == 35) {
                            eax73 = esi52;
                            ebp9 = reinterpret_cast<void**>(0);
                            ecx46 = reinterpret_cast<void**>(0);
                            esi52 = ebx42;
                            do {
                                ++eax73;
                                ebx127 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 0xffffffff));
                                edx128 = (ebx127 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                                ecx46 = ecx46 + 7;
                                ebp9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp9) | edx128);
                            } while (*reinterpret_cast<signed char*>(&ebx127) < 0);
                            ebx42 = esi52;
                            edi124 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(edi125) + reinterpret_cast<unsigned char>(ebp9));
                            goto addr_6e951cb8_156;
                        } else {
                            if (*reinterpret_cast<unsigned char*>(&edx44) == 0x94) {
                                edx129 = eax73 + 2;
                                eax130 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 1));
                                if (*reinterpret_cast<unsigned char*>(&eax130) == 2) {
                                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*edi125)));
                                    eax73 = edx129;
                                    goto addr_6e951cb8_156;
                                } else {
                                    if (*reinterpret_cast<unsigned char*>(&eax130) <= 2) {
                                        if (*reinterpret_cast<unsigned char*>(&eax130) != 1) 
                                            goto addr_6e951d20_139;
                                        edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*edi125)));
                                        eax73 = edx129;
                                        goto addr_6e951cb8_156;
                                    } else {
                                        if (*reinterpret_cast<unsigned char*>(&eax130) == 4) 
                                            goto addr_6e9521ad_177;
                                        if (*reinterpret_cast<unsigned char*>(&eax130) != 8) 
                                            goto addr_6e951d20_139;
                                        addr_6e9521ad_177:
                                        edi124 = *edi125;
                                        eax73 = edx129;
                                        goto addr_6e951cb8_156;
                                    }
                                }
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&edx44) != 32) 
                                    goto addr_6e951d20_139;
                                edi124 = reinterpret_cast<void**>(~reinterpret_cast<uint32_t>(edi125));
                                eax73 = esi52;
                                goto addr_6e951cb8_156;
                            }
                        }
                    }
                }
                edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 1))));
                ebx42 = ebp9;
                eax73 = eax73 + 2;
                goto addr_6e951cb8_156;
                edi124 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<signed char>(*reinterpret_cast<void***>(eax73 + 1))));
                ebx42 = ebp9;
                eax73 = eax73 + 2;
                goto addr_6e951cb8_156;
                edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax73 + 1))));
                ebx42 = ebp9;
                eax73 = eax73 + 3;
                goto addr_6e951cb8_156;
                edi124 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73 + 1))));
                ebx42 = ebp9;
                eax73 = eax73 + 3;
                goto addr_6e951cb8_156;
                edi124 = *reinterpret_cast<void***>(eax73 + 1);
                ebx42 = ebp9;
                eax73 = eax73 + 9;
                goto addr_6e951cb8_156;
                eax73 = esi52;
                edi124 = reinterpret_cast<void**>(0);
                ecx46 = reinterpret_cast<void**>(0);
                esi52 = esi52;
                do {
                    ++eax73;
                    ebx131 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 0xffffffff));
                    edx132 = (ebx131 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                    ecx46 = ecx46 + 7;
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi124) | edx132);
                } while (*reinterpret_cast<signed char*>(&ebx131) < 0);
                ebx42 = ebp9;
                goto addr_6e951cb8_156;
                eax73 = fun_6e950b70(v133, v134);
                esp35 = esp35 - 4 + 4;
                ebx42 = ebp9;
                edi124 = v135;
                goto addr_6e951cb8_156;
                if (!ebp9) 
                    goto addr_6e951d20_139;
                edi124 = (esp35 + reinterpret_cast<unsigned char>(ebp9) * 4)[44];
                addr_6e951f64_192:
                ebx42 = ebp9;
                eax73 = esi52;
                goto addr_6e951cb8_156;
                if (reinterpret_cast<signed char>(ebp9) <= reinterpret_cast<signed char>(1)) 
                    goto addr_6e951d20_139;
                edi124 = (esp35 + reinterpret_cast<unsigned char>(ebp9) * 4)[40];
                ebx42 = ebp9;
                eax73 = esi52;
                goto addr_6e951cb8_156;
                eax136 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 1))));
                ecx46 = ebp9 + 0xffffffff;
                if (reinterpret_cast<signed char>(eax136) >= reinterpret_cast<signed char>(ecx46)) 
                    goto addr_6e951d20_139;
                ecx46 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) - reinterpret_cast<unsigned char>(eax136));
                ebx42 = ebp9;
                edi124 = (esp35 + reinterpret_cast<unsigned char>(ecx46) * 4)[48];
                eax73 = eax73 + 2;
                goto addr_6e951cb8_156;
                if (reinterpret_cast<signed char>(ebp9) <= reinterpret_cast<signed char>(1)) 
                    goto addr_6e951d20_139;
                edx137 = reinterpret_cast<uint32_t>(edx44 - 26);
                ecx46 = (esp35 + reinterpret_cast<unsigned char>(ebp9) * 4)[44];
                ebx42 = ebp9 + 0xfffffffe;
                eax73 = (esp35 + reinterpret_cast<unsigned char>(ebx42) * 4)[48];
                if (*reinterpret_cast<unsigned char*>(&edx137) > 20) 
                    goto addr_6e951d20_139;
                switch (*reinterpret_cast<unsigned char*>(&edx137)) {
                case 0:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) & reinterpret_cast<unsigned char>(eax73));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 1:
                    __asm__("cdq ");
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax73) / reinterpret_cast<signed char>(ecx46));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 2:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) - reinterpret_cast<unsigned char>(ecx46));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 3:
                    edx138 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) % reinterpret_cast<unsigned char>(ecx46));
                    eax73 = esi52;
                    edi124 = edx138;
                    goto addr_6e951cb8_156;
                case 4:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) * reinterpret_cast<unsigned char>(eax73));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 7:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) | reinterpret_cast<unsigned char>(eax73));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 8:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) + reinterpret_cast<unsigned char>(eax73));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 10:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) << *reinterpret_cast<unsigned char*>(&ecx46));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 11:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax73) >> *reinterpret_cast<unsigned char*>(&ecx46));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 12:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<signed char>(eax73) >> *reinterpret_cast<unsigned char*>(&ecx46));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 13:
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx46) ^ reinterpret_cast<unsigned char>(eax73));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 15:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax73 == ecx46))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 16:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax73) >= reinterpret_cast<signed char>(ecx46)))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 17:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax73) > reinterpret_cast<signed char>(ecx46)))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 18:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax73) <= reinterpret_cast<signed char>(ecx46)))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 19:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax73) < reinterpret_cast<signed char>(ecx46)))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 20:
                    edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax73 != ecx46))));
                    eax73 = esi52;
                    goto addr_6e951cb8_156;
                case 53:
                    goto 0x6e954c30;
                case 49:
                    goto 0x6e954590;
                case 44:
                case 52:
                    goto 0x6e954580;
                case 41:
                    goto 0x6e9545d0;
                case 40:
                case 43:
                case 51:
                    goto 0x6e954550;
                case 28:
                    goto 0x6e9533c3;
                case 42:
                    goto 0x6e9545f6;
                case 26:
                    goto 0x6e9524d6;
                case 27:
                case 30:
                case 38:
                    goto 0x6e953370;
                case 25:
                    goto 0x6e952425;
                case 45:
                case 46:
                case 47:
                case 48:
                    goto 0x6e954601;
                case 21:
                    goto 0x6e952442;
                case 24:
                    goto 0x6e952480;
                case 32:
                case 33:
                case 34:
                case 35:
                    goto 0x6e953400;
                case 37:
                    goto 0x6e9533a7;
                case 29:
                    goto 0x6e9533f0;
                case 5:
                case 6:
                case 9:
                case 14:
                    goto 0x6e951d20;
                case 36:
                    goto 0x6e9533b0;
                case 31:
                case 39:
                    goto 0x6e9533a0;
                case 23:
                    goto 0x6e952520;
                case 50:
                    goto 0x6e954587;
                case 22:
                    goto 0x6e952541;
                }
                edi124 = edi47 - 48;
                ebx42 = ebp9;
                eax73 = esi52;
                goto addr_6e951cb8_156;
                eax139 = reinterpret_cast<struct s26*>(edi47 + 0xffffffb0);
                if (reinterpret_cast<int32_t>(eax139) > reinterpret_cast<int32_t>(17)) 
                    goto addr_6e951d20_139;
                ebx42 = v140;
                edi124 = *reinterpret_cast<void***>(ebx42 + reinterpret_cast<uint32_t>(eax139) * 4);
                if (!(*reinterpret_cast<unsigned char*>(ebx42 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx42) + reinterpret_cast<uint32_t>(eax139) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax139) + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_139;
                    edi124 = *reinterpret_cast<void***>(edi124);
                    goto addr_6e951f64_192;
                }
                edi141 = reinterpret_cast<struct s27*>(edi47 - 0x70);
                eax73 = fun_6e950b70(v142, v143);
                esp35 = esp35 - 4 + 4;
                if (reinterpret_cast<int32_t>(edi141) > reinterpret_cast<int32_t>(17)) 
                    goto addr_6e951d20_139;
                esi52 = v144;
                ecx46 = *reinterpret_cast<void***>(esi52 + reinterpret_cast<uint32_t>(edi141) * 4);
                if (!(*reinterpret_cast<unsigned char*>(esi52 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi52) + reinterpret_cast<uint32_t>(edi141) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(edi141) + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_139;
                    ecx46 = *reinterpret_cast<void***>(ecx46);
                }
                ebx42 = ebp9;
                edi124 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v145) + reinterpret_cast<unsigned char>(ecx46));
                goto addr_6e951cb8_156;
                eax73 = esi52;
                ecx46 = reinterpret_cast<void**>(0);
                esi52 = reinterpret_cast<void**>(0);
                do {
                    ++eax73;
                    ebx42 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 0xffffffff))));
                    edx146 = (reinterpret_cast<unsigned char>(ebx42) & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                    ecx46 = ecx46 + 7;
                    esi52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(esi52) | edx146);
                } while (*reinterpret_cast<signed char*>(&ebx42) < reinterpret_cast<signed char>(0));
                if (reinterpret_cast<signed char>(esi52) > reinterpret_cast<signed char>(17)) 
                    goto addr_6e951d20_139;
                ebx42 = v147;
                edi124 = *reinterpret_cast<void***>(ebx42 + reinterpret_cast<unsigned char>(esi52) * 4);
                if (!(*reinterpret_cast<unsigned char*>(ebx42 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ebx42) + reinterpret_cast<unsigned char>(esi52) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(esi52 + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_139;
                } else {
                    addr_6e951e76_232:
                    ebx42 = ebp9;
                    goto addr_6e951cb8_156;
                }
                addr_6e951e74_233:
                edi124 = *reinterpret_cast<void***>(edi124);
                goto addr_6e951e76_232;
                ebx42 = reinterpret_cast<void**>(0);
                ecx46 = reinterpret_cast<void**>(0);
                do {
                    ++esi52;
                    edx148 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi52 + 0xffffffff));
                    eax149 = (edx148 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                    ecx46 = ecx46 + 7;
                    ebx42 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx42) | eax149);
                } while (*reinterpret_cast<signed char*>(&edx148) < 0);
                eax73 = fun_6e950b70(v150, v151);
                esp35 = esp35 - 4 + 4;
                if (reinterpret_cast<signed char>(ebx42) > reinterpret_cast<signed char>(17)) 
                    goto addr_6e951d20_139;
                esi52 = v152;
                edi153 = *reinterpret_cast<void***>(esi52 + reinterpret_cast<unsigned char>(ebx42) * 4);
                if (!(*reinterpret_cast<unsigned char*>(esi52 + 99) & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(esi52) + reinterpret_cast<unsigned char>(ebx42) + 0x6c)) {
                    if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx42 + 0x6e95d028)) != 4) 
                        goto addr_6e951d20_139;
                    edi153 = *reinterpret_cast<void***>(edi153);
                }
                edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi153) + reinterpret_cast<uint32_t>(v154));
                ebx42 = ebp9;
                goto addr_6e951cb8_156;
                esi52 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 1))));
                ebx42 = esi52;
                if (*reinterpret_cast<unsigned char*>(&ebx42) == 0xff) 
                    goto addr_6e951d20_139;
                ebx42 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx42) & 0x70);
                if (*reinterpret_cast<unsigned char*>(&ebx42) == 32) {
                    v68 = v155->f84;
                } else {
                    if (*reinterpret_cast<unsigned char*>(&ebx42) <= 32) {
                        if (!*reinterpret_cast<unsigned char*>(&ebx42)) 
                            goto addr_6e95214b_246;
                        if (*reinterpret_cast<unsigned char*>(&ebx42) != 16) 
                            goto addr_6e951d20_139; else 
                            goto addr_6e95214b_246;
                    } else {
                        if (*reinterpret_cast<unsigned char*>(&ebx42) != 64) {
                            esi52 = esi52;
                            if (*reinterpret_cast<unsigned char*>(&ebx42) == 80) {
                                addr_6e95214b_246:
                            } else {
                                if (*reinterpret_cast<unsigned char*>(&ebx42) != 48) 
                                    goto addr_6e951d20_139;
                            }
                        }
                    }
                }
                edx156 = esi52;
                edi47 = eax73 + 2;
                v67 = edi47;
                if (*reinterpret_cast<signed char*>(&edx156) == 80) {
                    ebx42 = ebp9;
                    eax157 = reinterpret_cast<struct s85*>(reinterpret_cast<uint32_t>(eax73 + 5) & 0xfffffffc);
                    edi124 = eax157->f0;
                    eax73 = reinterpret_cast<void**>(&eax157->f4);
                    goto addr_6e951cb8_156;
                } else {
                    edx158 = reinterpret_cast<unsigned char>(esi52) & 15;
                    if (*reinterpret_cast<unsigned char*>(&edx158) > 12) 
                        goto addr_6e951d20_139;
                    goto *reinterpret_cast<int32_t*>(*reinterpret_cast<unsigned char*>(&edx158) * 4 + 0x6e957910);
                }
                edi124 = *reinterpret_cast<void***>(eax73 + 2);
                eax73 = eax73 + 6;
                addr_6e9520c6_258:
                if (!edi124) 
                    goto addr_6e951e76_232;
                edx159 = v68;
                ebx160 = esi52;
                if (*reinterpret_cast<unsigned char*>(&ebx42) == 16) {
                    edx159 = v67;
                }
                edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi124) + reinterpret_cast<unsigned char>(edx159));
                if (*reinterpret_cast<signed char*>(&ebx160) < 0) 
                    goto addr_6e951e74_233;
                ebx42 = ebp9;
                goto addr_6e951cb8_156;
                eax73 = v67;
                edi124 = reinterpret_cast<void**>(0);
                ecx46 = reinterpret_cast<void**>(0);
                v161 = ebp9;
                ebp162 = ebx42;
                do {
                    ++eax73;
                    ebx163 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax73 + 0xffffffff));
                    edx164 = (ebx163 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                    ecx46 = ecx46 + 7;
                    edi124 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi124) | edx164);
                } while (*reinterpret_cast<signed char*>(&ebx163) < 0);
                ebx42 = ebp162;
                ebp9 = v161;
                goto addr_6e9520c6_258;
                edi124 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(eax73 + 2))));
                eax73 = eax73 + 4;
                goto addr_6e9520c6_258;
                edi124 = *reinterpret_cast<void***>(eax73 + 2);
                eax73 = eax73 + 10;
                goto addr_6e9520c6_258;
                eax73 = fun_6e950b70(v165, v166);
                esp35 = esp35 - 4 + 4;
                edi124 = v167;
                goto addr_6e9520c6_258;
                edi124 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(eax73 + 2))));
                eax73 = eax73 + 4;
                goto addr_6e9520c6_258;
            }
        }
        addr_6e951cca_154:
    } while (!ebp9);
    goto addr_6e951cce_270;
    edx168 = *reinterpret_cast<void***>(ecx46);
    addr_6e953375_272:
    if (edx168) {
        eax169 = reinterpret_cast<unsigned char>(esi52) & 0x70;
        eax170 = esi52;
        if (*reinterpret_cast<signed char*>(&eax169) != 16) {
            edi47 = v171;
        }
        edx168 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx168) + reinterpret_cast<unsigned char>(edi47));
        if (*reinterpret_cast<signed char*>(&eax170) < 0) {
            edx168 = *reinterpret_cast<void***>(edx168);
        }
    }
    *v172 = edx168;
    goto v173;
    ebx174 = ecx46;
    ebp175 = reinterpret_cast<void**>(0);
    ecx176 = 0;
    esi52 = esi52;
    do {
        ++ebx174;
        edx177 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx174 + 0xffffffff));
        eax178 = (edx177 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx176);
        ecx176 = ecx176 + 7;
        ebp175 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp175) | eax178);
    } while (*reinterpret_cast<signed char*>(&edx177) < 0);
    edx168 = ebp175;
    goto addr_6e953375_272;
    edx168 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx46))));
    goto addr_6e953375_272;
    edx168 = *reinterpret_cast<void***>(ecx46);
    goto addr_6e953375_272;
    fun_6e955970(ecx46, v179, v180, v181, v182, v183, v184, v185, v186);
    *v187 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx46 + 3) & 0xfffffffc);
    goto v188;
    fun_6e953120(v189);
    edx168 = v190;
    goto addr_6e953375_272;
    edx168 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx46))));
    goto addr_6e953375_272;
    edx191 = *reinterpret_cast<void***>(ecx46);
    addr_6e954555_288:
    if (edx191) {
        ecx192 = reinterpret_cast<unsigned char>(eax73) & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx192) != 16) {
            edi47 = v193;
        }
        edx191 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx191) + reinterpret_cast<unsigned char>(edi47));
        if (*reinterpret_cast<signed char*>(&eax73) < 0) {
            edx191 = *reinterpret_cast<void***>(edx191);
        }
    }
    *v194 = edx191;
    goto v195;
    ebx196 = ecx46;
    edx191 = reinterpret_cast<void**>(0);
    ecx197 = 0;
    ebp198 = eax73;
    do {
        ++ebx196;
        eax199 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx196 + 0xffffffff));
        esi200 = (eax199 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx197);
        ecx197 = ecx197 + 7;
        edx191 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx191) | esi200);
    } while (*reinterpret_cast<signed char*>(&eax199) < 0);
    eax73 = ebp198;
    goto addr_6e954555_288;
    edx191 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx46))));
    goto addr_6e954555_288;
    edx191 = *reinterpret_cast<void***>(ecx46);
    goto addr_6e954555_288;
    fun_6e955970(ecx46, v201, v202, v203, v204, v205, v206, v207, v208);
    *v209 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx46 + 3) & 0xfffffffc);
    goto v210;
    ebx196 = ecx46;
    edx191 = reinterpret_cast<void**>(0);
    ecx211 = 0;
    ebp212 = eax73;
    do {
        ++ebx196;
        eax213 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx196 + 0xffffffff));
        esi214 = (eax213 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx211);
        ecx211 = ecx211 + 7;
        edx191 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx191) | esi214);
    } while (*reinterpret_cast<signed char*>(&eax213) < 0);
    eax73 = ebp212;
    if (ecx211 <= 31 && eax213 & 64) {
        edx191 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx191) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx211));
        goto addr_6e954555_288;
    }
    edx191 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx46))));
    goto addr_6e954555_288;
    zf215 = g6e956014 == 2;
    if (!zf215) {
        g6e956014 = 2;
    }
    if (v216 == 2) {
        ebx217 = reinterpret_cast<int32_t*>(0x6e960028);
        if (!1) {
            do {
                eax218 = *ebx217;
                if (eax218) {
                    eax218(v219);
                }
                ++ebx217;
            } while (!reinterpret_cast<int1_t>(ebx217 == 0x6e960028));
            goto v220;
        }
    } else {
        if (v216 == 1) {
            fun_6e955550(v221, 1, v222);
        }
    }
    goto v223;
    addr_6e951cce_270:
    goto v224;
    while (1) {
        addr_6e952519_319:
        while (1) {
            addr_6e952420_320:
            fun_6e955970(ecx46, v225, v226, v227, v228, v229, v230, v231, v232);
            esp35 = esp35 - 4 + 4;
            while (1) {
                eax233 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v234) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)));
                if (*reinterpret_cast<unsigned char*>(esi52 + 0x6e95d028) > 4) 
                    break;
                while (1) {
                    *reinterpret_cast<void***>(v229) = reinterpret_cast<void**>(1);
                    while (1) {
                        edi47 = v228;
                        *reinterpret_cast<void***>(edi47) = eax233;
                        while (1) {
                            ++esi52;
                            ebx42 = ebx42 + 8;
                            v229 = reinterpret_cast<void**>(&v235->f1);
                            v228 = reinterpret_cast<void**>(&v236->f4);
                            if (reinterpret_cast<int1_t>(esi52 == 18)) 
                                goto addr_6e952457_325;
                            if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42)) > reinterpret_cast<unsigned char>(5)) 
                                continue;
                            eax73 = *reinterpret_cast<void***>(ebx42);
                            switch (eax73) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        eax233 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v237) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)));
                        if (!(v238->f99 & 64)) 
                            continue;
                        addr_6e9524ca_330:
                        *reinterpret_cast<void***>(v229) = reinterpret_cast<void**>(0);
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp35) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)) + 0x9c)) 
                            goto addr_6e952560_332;
                        eax233 = (esp35 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)) * 4)[48];
                        if (!(v239->f99 & 64)) 
                            continue;
                        goto addr_6e9524ca_330;
                        eax240 = *reinterpret_cast<void***>(ebx42 + 0xfffffffc);
                        edi241 = ebx42;
                        esi52 = esi52;
                        do {
                            ++eax240;
                            ebx242 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax240 + 0xffffffff));
                        } while (*reinterpret_cast<signed char*>(&ebx242) < 0);
                        ebx42 = edi241;
                        ecx46 = reinterpret_cast<void**>(esp35 + 48);
                        eax233 = fun_6e951c60(ecx46, v243);
                        esp35 = esp35 - 4 + 12 + 4;
                        if (v244->f99 & 64) 
                            goto addr_6e9524ca_330;
                    }
                    eax245 = *reinterpret_cast<void***>(ebx42 + 0xfffffffc);
                    edi246 = ebx42;
                    do {
                        ++eax245;
                        ebx247 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax245 + 0xffffffff));
                    } while (*reinterpret_cast<signed char*>(&ebx247) < 0);
                    ebx42 = edi246;
                    ecx46 = reinterpret_cast<void**>(esp35 + 48);
                    eax233 = fun_6e951c60(ecx46, v248);
                    esp35 = esp35 - 4 + 12 + 4;
                    addr_6e95250c_341:
                    if (*reinterpret_cast<unsigned char*>(esi52 + 0x6e95d028) <= 4) 
                        continue; else 
                        goto addr_6e952519_319;
                    addr_6e952560_332:
                    if (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)) > reinterpret_cast<signed char>(17)) 
                        goto addr_6e952420_320;
                    edx249 = *reinterpret_cast<unsigned char*>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc) + 0x6e95d028);
                    eax233 = (esp35 + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx42 + 0xfffffffc)) * 4)[48];
                    if (!(v250 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx249) != 4) 
                            goto addr_6e952420_320;
                        eax233 = *reinterpret_cast<void***>(eax233);
                        goto addr_6e95250c_341;
                    }
                }
            }
        }
    }
    addr_6e952457_325:
    if (v251->f187) {
        v252->f96 = v252->f96 | 0x80000000;
        goto v253;
    } else {
        v252->f96 = v252->f96 & 0x7fffffff;
        goto v254;
    }
}

int32_t pthread_once = 0x1f4b4;

int32_t fun_6e954ad0(void** a1, void** a2) {
    goto pthread_once;
}

void fun_6e952320(void** a1, void** a2, int32_t a3, void** a4);

struct s93 {
    signed char[180] pad180;
    int32_t f180;
};

struct s94 {
    void** f0;
    signed char[75] pad76;
    void** f76;
    signed char[22] pad99;
    unsigned char f99;
};

void fun_6e9527b0(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    void** v9;
    void** ebx10;
    int32_t esi11;
    struct s93* edx12;
    struct s94* eax13;

    fun_6e952320(v9, ebx10, esi11, __return_address());
    if (*reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx12) + edx12->f180 * 8 + 4) == 6) {
        eax13->f76 = reinterpret_cast<void**>(0);
        goto a4;
    }
    if (edx12->f180 > 17) 
        goto addr_6e9527ec_4;
    ecx = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(eax13) + edx12->f180 * 4);
    if (!(eax13->f99 & 64) || !*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(eax13) + edx12->f180 + 0x6c)) {
        if (static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(edx12->f180 + 0x6e95d028)) == 4) {
            addr_6e9527f1_7:
            ecx = *reinterpret_cast<void***>(ecx);
        } else {
            addr_6e9527ec_4:
            fun_6e955970(ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8);
            goto addr_6e9527f1_7;
        }
    }
    eax13->f76 = ecx;
    goto a4;
}

int32_t memcpy = 0x1f414;

void fun_6e955980(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, int32_t a7, void** a8, void** a9, void** a10) {
    goto memcpy;
}

struct s95 {
    int32_t f0;
    int32_t f4;
    signed char[4] pad12;
    int32_t f12;
    int32_t f16;
};

struct s96 {
    int32_t f0;
    void** f4;
    signed char[11] pad16;
    void** f16;
};

struct s97 {
    signed char[72] pad72;
    void* f72;
    signed char[20] pad96;
    uint32_t f96;
};

int32_t fun_6e952810(int32_t a1, int32_t a2, int32_t a3, int32_t a4, struct s95* a5, void* a6) {
    struct s96* esi7;
    struct s96* eax8;
    struct s97* ebx9;
    struct s97* edx10;
    void** ecx11;
    void* v12;
    int32_t v13;
    int32_t v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    int32_t eax19;
    void** edx20;
    uint32_t edi21;
    int32_t v22;
    int32_t edx23;
    int32_t eax24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    int32_t v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** eax41;
    void** esi42;
    void** ebx43;
    void** edi44;
    void** ebp45;
    int32_t v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    int32_t eax51;
    void** eax52;
    void** edx53;
    int32_t eax54;
    void** v55;
    void** edx56;
    void** eax57;
    int32_t eax58;
    void** ecx59;
    void** ebx60;
    int32_t eax61;
    int32_t v62;
    int32_t v63;
    int32_t v64;

    esi7 = eax8;
    ebx9 = edx10;
    while (eax19 = fun_6e951400(ecx11, v12, v13, v14, v15, v16, v17, v18), edx20 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebx9->f72) - (ebx9->f96 >> 31)), ecx11 = reinterpret_cast<void**>(0), *reinterpret_cast<unsigned char*>(&ecx11) = reinterpret_cast<uint1_t>(esi7->f16 == edx20), edi21 = reinterpret_cast<unsigned char>(ecx11) << 2, eax19 == 0) {
        if (v22) {
            edx23 = esi7->f0;
            ecx11 = esi7->f4;
            edx20 = reinterpret_cast<void**>(edi21 | 2);
            eax24 = reinterpret_cast<int32_t>(v22(1, edx20, edx23, ecx11, esi7, ebx9));
            if (eax24 == 7) 
                goto addr_6e9528a3_5;
            if (eax24 != 8) 
                break;
        }
        if (edi21) 
            goto addr_6e9528b2_8;
        fun_6e9527b0(ecx11, v25, v26, v27, v28, v29, v30, v31);
    }
    goto v32;
    addr_6e9528b2_8:
    eax41 = fun_6e955970(ecx11, v33, v34, v35, v36, v37, v38, v39, v40);
    esi42 = eax41;
    ebx43 = edx20;
    edi44 = *reinterpret_cast<void***>(eax41 + 12);
    ebp45 = *reinterpret_cast<void***>(eax41 + 16);
    while ((eax51 = fun_6e951400(ecx11, 1, 10, v46, v47, v48, v49, v50), eax51 == 5) || !eax51) {
        if (eax51 == 5) 
            goto addr_6e952988_14;
        eax52 = *reinterpret_cast<void***>(esi42);
        edx53 = *reinterpret_cast<void***>(esi42 + 4);
        eax54 = reinterpret_cast<int32_t>(edi44(1, 10, eax52, edx53, esi42, ebx43, ebp45));
        if (eax54) 
            break;
        ecx11 = v55;
        if (ecx11) {
            edx56 = *reinterpret_cast<void***>(esi42 + 4);
            eax57 = *reinterpret_cast<void***>(esi42);
            eax58 = reinterpret_cast<int32_t>(ecx11(1, 10, eax57, edx56, esi42, ebx43, ebp45));
            if (eax58 == 7) 
                goto addr_6e9529c0_18;
            if (eax58 != 8) 
                break;
        }
        fun_6e9527b0(ecx11, 1, 10, eax52, edx53, esi42, ebx43, ebp45);
    }
    goto addr_6e952978_21;
    addr_6e952988_14:
    ecx59 = *reinterpret_cast<void***>(esi42);
    ebx60 = *reinterpret_cast<void***>(esi42 + 4);
    eax61 = reinterpret_cast<int32_t>(edi44(1, 26, ecx59, ebx60, esi42, ebx43, ebp45));
    if (eax61) {
        addr_6e952978_21:
        goto v62;
    }
    addr_6e9529c0_18:
    goto v63;
    addr_6e9528a3_5:
    goto v64;
}

struct s98 {
    void** f0;
    signed char[15] pad16;
    int32_t f16;
    signed char[52] pad72;
    uint32_t f72;
    signed char[23] pad99;
    unsigned char f99;
    signed char[12] pad112;
    signed char f112;
};

struct s99 {
    void** f0;
    signed char[15] pad16;
    void** f16;
    signed char[55] pad72;
    void** f72;
    signed char[26] pad99;
    unsigned char f99;
    signed char[4] pad104;
    int32_t f104;
    signed char[4] pad112;
    signed char f112;
};

struct s100 {
    signed char[96] pad96;
    void** f96;
};

struct s101 {
    signed char[112] pad112;
    signed char f112;
};

unsigned char g6e95d02c;

uint32_t fun_6e9529d0(int32_t a1, int32_t a2, int32_t a3, int32_t a4, struct s95* a5, void* a6) {
    struct s98* edi7;
    struct s98* eax8;
    void** v9;
    void** esi10;
    struct s99* esi11;
    struct s99* edx12;
    void** v13;
    void** ebx14;
    void*** esp15;
    void** eax16;
    struct s100* edx17;
    struct s101* edx18;
    void** ecx19;
    int1_t zf20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    int32_t ebx29;
    void** edx30;
    void** v31;
    void** v32;
    void** v33;
    int32_t v34;
    uint32_t eax35;
    void** eax36;

    edi7 = eax8;
    v9 = esi10;
    esi11 = edx12;
    v13 = ebx14;
    esp15 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 32);
    eax16 = edx17->f96;
    if (!(reinterpret_cast<unsigned char>(eax16) & 0x40000000)) 
        goto addr_6e952a16_2;
    if (edx18->f112) 
        goto addr_6e9529ea_4;
    while (1) {
        addr_6e952a16_2:
        ecx19 = esi11->f16;
        if (!ecx19) {
            zf20 = g6e95d02c == 4;
            if (!zf20) {
                addr_6e952a11_6:
                eax16 = fun_6e955970(ecx19, v21, v22, v23, v24, v25, v26, v27, v28);
                esp15 = esp15 - 4 + 4;
                continue;
            } else {
                v28 = esi11->f72;
                if (reinterpret_cast<unsigned char>(eax16) & 0x40000000) {
                    esi11->f112 = 0;
                }
                esi11->f16 = reinterpret_cast<void**>(esp15 + 28);
            }
        }
        addr_6e9529ea_4:
        ebx29 = 0;
        esi11 = esi11;
        do {
            addr_6e9529f0_10:
            ecx19 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(edi7) + ebx29 * 4);
            if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(edi7) + ebx29 + 0x6c)) 
                goto addr_6e952a11_6;
            if (!*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esi11) + ebx29 + 0x6c)) {
                if (*reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi11) + ebx29 * 4) && (ecx19 && (esi11 = esi11, *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi11) + ebx29 * 4) != ecx19))) {
                    edx30 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(ebx29 + 0x6e95d028)));
                    v22 = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi11) + ebx29 * 4);
                    v21 = ecx19;
                    v23 = edx30;
                    fun_6e955980(v21, v22, v23, v31, v32, v33, v34, v28, v13, v9);
                    esp15 = esp15 - 4 + 4;
                }
            } else {
                if (ecx19) {
                    if (*reinterpret_cast<unsigned char*>(ebx29 + 0x6e95d028) != 4) 
                        goto addr_6e952a11_6;
                    ++ebx29;
                    *reinterpret_cast<void***>(ecx19) = *reinterpret_cast<void***>(reinterpret_cast<int32_t>(esi11) + ebx29 * 4);
                    if (ebx29 != 17) 
                        goto addr_6e9529f0_10; else 
                        goto addr_6e952a9e_17;
                }
            }
            ++ebx29;
        } while (ebx29 != 17);
        addr_6e952a75_19:
        if (!(edi7->f99 & 64)) 
            goto addr_6e952a7d_20;
        if (edi7->f112) 
            break;
        addr_6e952a7d_20:
        if (edi7->f16) 
            goto addr_6e952a84_22;
        eax35 = g6e95d02c;
        if (!(esi11->f99 & 64)) 
            goto addr_6e952ac3_24;
        if (esi11->f112) 
            goto addr_6e952ad2_26;
        addr_6e952ac3_24:
        if (eax35 != 4) 
            goto addr_6e952a11_6; else 
            goto addr_6e952acc_27;
        addr_6e952a9e_17:
        goto addr_6e952a75_19;
    }
    return 0;
    addr_6e952a84_22:
    return 0;
    addr_6e952ad2_26:
    eax36 = esi11->f16;
    addr_6e952ad4_29:
    return reinterpret_cast<unsigned char>(eax36) - edi7->f72 + esi11->f104;
    addr_6e952acc_27:
    eax36 = *reinterpret_cast<void***>(esi11->f16);
    goto addr_6e952ad4_29;
}

void fun_6e952d30(int32_t a1, int32_t a2, int32_t a3, int32_t a4, struct s95* a5, void* a6) {
    return;
}

struct s102 {
    signed char[12] pad12;
    int32_t f12;
};

struct s103 {
    signed char[16] pad16;
    void** f16;
};

int32_t fun_6e9528c0() {
    void** esi1;
    void** eax2;
    void** ebx3;
    void** edx4;
    int32_t edi5;
    struct s102* eax6;
    void** ebp7;
    struct s103* eax8;
    void** ecx9;
    int32_t v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    int32_t eax15;
    void** eax16;
    void** edx17;
    int32_t eax18;
    void** v19;
    void** edx20;
    void** eax21;
    int32_t eax22;
    void** ecx23;
    void** ebx24;
    int32_t eax25;
    int32_t v26;
    int32_t v27;

    esi1 = eax2;
    ebx3 = edx4;
    edi5 = eax6->f12;
    ebp7 = eax8->f16;
    while ((eax15 = fun_6e951400(ecx9, 1, 10, v10, v11, v12, v13, v14), eax15 == 5) || !eax15) {
        if (eax15 == 5) 
            goto addr_6e952988_4;
        eax16 = *reinterpret_cast<void***>(esi1);
        edx17 = *reinterpret_cast<void***>(esi1 + 4);
        eax18 = reinterpret_cast<int32_t>(edi5(1, 10, eax16, edx17, esi1, ebx3, ebp7));
        if (eax18) 
            break;
        ecx9 = v19;
        if (ecx9) {
            edx20 = *reinterpret_cast<void***>(esi1 + 4);
            eax21 = *reinterpret_cast<void***>(esi1);
            eax22 = reinterpret_cast<int32_t>(ecx9(1, 10, eax21, edx20, esi1, ebx3, ebp7));
            if (eax22 == 7) 
                goto addr_6e9529c0_8;
            if (eax22 != 8) 
                break;
        }
        fun_6e9527b0(ecx9, 1, 10, eax16, edx17, esi1, ebx3, ebp7);
    }
    goto addr_6e952978_11;
    addr_6e952988_4:
    ecx23 = *reinterpret_cast<void***>(esi1);
    ebx24 = *reinterpret_cast<void***>(esi1 + 4);
    eax25 = reinterpret_cast<int32_t>(edi5(1, 26, ecx23, ebx24, esi1, ebx3, ebp7));
    if (eax25) {
        addr_6e952978_11:
        goto v26;
    }
    addr_6e9529c0_8:
    goto v27;
}

struct s104 {
    signed char[16] pad16;
    void* f16;
    signed char[56] pad76;
    void** f76;
    signed char[19] pad96;
    int32_t f96;
    unsigned char f99;
    signed char[11] pad112;
    signed char f112;
};

struct s105 {
    signed char[1] pad1;
    signed char f1;
};

signed char g6e95d028;

signed char g6e95d02a;

signed char g6e95d029;

signed char g6e95d02b;

signed char g6e95d02e;

signed char g6e95d02f;

signed char g6e95d02d;

signed char g6e95d033;

signed char g6e95d034;

signed char g6e95d035;

signed char g6e95d036;

signed char g6e95d037;

signed char g6e95d038;

signed char g6e95d031;

signed char g6e95d030;

void fun_6e952620(void** ecx) {
    void** ebp2;
    signed char* edi3;
    signed char* eax4;
    struct s104* ebx5;
    struct s104* eax6;
    void* esp7;
    void** v8;
    void** edx9;
    void** esi10;
    uint32_t edx11;
    unsigned char al12;
    signed char* eax13;
    struct s105* eax14;
    void** ecx15;
    int1_t zf16;
    void* v17;
    int32_t v18;
    int32_t v19;
    void** v20;
    void** v21;
    void** v22;
    int32_t eax23;
    void*** esp24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    int1_t zf31;
    int32_t eax32;
    int1_t zf33;
    int1_t zf34;
    int1_t zf35;
    int32_t v36;
    void** v37;
    int32_t v38;

    ebp2 = ecx;
    edi3 = eax4;
    ebx5 = eax6;
    esp7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0xec);
    v8 = edx9;
    esi10 = reinterpret_cast<void**>(__return_address());
    edx11 = 0x80;
    if (al12 & 1) {
        *eax13 = 0;
        edi3 = &eax14->f1;
        *reinterpret_cast<unsigned char*>(&edx11) = 0x7f;
    }
    if (reinterpret_cast<uint32_t>(edi3) & 2) {
        edi3 = edi3 + 2;
        *reinterpret_cast<int16_t*>(edi3 - 2) = 0;
        edx11 = edx11 - 2;
    }
    ecx15 = reinterpret_cast<void**>(edx11 >> 2);
    zf16 = (*reinterpret_cast<unsigned char*>(&edx11) & 2) == 0;
    while (ecx15) {
        --ecx15;
        *edi3 = reinterpret_cast<signed char>(0);
        edi3 = edi3 + 4;
        esi10 = esi10 + 4;
    }
    if (!zf16) {
        edi3 = edi3 + 2;
        *reinterpret_cast<int16_t*>(edi3 - 2) = 0;
    }
    if (edx11 & 1) {
        *edi3 = 0;
    }
    ebx5->f76 = esi10;
    ebx5->f96 = 0x40000000;
    eax23 = fun_6e951400(ecx15, v17, v18, v19, v8, v20, v21, v22);
    esp24 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp7) - 4 + 12 + 4);
    if (eax23) {
        do {
            addr_6e9526ba_13:
            fun_6e955970(ecx15, v8, 0x6e951380, v25, v26, v27, v28, v29, v30);
            esp24 = esp24 - 4 + 4;
            addr_6e9526c0_14:
            g6e95d02c = 4;
            zf31 = g6e95d02c == 4;
            g6e95d028 = 4;
            g6e95d02a = 4;
            g6e95d029 = 4;
            g6e95d02b = 4;
            g6e95d02e = 4;
            g6e95d02f = 4;
            g6e95d02d = 4;
            g6e95d033 = 12;
            g6e95d034 = 12;
            g6e95d035 = 12;
            g6e95d036 = 12;
            g6e95d037 = 12;
            g6e95d038 = 12;
            g6e95d031 = 4;
            g6e95d030 = 4;
        } while (!zf31);
    } else {
        v8 = reinterpret_cast<void**>(0x6e95d024);
        eax32 = fun_6e954ad0(0x6e95d024, 0x6e951380);
        esp24 = esp24 - 4 + 4;
        if (!eax32) 
            goto addr_6e9526ad_16;
        zf33 = g6e95d028 == 0;
        if (zf33) 
            goto addr_6e9526c0_14;
        addr_6e9526ad_16:
        zf34 = g6e95d02c == 4;
        if (!zf34) 
            goto addr_6e9526ba_13;
    }
    zf35 = (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(ebx5) + 99) & 64) == 0;
    if (!zf35) {
        ebx5->f112 = 0;
    }
    ebx5->f16 = reinterpret_cast<void*>(esp24 + 28);
    fun_6e952320(v8, 0x6e951380, v36, v37);
    ebx5->f76 = ebp2;
    goto v38;
}

int32_t _Unwind_RaiseException(struct s95* a1) {
    void* ebp2;
    struct s95* ebx3;
    void** ecx4;
    void* v5;
    int32_t v6;
    int32_t v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    int32_t eax12;
    void** v13;
    void* v14;
    struct s95* v15;
    int32_t eax16;
    int32_t edx17;
    int32_t v18;
    int32_t v19;
    int32_t eax20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    int32_t eax28;
    int32_t ecx29;
    uint32_t eax30;
    int32_t v31;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebx3 = a1;
    fun_6e952620(__return_address());
    ecx4 = reinterpret_cast<void**>(32);
    while (ecx4) {
        --ecx4;
    }
    while (eax12 = fun_6e951400(ecx4, v5, v6, v7, v8, v9, v10, v11), eax12 != 5) {
        if (eax12) 
            goto addr_6e952df0_7;
        ecx4 = v13;
        if (ecx4) {
            v14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 0x158);
            v15 = ebx3;
            eax16 = ebx3->f0;
            edx17 = ebx3->f4;
            v18 = eax16;
            v19 = edx17;
            eax20 = reinterpret_cast<int32_t>(ecx4(1, 1, v18, v19, v15, v14));
            if (eax20 == 6) 
                goto addr_6e952e00_10;
            if (eax20 != 8) 
                goto addr_6e952df0_7;
        }
        fun_6e9527b0(ecx4, v21, v22, v23, v24, v25, v26, v27);
    }
    eax28 = 5;
    return eax28;
    addr_6e952df0_7:
    return 3;
    addr_6e952e00_10:
    ecx29 = 32;
    ebx3->f12 = 0;
    while (ecx29) {
        --ecx29;
    }
    ebx3->f16 = 1;
    eax28 = fun_6e952810(1, 1, v18, v19, v15, v14);
    if (eax28 == 7) {
        eax30 = fun_6e9529d0(1, 1, v18, v19, v15, v14);
        fun_6e952d30(v31, 0x6e952dda, v18, v19, v15, v14);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) + eax30 + 4) = 0x6e952dda;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) + eax30 + 4);
    }
}

void fun_6e953190(void** ecx, void** a2, void** a3) {
    void** ebp4;
    int32_t v5;
    int32_t edx6;
    void** edx7;
    int32_t v8;
    int32_t eax9;
    void** ebx10;
    void** edi11;
    void*** esi12;
    void** eax13;
    void* ecx14;
    void** v15;
    int32_t eax16;
    void*** edi17;
    void** v18;
    void** v19;
    int32_t eax20;
    void** eax21;
    void** eax22;

    ebp4 = ecx;
    v5 = edx6;
    edx7 = a2;
    v8 = eax9;
    ebx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx7) + reinterpret_cast<unsigned char>(edx7) + 1);
    if (reinterpret_cast<signed char>(ebx10) < reinterpret_cast<signed char>(a3)) {
        while (1) {
            edi11 = ebx10 + 1;
            if (reinterpret_cast<signed char>(a3) <= reinterpret_cast<signed char>(edi11)) {
                esi12 = reinterpret_cast<void***>(ebp4 + reinterpret_cast<unsigned char>(ebx10) * 4);
            } else {
                eax13 = *reinterpret_cast<void***>(ebp4 + reinterpret_cast<unsigned char>(edi11) * 4);
                ecx14 = reinterpret_cast<void*>(reinterpret_cast<unsigned char>(edi11) * 4);
                esi12 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp4) + reinterpret_cast<uint32_t>(ecx14) - 4);
                v15 = *esi12;
                eax16 = reinterpret_cast<int32_t>(v5(v8, v15, eax13));
                edx7 = edx7;
                if (eax16 < 0) {
                    esi12 = reinterpret_cast<void***>(reinterpret_cast<unsigned char>(ebp4) + reinterpret_cast<uint32_t>(ecx14));
                    ebx10 = edi11;
                }
            }
            edi17 = reinterpret_cast<void***>(ebp4 + reinterpret_cast<unsigned char>(edx7) * 4);
            v18 = *esi12;
            v19 = *edi17;
            eax20 = reinterpret_cast<int32_t>(v5(v8, v19, v18));
            if (eax20 >= 0) 
                break;
            eax21 = *edi17;
            *edi17 = *esi12;
            *esi12 = eax21;
            eax22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx10) + reinterpret_cast<unsigned char>(ebx10) + 1);
            if (reinterpret_cast<signed char>(a3) <= reinterpret_cast<signed char>(eax22)) 
                break;
            edx7 = ebx10;
            ebx10 = eax22;
        }
    }
    return;
}

void** fun_6e953120(void** a1) {
    uint32_t ecx2;
    uint32_t* edi3;
    uint32_t* edx4;
    uint32_t esi5;
    void** eax6;
    void** tmp32_7;
    uint32_t edx8;
    uint32_t ebx9;

    ecx2 = 0;
    edi3 = edx4;
    esi5 = 0;
    do {
        eax6 = tmp32_7;
        edx8 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(eax6 + 0xffffffff));
        ebx9 = (edx8 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx2);
        ecx2 = ecx2 + 7;
        esi5 = esi5 | ebx9;
    } while (*reinterpret_cast<signed char*>(&edx8) < 0);
    if (ecx2 <= 31 && edx8 & 64) {
        esi5 = esi5 | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx2);
    }
    *edi3 = esi5;
    return eax6;
}

struct s106 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_6e953340(void** ecx, void** a2, void* a3) {
    void** edi4;
    void*** v5;
    void*** esi6;
    uint32_t esi7;
    uint32_t eax8;
    int32_t v9;
    int32_t ebx10;
    void** v11;
    void** edx12;
    signed char al13;
    struct s106* ebx14;
    uint32_t eax15;
    uint32_t eax16;
    void** edx17;
    void** ebx18;
    void** ebp19;
    int32_t ecx20;
    uint32_t edx21;
    uint32_t eax22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** eax31;
    void** v32;
    void** edx33;
    void** ebx34;
    int32_t ecx35;
    uint32_t ebp36;
    uint32_t eax37;
    uint32_t esi38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    uint32_t ecx46;
    uint32_t ebp47;
    uint32_t eax48;
    uint32_t esi49;
    int1_t zf50;
    int32_t v51;
    int32_t* ebx52;
    int32_t eax53;
    int32_t v54;
    int32_t v55;
    int32_t v56;
    int32_t v57;
    uint32_t eax58;
    uint32_t eax59;

    edi4 = ecx;
    v5 = esi6;
    esi7 = eax8;
    v9 = ebx10;
    v11 = edx12;
    if (al13 == 80) {
        addr_6e953405_2:
        ebx14 = reinterpret_cast<struct s106*>(reinterpret_cast<uint32_t>(ecx + 3) & 0xfffffffc);
        *reinterpret_cast<void***>(a2) = ebx14->f0;
        return &ebx14->f4;
    } else {
        eax15 = esi7 & 15;
        if (*reinterpret_cast<unsigned char*>(&eax15) > 12) 
            goto addr_6e953400_4;
        eax16 = *reinterpret_cast<unsigned char*>(&eax15);
        switch (eax16) {
        case 0:
        case 3:
        case 11:
            edx17 = *reinterpret_cast<void***>(ecx);
            ebx18 = ecx + 4;
            goto addr_6e953375_7;
        case 1:
            ebx18 = ecx;
            ebp19 = reinterpret_cast<void**>(0);
            ecx20 = 0;
            esi7 = esi7;
            do {
                ++ebx18;
                edx21 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx18 + 0xffffffff));
                eax22 = (edx21 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx20);
                ecx20 = ecx20 + 7;
                ebp19 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp19) | eax22);
            } while (*reinterpret_cast<signed char*>(&edx21) < 0);
            edx17 = ebp19;
            goto addr_6e953375_7;
        case 2:
            edx17 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx))));
            ebx18 = ecx + 2;
            goto addr_6e953375_7;
        case 4:
        case 12:
            edx17 = *reinterpret_cast<void***>(ecx);
            ebx18 = ecx + 8;
            goto addr_6e953375_7;
            addr_6e953400_4:
        case 5:
        case 6:
        case 7:
        case 8:
            fun_6e955970(ecx, v23, v24, v25, v11, v26, v27, v28, v29);
            goto addr_6e953405_2;
        case 9:
            eax31 = fun_6e953120(v30);
            edx17 = v32;
            ebx18 = eax31;
            goto addr_6e953375_7;
        case 10:
            edx17 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx))));
            ebx18 = ecx + 2;
            goto addr_6e953375_7;
        case 13:
        case 16:
        case 24:
            edx33 = *reinterpret_cast<void***>(ecx);
            break;
        case 14:
            ebx34 = ecx;
            edx33 = reinterpret_cast<void**>(0);
            ecx35 = 0;
            ebp36 = eax16;
            do {
                ++ebx34;
                eax37 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx34 + 0xffffffff));
                esi38 = (eax37 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx35);
                ecx35 = ecx35 + 7;
                edx33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx33) | esi38);
            } while (*reinterpret_cast<signed char*>(&eax37) < 0);
            eax16 = ebp36;
            break;
        case 15:
            edx33 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx))));
            break;
        case 17:
        case 25:
            edx33 = *reinterpret_cast<void***>(ecx);
            break;
        case 18:
        case 19:
        case 20:
        case 21:
            fun_6e955970(ecx, v39, v40, v41, v11, v42, v43, v44, v45);
            *v5 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(ecx + 3) & 0xfffffffc);
            goto v9;
        case 22:
            ebx34 = ecx;
            edx33 = reinterpret_cast<void**>(0);
            ecx46 = 0;
            ebp47 = eax16;
            do {
                ++ebx34;
                eax48 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx34 + 0xffffffff));
                esi49 = (eax48 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx46);
                ecx46 = ecx46 + 7;
                edx33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx33) | esi49);
            } while (*reinterpret_cast<signed char*>(&eax48) < 0);
            eax16 = ebp47;
            if (ecx46 <= 31 && eax48 & 64) {
                edx33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx33) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx46));
                break;
            }
        case 23:
            edx33 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx))));
            break;
        case 26:
            zf50 = g6e956014 == 2;
            if (!zf50) {
                g6e956014 = 2;
            }
            if (v51 == 2) {
                ebx52 = reinterpret_cast<int32_t*>(0x6e960028);
                if (!1) {
                    do {
                        eax53 = *ebx52;
                        if (eax53) {
                            eax53(v54);
                        }
                        ++ebx52;
                    } while (!reinterpret_cast<int1_t>(ebx52 == 0x6e960028));
                    goto v55;
                }
            } else {
                if (v51 == 1) {
                    fun_6e955550(v56, 1, v11);
                }
            }
            goto v57;
        }
    }
    if (edx33) {
        if (1) {
            edi4 = v11;
        }
        edx33 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx33) + reinterpret_cast<unsigned char>(edi4));
        if (*reinterpret_cast<signed char*>(&eax16) < 0) {
            edx33 = *reinterpret_cast<void***>(edx33);
        }
    }
    *v5 = edx33;
    goto v9;
    addr_6e953375_7:
    if (edx17) {
        eax58 = esi7 & 0x70;
        eax59 = esi7;
        if (*reinterpret_cast<signed char*>(&eax58) != 16) {
            edi4 = v11;
        }
        edx17 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx17) + reinterpret_cast<unsigned char>(edi4));
        if (*reinterpret_cast<signed char*>(&eax59) < 0) {
            edx17 = *reinterpret_cast<void***>(edx17);
        }
    }
    *reinterpret_cast<void***>(a2) = edx17;
    return ebx18;
}

struct s107 {
    signed char[8] pad8;
    unsigned char f8;
    signed char f9;
    unsigned char f10;
};

struct s108 {
    signed char[9] pad9;
    void** f9;
};

struct s109 {
    signed char f0;
    signed char f1;
};

uint32_t fun_6e953420(void** ecx, void** a2) {
    struct s107* esi3;
    struct s107* eax4;
    void** ebx5;
    struct s108* eax6;
    void** v7;
    void** v8;
    void* eax9;
    void*** esp10;
    struct s109* ecx11;
    uint32_t eax12;
    void** eax13;
    void** edx14;
    unsigned char* ebx15;
    struct s107* esi16;
    uint32_t eax17;
    void** esi18;
    void* v19;
    void** eax20;

    esi3 = eax4;
    ebx5 = reinterpret_cast<void**>(&eax6->f9);
    v7 = ebx5;
    eax9 = fun_6e955978(v7, v8);
    esp10 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 36 - 4 + 4);
    ecx11 = reinterpret_cast<struct s109*>(reinterpret_cast<unsigned char>(ebx5) + reinterpret_cast<uint32_t>(eax9) + 1);
    if (esi3->f8 > 3) {
        eax12 = 0xff;
        if (ecx11->f0 != 4 || ecx11->f1) {
            addr_6e953448_3:
            return eax12;
        } else {
            ++ecx11;
        }
    }
    if (esi3->f9 == 0x7a) {
        do {
            ecx11 = reinterpret_cast<struct s109*>(&ecx11->f1);
        } while (*reinterpret_cast<signed char*>(reinterpret_cast<uint32_t>(ecx11) - 1) < 0);
        eax13 = fun_6e953120(v7);
        esp10 = esp10 - 4 + 4;
        edx14 = eax13;
        if (esi3->f8 != 1) 
            goto addr_6e95346c_8;
    } else {
        addr_6e953446_9:
        eax12 = 0;
        goto addr_6e953448_3;
    }
    ++edx14;
    addr_6e953479_11:
    ebx15 = &esi3->f10;
    esi16 = esi3;
    do {
        ++edx14;
    } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx14 + 0xffffffff)) < reinterpret_cast<signed char>(0));
    eax17 = esi16->f10;
    esi18 = reinterpret_cast<void**>(esp10 + 24);
    if (*reinterpret_cast<signed char*>(&eax17) != 82) {
        while (1) {
            if (*reinterpret_cast<signed char*>(&eax17) != 80) {
                if (*reinterpret_cast<signed char*>(&eax17) != 76) 
                    goto addr_6e953446_9;
                ++ebx15;
                eax17 = *ebx15;
                ++edx14;
                if (*reinterpret_cast<signed char*>(&eax17) == 82) 
                    break;
            } else {
                ++ebx15;
                eax20 = fun_6e953340(edx14 + 1, esi18, v19);
                edx14 = eax20;
                eax17 = *ebx15;
                if (*reinterpret_cast<signed char*>(&eax17) == 82) 
                    goto addr_6e9534cb_18;
            }
        }
    }
    addr_6e9534d0_20:
    return static_cast<uint32_t>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx14)));
    addr_6e9534cb_18:
    goto addr_6e9534d0_20;
    addr_6e95346c_8:
    esi3 = esi3;
    do {
        ++edx14;
    } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(edx14 + 0xffffffff)) < reinterpret_cast<signed char>(0));
    goto addr_6e953479_11;
}

void** fun_6e953510(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    signed char al7;
    void** eax8;
    uint32_t eax9;
    void*** edx10;
    void** v11;
    void** v12;
    void** v13;

    v6 = reinterpret_cast<void**>(__return_address());
    if (al7 != -1) {
        eax8 = reinterpret_cast<void**>(eax9 & 0x70);
        if (*reinterpret_cast<unsigned char*>(&eax8) == 32) {
            return *edx10;
        } else {
            if (*reinterpret_cast<unsigned char*>(&eax8) <= 32) {
                if (*reinterpret_cast<unsigned char*>(&eax8) && *reinterpret_cast<unsigned char*>(&eax8) != 16) {
                    do {
                        eax8 = fun_6e955970(ecx, v11, v12, v13, v6, a2, a3, a4, a5);
                        addr_6e953540_7:
                    } while (*reinterpret_cast<unsigned char*>(&eax8) != 80);
                }
            } else {
                if (*reinterpret_cast<unsigned char*>(&eax8) != 48) 
                    goto addr_6e953540_7;
                return *reinterpret_cast<void***>(ecx);
            }
        }
    }
    return 0;
}

uint32_t fun_6e9532f0(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    signed char al6;
    uint32_t edx7;
    uint32_t eax8;
    void** v9;
    void** v10;
    void** v11;

    if (al6 == -1) {
        return 0;
    }
    edx7 = eax8 & 7;
    if (*reinterpret_cast<unsigned char*>(&edx7) != 2) {
        if (*reinterpret_cast<unsigned char*>(&edx7) <= 2) {
            if (*reinterpret_cast<unsigned char*>(&edx7)) {
                fun_6e955970(ecx, v9, v10, v11, __return_address(), a2, a3, a4, a5);
            } else {
                addr_6e95331a_7:
                return 4;
            }
        } else {
            if (*reinterpret_cast<unsigned char*>(&edx7) == 3) 
                goto addr_6e95331a_7;
            if (*reinterpret_cast<unsigned char*>(&edx7) == 4) {
                return 8;
            }
        }
    }
    return 2;
}

struct s110 {
    void* f0;
    int32_t f4;
    void** f8;
};

struct s111 {
    uint32_t f0;
    signed char[12] pad16;
    unsigned char f16;
};

void** fun_6e9535e0() {
    struct s110* ebx1;
    struct s110* edx2;
    void*** esp3;
    int32_t* edx4;
    void** eax5;
    struct s111* ebp6;
    struct s111* eax7;
    int32_t edx8;
    int32_t esi9;
    void** ecx10;
    void** v11;
    uint32_t eax12;
    uint32_t v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    uint32_t eax19;
    uint32_t edx20;
    void* v21;
    uint32_t edi22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    uint32_t eax27;
    uint32_t v28;
    uint32_t eax29;
    uint16_t ax30;
    void** v31;

    ebx1 = edx2;
    esp3 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60);
    if (!*edx4) {
        eax5 = reinterpret_cast<void**>(0);
    } else {
        ebp6 = eax7;
        edx8 = 0;
        while (1) {
            if (!ebx1->f4) {
                addr_6e9536d2_5:
                ebx1 = reinterpret_cast<struct s110*>(reinterpret_cast<int32_t>(ebx1) + reinterpret_cast<int32_t>(ebx1->f0) + 4);
                if (ebx1->f0) 
                    continue; else 
                    goto addr_6e9536e2_6;
            } else {
                esi9 = reinterpret_cast<int32_t>(&ebx1->f4) - ebx1->f4;
                if (edx8 != esi9) {
                    eax12 = fun_6e953420(ecx10, v11);
                    v13 = eax12;
                    if (eax12 == 0xff) 
                        goto addr_6e953711_10;
                    fun_6e953510(v14, v15, v16, v17, v18);
                    esp3 = esp3 - 4 + 4 - 4 + 4;
                    eax19 = ebp6->f16;
                    edx20 = eax19;
                    if ((*reinterpret_cast<uint16_t*>(&edx20) & 0x7f8) == 0x7f8) 
                        goto addr_6e9536f0_12; else 
                        goto addr_6e953671_13;
                }
            }
            addr_6e953682_14:
            ecx10 = reinterpret_cast<void**>(&ebx1->f8);
            fun_6e953340(ecx10, esp3 + 44, v21);
            edi22 = 0xffffffff;
            eax27 = fun_6e9532f0(ecx10, v23, v24, v25, v26);
            esp3 = esp3 - 4 + 12 + 4 - 4 + 4;
            if (eax27 <= 3) {
                ecx10 = reinterpret_cast<void**>(eax27 * 8);
                edi22 = reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx10)) - 1);
            }
            edx8 = esi9;
            if (edi22 & v28) {
                if (v28 < ebp6->f0) {
                    ebp6->f0 = v28;
                }
                edx8 = esi9;
                goto addr_6e9536d2_5;
            }
            addr_6e9536f0_12:
            *reinterpret_cast<uint16_t*>(&eax19) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax19) & 0xf807);
            eax29 = eax19 | static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v13)) << 3;
            ebp6->f16 = *reinterpret_cast<unsigned char*>(&eax29);
            goto addr_6e953682_14;
            addr_6e953671_13:
            ax30 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax19) >> 3);
            if (v13 != static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ax30))) {
                ebp6->f16 = reinterpret_cast<unsigned char>(ebp6->f16 | 4);
                goto addr_6e953682_14;
            }
        }
    }
    addr_6e9536e6_21:
    return eax5;
    addr_6e9536e2_6:
    eax5 = v31;
    goto addr_6e9536e6_21;
    addr_6e953711_10:
    return 0xffffffff;
}

struct s112 {
    signed char[8] pad8;
    void** f8;
    signed char[7] pad16;
    unsigned char f16;
};

struct s113 {
    signed char[16] pad16;
    uint16_t f16;
};

struct s49* fun_6e953850(void** ecx, void** a2, void** a3, void** a4) {
    struct s112* ebp5;
    struct s112* eax6;
    struct s49* ebx7;
    struct s49* edx8;
    uint32_t eax9;
    struct s113* eax10;
    void** ecx11;
    uint16_t ax12;
    uint32_t edi13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void*** esp18;
    int32_t v19;
    void** v20;
    uint32_t eax21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** eax27;
    void** edx28;
    void* v29;
    void* v30;
    void** eax31;
    void*** esp32;
    void* v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    uint32_t eax38;
    uint32_t edx39;
    uint32_t v40;
    void* v41;
    void** v42;

    ebp5 = eax6;
    ebx7 = edx8;
    eax9 = eax10->f16;
    ecx11 = reinterpret_cast<void**>(&ebp5->f8);
    ax12 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax9) >> 3);
    edi13 = *reinterpret_cast<unsigned char*>(&ax12);
    fun_6e953510(ecx11, v14, v15, v16, v17);
    esp18 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60 - 4 + 4);
    if (ebx7->f0) {
        do {
            if (ebx7->f4) {
                if (ebp5->f16 & 4 && v19 != reinterpret_cast<int32_t>(&ebx7->f4) - ebx7->f4) {
                    eax21 = fun_6e953420(ecx11, v20);
                    ecx11 = v22;
                    edi13 = eax21;
                    fun_6e953510(ecx11, v23, v24, v25, v26);
                    esp18 = esp18 - 4 + 4 - 4 + 4;
                }
                if (!edi13) {
                    eax27 = *reinterpret_cast<void***>(&ebx7->f8);
                    edx28 = ebx7->f12;
                    if (!eax27) 
                        continue;
                    ecx11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v29) - reinterpret_cast<unsigned char>(eax27));
                    if (reinterpret_cast<unsigned char>(ecx11) < reinterpret_cast<unsigned char>(edx28)) 
                        goto addr_6e95397c_8;
                } else {
                    eax31 = fun_6e953340(&ebx7->f8, esp18 + 40, v30);
                    esp32 = esp18 - 4 + 12 + 4;
                    ecx11 = eax31;
                    fun_6e953340(ecx11, esp32 + 44, v33);
                    eax38 = fun_6e9532f0(ecx11, v34, v35, v36, v37);
                    esp18 = esp32 - 4 + 12 + 4 - 4 + 4;
                    edx39 = 0xffffffff;
                    if (eax38 <= 3) {
                        ecx11 = reinterpret_cast<void**>(eax38 * 8);
                        edx39 = reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx11)) - 1);
                    }
                    if (!(edx39 & v40)) 
                        continue;
                    ecx11 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v41) - v40);
                    if (reinterpret_cast<unsigned char>(ecx11) < reinterpret_cast<unsigned char>(v42)) 
                        goto addr_6e95397c_8;
                }
            }
            ebx7 = reinterpret_cast<struct s49*>(reinterpret_cast<int32_t>(ebx7) + reinterpret_cast<int32_t>(ebx7->f0) + 4);
        } while (ebx7->f0);
    }
    return 0;
    addr_6e95397c_8:
    return ebx7;
}

struct s114 {
    signed char[8] pad8;
    void** f8;
    signed char[7] pad16;
    unsigned char f16;
};

struct s115 {
    signed char[16] pad16;
    uint16_t f16;
};

struct s116 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_6e953730(void** ecx) {
    struct s114* ebp2;
    struct s114* eax3;
    void** ebx4;
    uint32_t eax5;
    struct s115* eax6;
    void** ecx7;
    uint16_t ax8;
    uint32_t edi9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void*** esp14;
    void* v15;
    void** v16;
    uint32_t eax17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    struct s116* eax23;
    struct s116** v24;
    int32_t edx25;
    void** ecx26;
    void* v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    uint32_t eax32;
    uint32_t edx33;
    uint32_t ecx34;
    uint32_t v35;

    ebp2 = eax3;
    ebx4 = ecx;
    eax5 = eax6->f16;
    ecx7 = reinterpret_cast<void**>(&ebp2->f8);
    ax8 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax5) >> 3);
    edi9 = *reinterpret_cast<unsigned char*>(&ax8);
    fun_6e953510(ecx7, v10, v11, v12, v13);
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60 - 4 + 4);
    if (*reinterpret_cast<void***>(ebx4)) {
        while (1) {
            if (!*reinterpret_cast<void***>(ebx4 + 4)) 
                goto addr_6e953796_3;
            if (ebp2->f16 & 4 && v15 != reinterpret_cast<unsigned char>(ebx4 + 4) - reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx4 + 4))) {
                eax17 = fun_6e953420(ecx7, v16);
                edi9 = eax17;
                fun_6e953510(v18, v19, v20, v21, v22);
                esp14 = esp14 - 4 + 4 - 4 + 4;
            }
            if (edi9) 
                goto addr_6e9537e3_7;
            if (!*reinterpret_cast<void***>(ebx4 + 8)) {
                addr_6e953796_3:
                ebx4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx4)) + 4);
                ecx7 = *reinterpret_cast<void***>(ebx4);
                if (!ecx7) 
                    break; else 
                    continue;
            } else {
                eax23 = *v24;
                if (eax23) {
                    edx25 = eax23->f4;
                    eax23->f4 = edx25 + 1;
                    *reinterpret_cast<void***>(reinterpret_cast<int32_t>(eax23) + edx25 * 4 + 8) = ebx4;
                    goto addr_6e953796_3;
                }
            }
            addr_6e9537e3_7:
            ecx26 = ebx4 + 8;
            fun_6e953340(ecx26, esp14 + 44, v27);
            eax32 = fun_6e9532f0(ecx26, v28, v29, v30, v31);
            esp14 = esp14 - 4 + 12 + 4 - 4 + 4;
            edx33 = 0xffffffff;
            if (eax32 <= 3) {
                ecx34 = eax32 * 8;
                edx33 = reinterpret_cast<uint32_t>((1 << *reinterpret_cast<unsigned char*>(&ecx34)) - 1);
            }
            if (!(v35 & edx33)) {
                ebx4 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx4) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx4)) + 4);
                ecx7 = *reinterpret_cast<void***>(ebx4);
                if (!ecx7) 
                    goto addr_6e953839_14;
            }
        }
    }
    addr_6e953840_16:
    return;
    addr_6e953839_14:
    goto addr_6e953840_16;
}

void fun_6e953250(void** ecx) {
    void** edi2;
    void** ebp3;
    void** esi4;
    void** ebx5;
    void** v6;
    void** v7;
    void** ebp8;
    void** esi9;
    void** eax10;

    edi2 = ecx;
    ebp3 = *reinterpret_cast<void***>(ecx + 4);
    esi4 = ecx + 8;
    ebx5 = reinterpret_cast<void**>((reinterpret_cast<unsigned char>(ebp3) >> 1) - 1);
    if (ebx5 != 0xffffffff) {
        v6 = ecx;
        esi4 = esi4;
        do {
            v7 = ebx5;
            --ebx5;
            fun_6e953190(esi4, v7, ebp3);
        } while (!reinterpret_cast<int1_t>(ebx5 == 0xffffffff));
        edi2 = v6;
    }
    ebp8 = ebp3 - 1;
    if (!(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ebp8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ebp8 == 0))) {
        esi9 = esi4;
        do {
            eax10 = *reinterpret_cast<void***>(edi2 + 8);
            *reinterpret_cast<void***>(edi2 + 8) = *reinterpret_cast<void***>(esi9 + reinterpret_cast<unsigned char>(ebp8) * 4);
            *reinterpret_cast<void***>(esi9 + reinterpret_cast<unsigned char>(ebp8) * 4) = eax10;
            fun_6e953190(esi9, 0, ebp8);
            --ebp8;
        } while (ebp8);
    }
    return;
}

int32_t pthread_mutex_unlock = 0x1f49c;

void __register_frame_info_bases(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    if (!a1 || !*reinterpret_cast<void***>(a1)) {
        return;
    } else {
        *reinterpret_cast<void***>(a2 + 12) = a1;
        *reinterpret_cast<void***>(a2 + 16) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0xffffffff);
        *reinterpret_cast<void***>(a2 + 4) = a3;
        *reinterpret_cast<void***>(a2 + 8) = a4;
        *reinterpret_cast<void***>(a2 + 16) = reinterpret_cast<void**>(0x7f8);
        fun_6e954ad8(0x6e956004);
        eax5 = g6e95d04c;
        g6e95d04c = a2;
        *reinterpret_cast<void***>(a2 + 20) = eax5;
        goto pthread_mutex_unlock;
    }
}

int32_t pthread_mutex_lock = 0x1f484;

void fun_6e954ad8(int32_t a1) {
    goto pthread_mutex_lock;
}

void fun_6e954ae0(void** a1) {
    goto pthread_mutex_unlock;
}

struct s117 {
    signed char[16] pad16;
    unsigned char f16;
};

struct s118 {
    signed char[8] pad8;
    void** f8;
};

struct s119 {
    signed char[8] pad8;
    void** f8;
};

struct s120 {
    signed char[8] pad8;
    void** f8;
};

void fun_6e953990(void** ecx, struct s118* a2, struct s119* a3, int32_t a4, int32_t a5, int32_t a6, struct s120* a7);

uint32_t fun_6e953160();

struct s121 {
    signed char[8] pad8;
    void** f8;
};

struct s49* fun_6e953a30(int32_t a1) {
    void** esi2;
    void** eax3;
    uint32_t eax4;
    struct s117* eax5;
    void** v6;
    void** edx7;
    void** ecx8;
    void** edi9;
    void** v10;
    void** eax11;
    void** ebx12;
    void** eax13;
    void** ebx14;
    void** v15;
    void** eax16;
    void** v17;
    void** eax18;
    void** v19;
    void** eax20;
    int1_t zf21;
    struct s49* eax22;
    uint32_t ebx23;
    int32_t v24;
    int32_t v25;
    struct s49* esi26;
    void* v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void* v35;
    void** eax36;
    void** v37;
    void* v38;
    uint32_t v39;
    uint32_t v40;
    uint32_t v41;
    int32_t v42;
    uint32_t v43;
    uint32_t v44;
    uint32_t ebx45;
    void** edi46;
    void** v47;
    void** v48;
    void** v49;
    void** edi50;
    void** ebp51;
    void** ebx52;
    void* v53;
    void** v54;
    void* v55;
    void** eax56;
    void** v57;
    void* v58;
    uint32_t v59;
    uint32_t v60;
    int32_t v61;
    uint32_t v62;
    void** edi63;
    void** ebx64;
    void** v65;
    void** edx66;
    struct s49* ecx67;
    void** esi68;
    void** ebp69;
    void** eax70;
    struct s49* eax71;
    void** ebx72;
    void** edi73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    void** v78;
    void** ebp79;
    void** v80;
    void** eax81;
    int1_t zf82;
    void** v83;
    void** edx84;
    void** eax85;
    void** edi86;
    void** edi87;
    void** eax88;
    void** v89;
    void** ebx90;
    void** v91;
    void** esi92;
    void** ecx93;
    void** edi94;
    void** eax95;
    int32_t eax96;
    struct s121* eax97;
    void** ecx98;
    void** edi99;
    void** ebp100;
    void** ebx101;
    void** edi102;
    void** v103;
    void** eax104;
    void** v105;
    void** edx106;
    void** v107;
    void*** v108;
    void** v109;
    void** esi110;
    void** ebp111;
    void** esi112;
    void** edi113;
    void** ebx114;
    int32_t eax115;

    esi2 = eax3;
    eax4 = eax5->f16;
    v6 = edx7;
    if (*reinterpret_cast<unsigned char*>(&eax4) & 1) 
        goto addr_6e953a45_2;
    ecx8 = *reinterpret_cast<void***>(esi2 + 16);
    edi9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx8) >> 11);
    v10 = edi9;
    if (!edi9) {
        if (!(*reinterpret_cast<unsigned char*>(&eax4) & 2)) {
            eax11 = fun_6e9535e0();
            v10 = eax11;
            if (eax11 == 0xffffffff) {
                addr_6e953b0b_6:
                *reinterpret_cast<void***>(esi2 + 16) = reinterpret_cast<void**>(0);
                *reinterpret_cast<void***>(esi2 + 12) = reinterpret_cast<void**>(0x6e95d040);
                *reinterpret_cast<void***>(esi2 + 16) = reinterpret_cast<void**>(0x7f8);
                goto addr_6e953b22_7;
            } else {
                addr_6e953c77_8:
                if (v10 == (reinterpret_cast<unsigned char>(v10) & 0x1fffff)) {
                    *reinterpret_cast<void***>(esi2 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) & 0x7ff | reinterpret_cast<unsigned char>(v10) << 11);
                } else {
                    *reinterpret_cast<void***>(esi2 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) & 0x7ff);
                }
            }
            if (!v10) 
                goto addr_6e953b22_7;
        } else {
            ebx12 = *reinterpret_cast<void***>(esi2 + 12);
            if (!*reinterpret_cast<void***>(ebx12)) {
                ecx8 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx8) & 0x7ff);
                *reinterpret_cast<void***>(esi2 + 16) = ecx8;
                goto addr_6e953b22_7;
            }
            do {
                eax13 = fun_6e9535e0();
                if (reinterpret_cast<int1_t>(eax13 == 0xffffffff)) 
                    goto addr_6e953b0b_6;
                ebx12 = ebx12 + 4;
                edi9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi9) + reinterpret_cast<unsigned char>(eax13));
            } while (*reinterpret_cast<void***>(ebx12));
            v10 = edi9;
            goto addr_6e953c77_8;
        }
    }
    ebx14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v10) * 4 + 8);
    v15 = ebx14;
    eax16 = fun_6e955950(v15);
    v17 = eax16;
    if (!eax16) {
        addr_6e953b22_7:
        if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2)) > reinterpret_cast<unsigned char>(v6)) 
            goto addr_6e953aaf_19;
    } else {
        *reinterpret_cast<void***>(eax16 + 4) = reinterpret_cast<void**>(0);
        v15 = ebx14;
        eax18 = fun_6e955950(v15);
        v19 = eax18;
        if (eax18) {
            *reinterpret_cast<void***>(eax18 + 4) = reinterpret_cast<void**>(0);
        }
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) & 2)) 
            goto addr_6e95403b_23; else 
            goto addr_6e953ce6_24;
    }
    eax4 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16));
    if (*reinterpret_cast<unsigned char*>(&eax4) & 1) {
        addr_6e953a45_2:
        if (*reinterpret_cast<unsigned char*>(&eax4) & 4) {
            eax20 = *reinterpret_cast<void***>(esi2 + 12);
            zf21 = *reinterpret_cast<void***>(eax20 + 4) == 0;
            if (zf21) {
                addr_6e953aaf_19:
                eax22 = reinterpret_cast<struct s49*>(0);
            } else {
                do {
                    ebx23 = reinterpret_cast<uint32_t>(v24 + v25) >> 1;
                    esi26 = *reinterpret_cast<struct s49**>(reinterpret_cast<int32_t>(v27) + ebx23 * 4 + 8);
                    fun_6e953420(ecx8, v28);
                    fun_6e953510(v29, v30, v31, v32, v33);
                    eax36 = fun_6e953340(&esi26->f8, v34, v35);
                    ecx8 = eax36;
                    fun_6e953340(ecx8, v37, v38);
                    if (v39 >= v40) {
                        if (v41 < v40 + v42) 
                            goto addr_6e954034_30;
                        v43 = ebx23 + 1;
                    }
                } while (v43 < v44);
                goto addr_6e953aaf_19;
            }
        } else {
            ebx45 = reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(esi2 + 16));
            if (*reinterpret_cast<uint16_t*>(&ebx45) & 0x7f8) {
                edi46 = *reinterpret_cast<void***>(esi2 + 12);
                fun_6e953510(esi2 + 8, v15, v47, v48, v49);
                edi50 = *reinterpret_cast<void***>(edi46 + 4);
                if (!edi50) 
                    goto addr_6e953aaf_19;
                ebp51 = reinterpret_cast<void**>(0);
                do {
                    ebx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp51) + reinterpret_cast<unsigned char>(edi50) >> 1);
                    esi26 = *reinterpret_cast<struct s49**>(reinterpret_cast<int32_t>(v53) + reinterpret_cast<unsigned char>(ebx52) * 4 + 8);
                    eax56 = fun_6e953340(&esi26->f8, v54, v55);
                    fun_6e953340(eax56, v57, v58);
                    if (v59 <= v60) {
                        if (v59 + v61 > v62) 
                            goto addr_6e954034_30;
                        ebp51 = ebx52 + 1;
                    } else {
                        edi50 = ebx52;
                    }
                } while (reinterpret_cast<unsigned char>(ebp51) < reinterpret_cast<unsigned char>(edi50));
                goto addr_6e953aaf_19;
            } else {
                edi63 = *reinterpret_cast<void***>(esi2 + 12);
                ebx64 = reinterpret_cast<void**>(0);
                v65 = *reinterpret_cast<void***>(edi63 + 4);
                while (reinterpret_cast<unsigned char>(ebx64) < reinterpret_cast<unsigned char>(v65)) {
                    edx66 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v65) + reinterpret_cast<unsigned char>(ebx64) >> 1);
                    ecx67 = *reinterpret_cast<struct s49**>(reinterpret_cast<uint32_t>(edi63 + reinterpret_cast<unsigned char>(edx66) * 4) + 8);
                    esi68 = *reinterpret_cast<void***>(&ecx67->f8);
                    ebp69 = ecx67->f12;
                    if (reinterpret_cast<unsigned char>(v6) < reinterpret_cast<unsigned char>(esi68)) {
                        while (reinterpret_cast<unsigned char>(ebx64) < reinterpret_cast<unsigned char>(edx66)) {
                            eax70 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx66) + reinterpret_cast<unsigned char>(ebx64) >> 1);
                            ecx67 = *reinterpret_cast<struct s49**>(reinterpret_cast<uint32_t>(edi63 + reinterpret_cast<unsigned char>(eax70) * 4) + 8);
                            esi68 = *reinterpret_cast<void***>(&ecx67->f8);
                            ebp69 = ecx67->f12;
                            if (reinterpret_cast<unsigned char>(v6) >= reinterpret_cast<unsigned char>(esi68)) 
                                goto addr_6e953b75_47;
                            edx66 = eax70;
                        }
                        break;
                    } else {
                        eax70 = edx66;
                        edx66 = v65;
                    }
                    addr_6e953b75_47:
                    if (reinterpret_cast<unsigned char>(v6) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(esi68) + reinterpret_cast<unsigned char>(ebp69))) 
                        goto addr_6e954076_51;
                    ebx64 = eax70 + 1;
                    v65 = edx66;
                }
                goto addr_6e953aaf_19;
                addr_6e954076_51:
                eax22 = ecx67;
            }
        }
    } else {
        if (!(*reinterpret_cast<unsigned char*>(&eax4) & 2)) {
            eax71 = fun_6e953850(v6, v15, v47, v48);
            return eax71;
        }
        ebx72 = *reinterpret_cast<void***>(esi2 + 12);
        if (!*reinterpret_cast<void***>(ebx72)) 
            goto addr_6e953aaf_19;
        edi73 = v6;
        do {
            eax22 = fun_6e953850(edi73, v15, v47, v48);
            if (eax22) 
                break;
            ebx72 = ebx72 + 4;
        } while (*reinterpret_cast<void***>(ebx72));
        goto addr_6e953b6a_59;
    }
    addr_6e953ab1_60:
    return eax22;
    addr_6e954034_30:
    eax22 = esi26;
    goto addr_6e953ab1_60;
    addr_6e953b6a_59:
    goto addr_6e953aaf_19;
    addr_6e95403b_23:
    ecx8 = *reinterpret_cast<void***>(esi2 + 12);
    fun_6e953730(ecx8);
    addr_6e953d12_61:
    v74 = v17;
    if (!v74) 
        goto addr_6e953d33_62;
    addr_6e953d22_63:
    if (v10 != *reinterpret_cast<void***>(v74 + 4)) {
        addr_6e9540a5_64:
        fun_6e955970(ecx8, v15, v47, v48, v75, v6, v76, v77, v78);
    } else {
        addr_6e953d33_62:
        ebp79 = reinterpret_cast<void**>(fun_6e953990);
        if (!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) & 4) && (ebp79 = reinterpret_cast<void**>(fun_6e953160), !!(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) & 0x7f8))) {
            ebp79 = reinterpret_cast<void**>(0x6e953560);
            goto addr_6e953d51_66;
        }
    }
    if (!v47 || !*reinterpret_cast<void***>(v47)) {
        goto v15;
    } else {
        *reinterpret_cast<void***>(v48 + 12) = v47;
        *reinterpret_cast<void***>(v48 + 16) = reinterpret_cast<void**>(0);
        *reinterpret_cast<void***>(v48) = reinterpret_cast<void**>(0xffffffff);
        *reinterpret_cast<void***>(v48 + 4) = v80;
        *reinterpret_cast<void***>(v48 + 8) = v6;
        *reinterpret_cast<void***>(v48 + 16) = reinterpret_cast<void**>(0x7f8);
        fun_6e954ad8(0x6e956004);
        eax81 = g6e95d04c;
        g6e95d04c = v48;
        *reinterpret_cast<void***>(v48 + 20) = eax81;
        goto pthread_mutex_unlock;
    }
    addr_6e953d51_66:
    v76 = v19;
    if (!v19) {
        ecx8 = v74;
        fun_6e953250(ecx8);
    } else {
        zf82 = *reinterpret_cast<void***>(v74 + 4) == 0;
        v83 = *reinterpret_cast<void***>(v74 + 4);
        if (zf82) {
            ecx8 = v76;
            edx84 = reinterpret_cast<void**>(0);
            eax85 = reinterpret_cast<void**>(0);
            edi86 = v74;
        } else {
            edi87 = reinterpret_cast<void**>(0x6e95d03c);
            eax88 = v74 + 8;
            v89 = eax88;
            ebx90 = eax88;
            v91 = reinterpret_cast<void**>(0);
            esi92 = esi2;
            while (ecx93 = v91, ++v91, *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(v76 + reinterpret_cast<unsigned char>(ecx93) * 4) + 8) = edi87, v91 != v83) {
                if (ebx90 == 0x6e95d03c) {
                    addr_6e953ec9_77:
                    edi87 = reinterpret_cast<void**>(0x6e95d03c);
                } else {
                    edi94 = ebx90;
                    do {
                        v48 = *reinterpret_cast<void***>(ebx90);
                        eax95 = *reinterpret_cast<void***>(edi94 + 4);
                        v15 = esi92;
                        v47 = eax95;
                        eax96 = reinterpret_cast<int32_t>(ebp79());
                        if (eax96 >= 0) 
                            goto addr_6e953dfb_80;
                        eax97 = reinterpret_cast<struct s121*>(reinterpret_cast<unsigned char>(v76) + (reinterpret_cast<unsigned char>(ebx90) - reinterpret_cast<unsigned char>(v89) & 0xfffffffc));
                        ebx90 = eax97->f8;
                        eax97->f8 = reinterpret_cast<void**>(0);
                    } while (ebx90 != 0x6e95d03c);
                    goto addr_6e953ec7_82;
                }
                addr_6e953e01_83:
                ebx90 = ebx90 + 4;
                continue;
                addr_6e953dfb_80:
                edi87 = ebx90;
                ebx90 = edi94;
                goto addr_6e953e01_83;
                addr_6e953ec7_82:
                ebx90 = edi94;
                goto addr_6e953ec9_77;
            }
            v77 = ebp79;
            edx84 = reinterpret_cast<void**>(0);
            eax85 = reinterpret_cast<void**>(0);
            ecx98 = reinterpret_cast<void**>(0);
            edi99 = v76;
            ebp100 = v83;
            ebx101 = v74;
            v78 = esi92;
            do {
                if (*reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi99 + reinterpret_cast<unsigned char>(ecx98) * 4) + 8)) {
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx101 + reinterpret_cast<unsigned char>(eax85) * 4) + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx101 + reinterpret_cast<unsigned char>(ecx98) * 4) + 8);
                    ++eax85;
                } else {
                    *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(edi99 + reinterpret_cast<unsigned char>(edx84) * 4) + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ebx101 + reinterpret_cast<unsigned char>(ecx98) * 4) + 8);
                    ++edx84;
                }
                ++ecx98;
            } while (ecx98 != ebp100);
            ebp79 = v77;
            esi2 = v78;
            edi86 = v17;
            ecx8 = v19;
        }
        *reinterpret_cast<void***>(v74 + 4) = eax85;
        *reinterpret_cast<void***>(v76 + 4) = edx84;
        if (!reinterpret_cast<int1_t>(v10 == reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ecx8 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi86 + 4)))) 
            goto addr_6e9540a5_64; else 
            goto addr_6e953f41_91;
    }
    addr_6e954010_92:
    *reinterpret_cast<void***>(v17) = *reinterpret_cast<void***>(esi2 + 12);
    *reinterpret_cast<void***>(esi2 + 12) = v17;
    *reinterpret_cast<void***>(esi2 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi2 + 16)) | 1);
    goto addr_6e953b22_7;
    addr_6e953f41_91:
    fun_6e953250(ecx8);
    edi102 = v17;
    v103 = v19;
    eax104 = *reinterpret_cast<void***>(v19 + 4);
    v105 = eax104;
    if (eax104) {
        edx106 = *reinterpret_cast<void***>(edi102 + 4);
        v107 = esi2;
        v108 = reinterpret_cast<void***>(edi102 + reinterpret_cast<unsigned char>(eax104) * 4);
        v109 = ebp79;
        esi110 = edx106;
        do {
            --v105;
            ebp111 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(v103 + reinterpret_cast<unsigned char>(v105) * 4) + 8);
            if (!esi110) {
                addr_6e954027_95:
                esi110 = reinterpret_cast<void**>(0);
                continue;
            } else {
                esi112 = edi102;
                edi113 = esi110;
                while (ebx114 = edi113 + 0xffffffff, v48 = ebp111, v47 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(esi112 + reinterpret_cast<unsigned char>(ebx114) * 4) + 8), eax115 = reinterpret_cast<int32_t>(v109(v107, v47, v48)), !reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax115 < 0) | reinterpret_cast<uint1_t>(eax115 == 0))) {
                    *reinterpret_cast<int32_t*>(v108 + reinterpret_cast<unsigned char>(ebx114) * 4 + 8) = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esi112 + reinterpret_cast<unsigned char>(ebx114) * 4) + 8);
                    if (!ebx114) 
                        goto addr_6e954025_99;
                    edi113 = ebx114;
                }
            }
            edi102 = esi112;
            esi110 = edi113;
            continue;
            addr_6e954025_99:
            edi102 = esi112;
            goto addr_6e954027_95;
            ecx8 = v105;
            v108 = v108 - 4;
            *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(edi102 + (reinterpret_cast<unsigned char>(ecx8) + reinterpret_cast<unsigned char>(esi110)) * 4) + 8) = ebp111;
        } while (ecx8);
        esi2 = v107;
        *reinterpret_cast<void***>(edi102 + 4) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edi102 + 4)) + reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v103 + 4)));
        v103 = v19;
    }
    v15 = v103;
    fun_6e955960(v15, v47, v48);
    goto addr_6e954010_92;
    addr_6e953ce6_24:
    ebx14 = *reinterpret_cast<void***>(esi2 + 12);
    ecx8 = *reinterpret_cast<void***>(ebx14);
    if (!ecx8) {
        v74 = eax16;
        goto addr_6e953d22_63;
    } else {
        esi2 = esi2;
        do {
            ebx14 = ebx14 + 4;
            fun_6e953730(ecx8);
            ecx8 = *reinterpret_cast<void***>(ebx14);
        } while (ecx8);
        goto addr_6e953d12_61;
    }
}

void** _Unwind_GetDataRelBase(void** a1) {
    return *reinterpret_cast<void***>(a1 + 88);
}

void** _Unwind_GetRegionStart(void** a1) {
    return *reinterpret_cast<void***>(a1 + 92);
}

void** _Unwind_GetTextRelBase(void** a1);

void** fun_6e9544c0(void** ecx, void** a2) {
    signed char al3;
    uint32_t eax4;
    uint32_t eax5;
    void** edx6;
    void** eax7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** edx15;
    void** eax16;
    void** edx17;
    void** eax18;

    if (al3 == -1) 
        goto addr_6e9544e8_2;
    eax4 = eax5 & 0x70;
    if (*reinterpret_cast<unsigned char*>(&eax4) == 32) {
        eax7 = _Unwind_GetTextRelBase(edx6);
        return eax7;
    }
    if (*reinterpret_cast<unsigned char*>(&eax4) > 32) 
        goto addr_6e9544d0_6;
    if (!*reinterpret_cast<unsigned char*>(&eax4) || *reinterpret_cast<unsigned char*>(&eax4) == 16) {
        addr_6e9544e8_2:
        return 0;
    } else {
        fun_6e955970(ecx, v8, v9, v10, v11, v12, v13, v14, __return_address());
    }
    eax16 = _Unwind_GetRegionStart(edx15);
    return eax16;
    addr_6e9544d0_6:
    if (*reinterpret_cast<unsigned char*>(&eax4) != 64) {
        if (*reinterpret_cast<unsigned char*>(&eax4) == 80) 
            goto addr_6e9544e8_2;
        if (*reinterpret_cast<unsigned char*>(&eax4) == 48) {
            eax18 = _Unwind_GetDataRelBase(edx17);
            return eax18;
        }
    }
}

struct s122 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

void** fun_6e954520(void** ecx, void*** a2) {
    void** edi3;
    void** v4;
    void** edx5;
    signed char al6;
    struct s122* ebx7;
    uint32_t edx8;
    uint32_t eax9;
    void** edx10;
    void** ebx11;
    int32_t ecx12;
    uint32_t ebp13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t esi16;
    uint32_t eax17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** ebx24;
    uint32_t ecx25;
    uint32_t ebp26;
    uint32_t eax27;
    uint32_t eax28;
    uint32_t esi29;
    int1_t zf30;
    int32_t v31;
    int32_t* ebx32;
    int32_t eax33;
    int32_t v34;
    int32_t v35;
    int32_t v36;
    int32_t v37;
    uint32_t ecx38;

    edi3 = ecx;
    v4 = edx5;
    if (al6 == 80) {
        addr_6e954606_2:
        ebx7 = reinterpret_cast<struct s122*>(reinterpret_cast<uint32_t>(ecx + 3) & 0xfffffffc);
        *a2 = ebx7->f0;
        return &ebx7->f4;
    } else {
        edx8 = eax9 & 15;
        if (*reinterpret_cast<unsigned char*>(&edx8) > 12) 
            goto addr_6e954601_4;
        switch (*reinterpret_cast<unsigned char*>(&edx8)) {
        case 0:
        case 3:
        case 11:
            edx10 = *reinterpret_cast<void***>(ecx);
            ebx11 = ecx + 4;
            break;
        case 1:
            ebx11 = ecx;
            edx10 = reinterpret_cast<void**>(0);
            ecx12 = 0;
            ebp13 = eax14;
            do {
                ++ebx11;
                eax15 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx11 + 0xffffffff));
                esi16 = (eax15 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx12);
                ecx12 = ecx12 + 7;
                edx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx10) | esi16);
            } while (*reinterpret_cast<signed char*>(&eax15) < 0);
            eax17 = ebp13;
            break;
        case 2:
            edx10 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx))));
            ebx11 = ecx + 2;
            break;
        case 4:
        case 12:
            edx10 = *reinterpret_cast<void***>(ecx);
            ebx11 = ecx + 8;
            break;
            addr_6e954601_4:
        case 5:
        case 6:
        case 7:
        case 8:
            fun_6e955970(ecx, v18, v19, v20, v4, v21, v22, v23, ebx24);
            goto addr_6e954606_2;
        case 9:
            ebx11 = ecx;
            edx10 = reinterpret_cast<void**>(0);
            ecx25 = 0;
            ebp26 = eax27;
            do {
                ++ebx11;
                eax28 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx11 + 0xffffffff));
                esi29 = (eax28 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx25);
                ecx25 = ecx25 + 7;
                edx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx10) | esi29);
            } while (*reinterpret_cast<signed char*>(&eax28) < 0);
            eax17 = ebp26;
            if (ecx25 <= 31 && eax28 & 64) {
                edx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx10) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx25));
                break;
            }
        case 10:
            edx10 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx))));
            ebx11 = ecx + 2;
            break;
        case 13:
            zf30 = g6e956014 == 2;
            if (!zf30) {
                g6e956014 = 2;
            }
            if (v31 == 2) {
                ebx32 = reinterpret_cast<int32_t*>(0x6e960028);
                if (!1) {
                    do {
                        eax33 = *ebx32;
                        if (eax33) {
                            eax33(v34);
                        }
                        ++ebx32;
                    } while (!reinterpret_cast<int1_t>(ebx32 == 0x6e960028));
                    goto v35;
                }
            } else {
                if (v31 == 1) {
                    fun_6e955550(v36, 1, v4);
                }
            }
            goto v37;
        }
    }
    if (edx10) {
        ecx38 = eax17 & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx38) != 16) {
            edi3 = v4;
        }
        edx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx10) + reinterpret_cast<unsigned char>(edi3));
        if (*reinterpret_cast<signed char*>(&eax17) < 0) {
            edx10 = *reinterpret_cast<void***>(edx10);
        }
    }
    *a2 = edx10;
    return ebx11;
}

void* _Unwind_GetIP(void** a1) {
    return *reinterpret_cast<void**>(a1 + 76);
}

void _Unwind_SetGR(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** eax7;
    void** edx8;
    void** v9;
    void** v10;
    void** v11;

    v6 = reinterpret_cast<void**>(__return_address());
    eax7 = a3;
    edx8 = a2;
    if (reinterpret_cast<signed char>(eax7) <= reinterpret_cast<signed char>(17)) {
        ecx = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(eax7 + 0x6e95d028)));
        if (*reinterpret_cast<unsigned char*>(edx8 + 99) & 64) 
            goto addr_6e952b80_3; else 
            goto addr_6e952b6d_4;
    }
    do {
        eax7 = fun_6e955970(ecx, v9, v10, v11, v6, a2, a3, a4, a5);
        addr_6e952b80_3:
        if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(edx8) + reinterpret_cast<unsigned char>(eax7) + 0x6c)) 
            break;
        addr_6e952b6d_4:
    } while (ecx != 4);
    goto addr_6e952b92_6;
    *reinterpret_cast<void***>(edx8 + reinterpret_cast<unsigned char>(eax7) * 4) = a4;
    return;
    addr_6e952b92_6:
    *reinterpret_cast<void***>(*reinterpret_cast<void***>(edx8 + reinterpret_cast<unsigned char>(eax7) * 4)) = a4;
    return;
}

struct s123 {
    signed char[76] pad76;
    int32_t f76;
};

void _Unwind_SetIP(void** ecx, struct s123* a2, int32_t a3, void** a4) {
    a2->f76 = a3;
    return;
}

int32_t pthread_getspecific = 0x1f454;

void** fun_6e954af0(void** a1) {
    goto pthread_getspecific;
}

int32_t realloc = 0x1f428;

void** fun_6e955988() {
    goto realloc;
}

int32_t memset = 0x1f41e;

void fun_6e955990(void** a1, int32_t a2, void** a3) {
    goto memset;
}

int32_t pthread_setspecific = 0x1f4c4;

void fun_6e954af8(void** a1) {
    goto pthread_setspecific;
}

int32_t _lock = 0x1f3ca;

void fun_6e9559a0(int32_t a1) {
    goto _lock;
}

int32_t __dllonexit = 0x1f39a;

int32_t fun_6e9559a8(int32_t a1, void* a2, void* a3) {
    goto __dllonexit;
}

int32_t _unlock = 0x1f3dc;

void fun_6e9559b0(int32_t a1, void* a2, void* a3) {
    goto _unlock;
}

/* (image base) */
int16_t image_base_;

uint32_t fun_6e9555f0(int32_t a1);

struct s124 {
    signed char[60] pad60;
    void* f60;
};

struct s2* fun_6e955630(struct s124* a1, uint32_t a2);

struct s2* fun_6e955710(void** a1, void** a2, void** a3) {
    int1_t zf4;
    int32_t v5;
    uint32_t eax6;
    struct s2* eax7;

    zf4 = image_base_ == 0x5a4d;
    if (!zf4 || (eax6 = fun_6e9555f0(v5), eax6 == 0)) {
        return 0;
    } else {
        eax7 = fun_6e955630(0x6e940000, a1 - 0x6e940000);
        return eax7;
    }
}

int32_t fun_6e955800(void** a1, void** a2, void** a3) {
    int1_t zf4;
    uint32_t eax5;

    zf4 = image_base_ == 0x5a4d;
    if (!zf4 || (eax5 = fun_6e9555f0(__return_address()), eax5 == 0)) {
        return 0;
    } else {
        return 0x6e940000;
    }
}

struct s125 {
    signed char[64] pad64;
    void** f64;
};

struct s125* _iob = reinterpret_cast<struct s125*>(0x1f3c2);

void fun_6e9559b8(int32_t a1, int32_t a2, int32_t a3, void** a4);

void fun_6e9559c0();

struct s126 {
    void** f0;
    signed char[3] pad4;
    uint32_t f4;
    struct s2* f8;
};

int32_t GetLastError = 0x1f256;

struct s127 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    int32_t f8;
};

struct s128 {
    void* f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

struct s129 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s130 {
    uint32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void* f12;
};

struct s131 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

struct s132 {
    int32_t f0;
    void* f4;
};

struct s133 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s134 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s135 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s136 {
    int32_t f0;
    void* f4;
    void* f8;
};

void** fun_6e954ce0(void** ecx, void** a2, void** a3, void** a4, int32_t a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11) {
    void* esp12;
    struct s125* eax13;
    struct s125* eax14;
    void** v15;
    void** v16;
    void** v17;
    void** ebx18;
    void** eax19;
    void* esp20;
    void* ebp21;
    void** esi22;
    void*** esp23;
    void** v24;
    void** ecx25;
    void** v26;
    void** edx27;
    void** ebx28;
    void** v29;
    struct s2* eax30;
    void* esp31;
    struct s2* edi32;
    void** ecx33;
    struct s126* tmp32_34;
    void** v35;
    int32_t eax36;
    void** edx37;
    void** v38;
    struct s1* eax39;
    int32_t v40;
    int32_t eax41;
    void** edx42;
    int32_t v43;
    void** tmp32_44;
    void** v45;
    void** v46;
    int32_t eax47;
    void** v48;
    void** eax49;
    void** v50;
    struct s1* edx51;
    int32_t v52;
    void** v53;
    void** v54;
    void*** esp55;
    int32_t v56;
    void** v57;
    void** v58;
    void** eax59;
    void* esp60;
    void* ebp61;
    uint32_t eax62;
    struct s127* esp63;
    void** ebx64;
    void** eax65;
    void** eax66;
    void** v67;
    uint32_t v68;
    struct s128* esp69;
    void** eax70;
    struct s128* esp71;
    struct s4* ebx72;
    void** edx73;
    int32_t edi74;
    unsigned char* eax75;
    int32_t v76;
    void** ecx77;
    uint32_t ecx78;
    uint32_t edi79;
    struct s128* esp80;
    struct s128* esp81;
    uint32_t ecx82;
    uint32_t edi83;
    struct s128* esp84;
    void** eax85;
    struct s1* eax86;
    struct s129* eax87;
    struct s128* esp88;
    int32_t eax89;
    struct s130* esp90;
    struct s1* eax91;
    void** v92;
    struct s131* esp93;
    int1_t less94;
    struct s1* ecx95;
    void** eax96;
    struct s131* esp97;
    struct s128* esp98;
    struct s2** esp99;
    void*** esp100;
    void*** esp101;
    uint32_t** esp102;
    uint32_t eax103;
    struct s132* esp104;
    uint32_t esi105;
    struct s133* esp106;
    uint32_t eax107;
    struct s134* esp108;
    uint32_t eax109;
    struct s135* esp110;
    uint32_t eax111;
    uint32_t** esp112;
    struct s136* esp113;
    uint32_t esi114;
    int32_t eax115;
    struct s128* esp116;
    struct s1* eax117;
    void** v118;
    void** eax119;
    void** v120;
    void** tmp32_121;
    int32_t eax122;
    int32_t v123;
    int32_t v124;
    void** edi125;
    int32_t ebx126;
    void** v127;
    void** v128;
    int32_t v129;
    int32_t v130;
    int32_t v131;
    int32_t v132;

    esp12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 24);
    eax13 = _iob;
    fun_6e9559b8("Mingw-w64 runtime failure:\n", 1, 27, &eax13->f64);
    eax14 = _iob;
    v15 = reinterpret_cast<void**>(&eax14->f64);
    fun_6e9559c0();
    eax19 = fun_6e955970(ecx, v15, a2, reinterpret_cast<int32_t>(esp12) + 36, &eax13->f64, v16, v17, ebx18, __return_address());
    esp20 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp12) - 4 + 4 - 4 + 4 - 4 + 4 - 4);
    ebp21 = esp20;
    esi22 = eax19;
    esp23 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp20) - 4 - 4 - 4 - 76);
    v24 = ecx;
    ecx25 = g6e95d074;
    v26 = edx27;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx25) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx25 == 0)) {
        while (1) {
            ebx28 = reinterpret_cast<void**>(0);
            addr_6e954d86_4:
            eax30 = fun_6e955710(esi22, v29, 28);
            esp31 = reinterpret_cast<void*>(esp23 - 4 + 4);
            edi32 = eax30;
            if (!eax30) 
                break;
            ecx33 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx28 + reinterpret_cast<unsigned char>(ebx28) * 2) << 2);
            tmp32_34 = reinterpret_cast<struct s126*>(reinterpret_cast<unsigned char>(ecx33) + reinterpret_cast<uint32_t>(g6e95d078));
            v35 = ecx33;
            tmp32_34->f8 = eax30;
            tmp32_34->f0 = reinterpret_cast<void**>(0);
            eax36 = fun_6e955800(esi22, v29, 28);
            edx37 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp21) + 0xffffffcc);
            v38 = edx37;
            tmp32_34->f4 = eax36 + edi32->f12;
            eax39 = g6e95d078;
            v29 = edx37;
            ebx28 = VirtualQuery;
            v40 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax39) + reinterpret_cast<unsigned char>(v35) + 4);
            eax41 = reinterpret_cast<int32_t>(ebx28(v40, v29, 28));
            ecx25 = v35;
            edx42 = v38;
            esp23 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp31) - 4 + 4 - 4 + 4 - 12);
            if (!eax41) 
                goto addr_6e954f37_6;
            if (v43 == 4) 
                goto addr_6e954e03_8;
            if (v43 == 64) 
                goto addr_6e954e03_8;
            tmp32_44 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx25) + reinterpret_cast<uint32_t>(g6e95d078));
            ecx25 = tmp32_44;
            v35 = edx42;
            eax47 = reinterpret_cast<int32_t>(VirtualProtect(v45, v46, 64, ecx25, v29, 28));
            edx42 = v35;
            esp23 = esp23 - 4 + 4 - 16;
            if (eax47) 
                goto addr_6e954e03_8;
            eax49 = reinterpret_cast<void**>(GetLastError("  VirtualProtect failed with code 0x%x", v48));
            v48 = eax49;
            fun_6e954ce0(ecx25, "  VirtualProtect failed with code 0x%x", v48, v50, 0x6e954f05, v45, v46, 64, ecx25, v29, 28);
            esp23 = esp23 - 4 + 4 - 4 + 4;
            esi22 = esi22;
        }
    } else {
        edx51 = g6e95d078;
        ebx28 = reinterpret_cast<void**>(0);
        while (reinterpret_cast<unsigned char>(esi22) < reinterpret_cast<unsigned char>(edx51->f4) || (edi32 = edx51->f8, reinterpret_cast<unsigned char>(esi22) >= reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx51->f4) + reinterpret_cast<unsigned char>(edi32->f8)))) {
            ++ebx28;
            ++edx51;
            if (ebx28 == ecx25) 
                goto addr_6e954d86_4;
        }
        edx42 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp21) + 0xffffffcc);
        ebx28 = VirtualQuery;
        goto addr_6e954e0a_16;
    }
    addr_6e954f57_17:
    fun_6e954ce0(ecx25, "Address %p has no image-section", esi22, 28, v52, v38, v35, v24, v26, v53, v54);
    esp55 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp31) - 4 + 4);
    fun_6e954ce0(ecx25, "  VirtualQuery failed for %d bytes at address %p", 28, esi22, v56, v38, v35, v24, v26, v57, v58);
    eax59 = g6e95d070;
    if (eax59) {
        goto "  VirtualQuery failed for %d bytes at address %p";
    }
    esp60 = reinterpret_cast<void*>(esp55 - 4 + 4 - 4);
    ebp61 = esp60;
    g6e95d070 = reinterpret_cast<void**>(1);
    fun_6e955760();
    eax62 = fun_6e941590(ecx25);
    g6e95d074 = reinterpret_cast<void**>(0);
    esp63 = reinterpret_cast<struct s127*>(reinterpret_cast<int32_t>(esp60) - 4 - 4 - 4 - 76 - 4 + 4 - 4 + 4 - eax62);
    g6e95d078 = reinterpret_cast<struct s1*>(reinterpret_cast<uint32_t>(esp63) + 31 & 0xfffffff0);
    if (1) 
        goto addr_6e955081_22;
    if (1) {
        ebx64 = reinterpret_cast<void**>(0x6e959864);
    } else {
        eax65 = g6e959864;
        if (eax65 || (eax66 = g6e959868, !!eax66)) {
            ebx64 = reinterpret_cast<void**>(0x6e959864);
            goto addr_6e95508e_27;
        } else {
            edi32 = g6e95986c;
            ebx64 = reinterpret_cast<void**>(0x6e959870);
            if (edi32) {
                ebx64 = reinterpret_cast<void**>(0x6e959864);
                goto addr_6e955020_30;
            }
        }
    }
    esi22 = *reinterpret_cast<void***>(ebx64);
    if (esi22) {
        addr_6e95508e_27:
        if (reinterpret_cast<unsigned char>(ebx64) >= reinterpret_cast<unsigned char>(0x6e959864)) {
            addr_6e955081_22:
            goto "  VirtualQuery failed for %d bytes at address %p";
        } else {
            v67 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp61) + 0xffffffcc);
            do {
                ebx64 = ebx64 + 8;
                v68 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(*reinterpret_cast<void***>(ebx64 + 4) + 0x6e940000) + *reinterpret_cast<int32_t*>(ebx64 + 0xfffffff8));
                esp69 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                esp69->f0 = reinterpret_cast<void*>(0x6e9550c5);
                fun_6e954d40(4);
                esp63 = reinterpret_cast<struct s127*>(&esp69->f4);
            } while (reinterpret_cast<unsigned char>(ebx64) < reinterpret_cast<unsigned char>(0x6e959864));
        }
    } else {
        ecx25 = *reinterpret_cast<void***>(ebx64 + 4);
        if (!ecx25) {
            addr_6e955020_30:
            eax70 = *reinterpret_cast<void***>(ebx64 + 8);
            if (!reinterpret_cast<int1_t>(eax70 == 1)) {
                addr_6e955243_35:
                esp63->f4 = eax70;
                esp63->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation protocol version %d.\n");
                esp71 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                esp71->f0 = reinterpret_cast<void*>(0x6e955253);
                fun_6e954ce0(ecx25, esp71->f4, esp71->f8, esp71->f12, esp71->f16, esp71->f20, esp71->f24, esp71->f28, esp71->f32, esp71->f36, esp71->f40);
                goto addr_6e955260_36;
            } else {
                ebx72 = reinterpret_cast<struct s4*>(ebx64 + 12);
                if (reinterpret_cast<uint32_t>(ebx72) >= 0x6e959864) 
                    goto addr_6e955081_22;
                do {
                    edx73 = ebx72->f0;
                    edi74 = ebx72->f4;
                    eax75 = reinterpret_cast<unsigned char*>(edi74 + 0x6e940000);
                    v76 = *reinterpret_cast<int32_t*>(edx73 + 0x6e940000);
                    ecx77 = reinterpret_cast<void**>(static_cast<uint32_t>(ebx72->f8));
                    if (ecx77 == 16) {
                        ecx78 = *reinterpret_cast<unsigned char*>(edi74 + 0x6e940000);
                        edi79 = *reinterpret_cast<uint16_t*>(&ecx78);
                        if (*reinterpret_cast<int16_t*>(&ecx78) < reinterpret_cast<int16_t>(0)) {
                            edi79 = edi79 | 0xffff0000;
                        }
                        v67 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp61) + 0xffffffcc);
                        v68 = v76 + (edi79 - reinterpret_cast<unsigned char>(edx73) - 0x6e940000);
                        esp80 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                        esp80->f0 = reinterpret_cast<void*>(0x6e9551ad);
                        fun_6e954d40(2);
                        esp63 = reinterpret_cast<struct s127*>(&esp80->f4);
                        continue;
                    } else {
                        if (ecx77 == 32) {
                            v67 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp61) + 0xffffffcc);
                            v68 = v76 - reinterpret_cast<uint32_t>(edx73 + 0x6e940000) + *eax75;
                            esp81 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                            esp81->f0 = reinterpret_cast<void*>(0x6e95521c);
                            fun_6e954d40(4);
                            esp63 = reinterpret_cast<struct s127*>(&esp81->f4);
                            continue;
                        } else {
                            if (ecx77 != 8) 
                                goto addr_6e95506a_45;
                            ecx82 = *eax75;
                            edi83 = *reinterpret_cast<unsigned char*>(&ecx82);
                            if (*reinterpret_cast<signed char*>(&ecx82) >= reinterpret_cast<signed char>(0)) 
                                goto addr_6e9551d4_47;
                        }
                    }
                    edi83 = edi83 | 0xffffff00;
                    addr_6e9551d4_47:
                    v67 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp61) + 0xffffffcc);
                    v68 = v76 + (edi83 - 0x6e940000 - reinterpret_cast<unsigned char>(edx73));
                    esp84 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                    esp84->f0 = reinterpret_cast<void*>(0x6e9551f7);
                    fun_6e954d40(1);
                    esp63 = reinterpret_cast<struct s127*>(&esp84->f4);
                    ebx72 = reinterpret_cast<struct s4*>(reinterpret_cast<uint32_t>(ebx72) + 12);
                } while (reinterpret_cast<uint32_t>(ebx72) < 0x6e959864);
                goto addr_6e9551bc_50;
            }
        } else {
            goto addr_6e95508e_27;
        }
    }
    addr_6e9550cd_52:
    eax85 = g6e95d074;
    ebx64 = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax85) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax85 == 0))) {
        do {
            eax86 = g6e95d078;
            esi22 = ebx64 + reinterpret_cast<unsigned char>(ebx64) * 2;
            edi32 = reinterpret_cast<struct s2*>(reinterpret_cast<unsigned char>(esi22) * 4);
            eax87 = reinterpret_cast<struct s129*>(reinterpret_cast<uint32_t>(eax86) + reinterpret_cast<uint32_t>(edi32));
            if (eax87->f0) {
                esp63->f8 = 28;
                esp63->f4 = v67;
                esp63->f0 = eax87->f4;
                esp88 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
                esp88->f0 = reinterpret_cast<void*>(0x6e95511d);
                eax89 = reinterpret_cast<int32_t>(VirtualQuery());
                esp90 = reinterpret_cast<struct s130*>(&esp88->f4 - 12);
                if (!eax89) 
                    break;
                esp90->f12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp61) - 56);
                eax91 = g6e95d078;
                esp90->f8 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax91) + reinterpret_cast<unsigned char>(esi22) * 4);
                esp90->f4 = v92;
                esp90->f0 = v68;
                esp93 = reinterpret_cast<struct s131*>(reinterpret_cast<uint32_t>(esp90) - 4);
                esp93->f0 = 0x6e95514e;
                VirtualProtect();
                esp63 = reinterpret_cast<struct s127*>(&esp93->f4 - 16);
            }
            ++ebx64;
            less94 = reinterpret_cast<signed char>(ebx64) < reinterpret_cast<signed char>(g6e95d074);
        } while (less94);
        goto addr_6e955081_22;
    } else {
        goto addr_6e955081_22;
    }
    ecx95 = g6e95d078;
    ecx25 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx95) + reinterpret_cast<uint32_t>(edi32));
    esp90->f8 = *reinterpret_cast<void***>(ecx25 + 4);
    eax96 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx25 + 8) + 8);
    esp90->f0 = reinterpret_cast<uint32_t>("  VirtualQuery failed for %d bytes at address %p");
    esp90->f4 = eax96;
    esp97 = reinterpret_cast<struct s131*>(reinterpret_cast<uint32_t>(esp90) - 4);
    esp97->f0 = 0x6e955243;
    eax70 = fun_6e954ce0(ecx25, esp97->f4, esp97->f8, esp97->f12, esp97->f16, esp97->f20, esp97->f24, esp97->f28, esp97->f32, esp97->f36, esp97->f40);
    esp63 = reinterpret_cast<struct s127*>(&esp97->f4);
    goto addr_6e955243_35;
    addr_6e955260_36:
    esp98 = reinterpret_cast<struct s128*>(&esp71->f4 - 4);
    esp98->f0 = ebp61;
    esp99 = reinterpret_cast<struct s2**>(reinterpret_cast<uint32_t>(esp98) - 4);
    *esp99 = edi32;
    esp100 = reinterpret_cast<void***>(esp99 - 1);
    *esp100 = esi22;
    esp101 = esp100 - 4;
    *esp101 = ebx64;
    esp102 = reinterpret_cast<uint32_t**>(esp101 - 44);
    eax103 = g6e956018;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 40) = 0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 36) = 0;
    if (eax103 == 0xbb40e64e) {
        *esp102 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 40);
        esp104 = reinterpret_cast<struct s132*>(esp102 - 1);
        esp104->f0 = 0x6e95529e;
        GetSystemTimeAsFileTime(esp104->f4);
        esi105 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 40) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 36);
        esp106 = reinterpret_cast<struct s133*>(&esp104->f4 - 1 - 1);
        esp106->f0 = 0x6e9552af;
        eax107 = reinterpret_cast<uint32_t>(GetCurrentProcessId(esp106->f4, esp106->f8));
        esp108 = reinterpret_cast<struct s134*>(&esp106->f4 - 1);
        esp108->f0 = 0x6e9552b7;
        eax109 = reinterpret_cast<uint32_t>(GetCurrentThreadId(esp108->f4, esp108->f8));
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 44) = eax109;
        esp110 = reinterpret_cast<struct s135*>(&esp108->f4 - 1);
        esp110->f0 = 0x6e9552c0;
        eax111 = reinterpret_cast<uint32_t>(GetTickCount(esp110->f4, esp110->f8));
        esp112 = &esp110->f4;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 48) = eax111;
        *esp112 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 32);
        esp113 = reinterpret_cast<struct s136*>(esp112 - 1);
        esp113->f0 = 0x6e9552cf;
        QueryPerformanceCounter(esp113->f4, esp113->f8);
        esi114 = esi105 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 32) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 28) ^ eax107 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 44) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp98) - 48);
        if (esi114 == 0xbb40e64e) {
            eax115 = 0x44bf19b0;
            esi114 = 0xbb40e64f;
        } else {
            eax115 = reinterpret_cast<int32_t>(~esi114);
        }
        g6e956018 = esi114;
        g6e95601c = eax115;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp98) - 12 + 4 + 4 + 4 + 4);
    } else {
        g6e95601c = reinterpret_cast<int32_t>(~eax103);
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp98) - 12 + 4 + 4 + 4 + 4);
    }
    addr_6e9551bc_50:
    goto addr_6e9550cd_52;
    addr_6e95506a_45:
    esp63->f4 = ecx77;
    esp63->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation bit size %d.\n");
    esp116 = reinterpret_cast<struct s128*>(reinterpret_cast<uint32_t>(esp63) - 4);
    esp116->f0 = reinterpret_cast<void*>(0x6e955081);
    fun_6e954ce0(ecx77, esp116->f4, esp116->f8, esp116->f12, esp116->f16, esp116->f20, esp116->f24, esp116->f28, esp116->f32, esp116->f36, esp116->f40);
    goto addr_6e955081_22;
    addr_6e954f37_6:
    eax117 = g6e95d078;
    v118 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax117) + reinterpret_cast<unsigned char>(ecx25) + 4);
    eax119 = edi32->f8;
    fun_6e954ce0(ecx25, "  VirtualQuery failed for %d bytes at address %p", eax119, v118, v40, v29, 28, v120, v38, v35, v24);
    esp31 = reinterpret_cast<void*>(esp23 - 4 + 4);
    goto addr_6e954f57_17;
    addr_6e954e03_8:
    tmp32_121 = g6e95d074 + 1;
    g6e95d074 = tmp32_121;
    addr_6e954e0a_16:
    eax122 = reinterpret_cast<int32_t>(ebx28(esi22, edx42, 28));
    esp55 = esp23 - 4 + 4 - 12;
    if (eax122) {
        if (v123 == 4 || v123 == 64) {
            fun_6e955980(esi22, v26, v24, esi22, edx42, 28, v124, v38, v35, v24);
        } else {
            edi125 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp21) + 0xffffffc8);
            ebx126 = VirtualProtect;
            ebx126(v127, v128, 64, edi125, edx42, 28);
            fun_6e955980(esi22, v26, v24, 0x6e954e89, v127, v128, 64, edi125, edx42, 28);
            if (v129 != 64 && v129 != 4) {
                ebx126(v130, v131, v132, edi125, v127, v128, 64, edi125, edx42, 28);
                goto v15;
            }
        }
        goto v15;
    }
}

struct s137 {
    void** f0;
    signed char[3] pad4;
    uint32_t f4;
    struct s2* f8;
};

struct s138 {
    void** f0;
    signed char[3] pad4;
    void** f4;
    signed char[3] pad8;
    int32_t f8;
};

struct s139 {
    void* f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

struct s140 {
    void** f0;
    signed char[3] pad4;
    void** f4;
};

struct s141 {
    uint32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void* f12;
};

struct s142 {
    int32_t f0;
    void** f4;
    signed char[3] pad8;
    void** f8;
    signed char[3] pad12;
    void** f12;
    signed char[3] pad16;
    int32_t f16;
    void** f20;
    signed char[3] pad24;
    void** f24;
    signed char[3] pad28;
    void** f28;
    signed char[3] pad32;
    void** f32;
    signed char[3] pad36;
    void** f36;
    signed char[3] pad40;
    void** f40;
};

struct s143 {
    int32_t f0;
    void* f4;
};

struct s144 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s145 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s146 {
    int32_t f0;
    uint32_t* f4;
    void* f8;
};

struct s147 {
    int32_t f0;
    void* f4;
    void* f8;
};

void fun_6e954d40(void** ecx) {
    void* esp2;
    void* ebp3;
    void** esi4;
    void** eax5;
    void*** esp6;
    void** v7;
    void** ecx8;
    void** v9;
    void** edx10;
    void** ebx11;
    void** v12;
    struct s2* eax13;
    void* esp14;
    struct s2* edi15;
    void** ecx16;
    struct s137* tmp32_17;
    void** v18;
    int32_t eax19;
    void** edx20;
    void** v21;
    struct s1* eax22;
    int32_t v23;
    int32_t eax24;
    void** edx25;
    int32_t v26;
    void** tmp32_27;
    void** v28;
    void** v29;
    int32_t eax30;
    void** v31;
    void** eax32;
    void** v33;
    struct s1* edx34;
    int32_t v35;
    void** v36;
    void** v37;
    void*** esp38;
    int32_t v39;
    void** v40;
    void** v41;
    void** eax42;
    void* esp43;
    void* ebp44;
    uint32_t eax45;
    struct s138* esp46;
    void** ebx47;
    void** eax48;
    void** eax49;
    void** v50;
    uint32_t v51;
    struct s139* esp52;
    void** eax53;
    struct s139* esp54;
    struct s4* ebx55;
    void** edx56;
    int32_t edi57;
    unsigned char* eax58;
    int32_t v59;
    void** ecx60;
    uint32_t ecx61;
    uint32_t edi62;
    struct s139* esp63;
    struct s139* esp64;
    uint32_t ecx65;
    uint32_t edi66;
    struct s139* esp67;
    void** eax68;
    struct s1* eax69;
    struct s140* eax70;
    struct s139* esp71;
    int32_t eax72;
    struct s141* esp73;
    struct s1* eax74;
    void** v75;
    struct s142* esp76;
    int1_t less77;
    struct s1* ecx78;
    void** eax79;
    struct s142* esp80;
    struct s139* esp81;
    struct s2** esp82;
    void*** esp83;
    void*** esp84;
    uint32_t** esp85;
    uint32_t eax86;
    struct s143* esp87;
    uint32_t esi88;
    struct s144* esp89;
    uint32_t eax90;
    struct s145* esp91;
    uint32_t eax92;
    struct s146* esp93;
    uint32_t eax94;
    uint32_t** esp95;
    struct s147* esp96;
    uint32_t esi97;
    int32_t eax98;
    struct s139* esp99;
    struct s1* eax100;
    void** v101;
    void** eax102;
    void** v103;
    void** tmp32_104;
    int32_t eax105;
    int32_t v106;
    int32_t v107;
    void** edi108;
    int32_t ebx109;
    void** v110;
    void** v111;
    int32_t v112;
    int32_t v113;
    int32_t v114;
    int32_t v115;

    esp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    ebp3 = esp2;
    esi4 = eax5;
    esp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp2) - 4 - 4 - 4 - 76);
    v7 = ecx;
    ecx8 = g6e95d074;
    v9 = edx10;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx8) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx8 == 0)) {
        while (1) {
            ebx11 = reinterpret_cast<void**>(0);
            addr_6e954d86_3:
            eax13 = fun_6e955710(esi4, v12, 28);
            esp14 = reinterpret_cast<void*>(esp6 - 4 + 4);
            edi15 = eax13;
            if (!eax13) 
                break;
            ecx16 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ebx11 + reinterpret_cast<unsigned char>(ebx11) * 2) << 2);
            tmp32_17 = reinterpret_cast<struct s137*>(reinterpret_cast<unsigned char>(ecx16) + reinterpret_cast<uint32_t>(g6e95d078));
            v18 = ecx16;
            tmp32_17->f8 = eax13;
            tmp32_17->f0 = reinterpret_cast<void**>(0);
            eax19 = fun_6e955800(esi4, v12, 28);
            edx20 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffffcc);
            v21 = edx20;
            tmp32_17->f4 = eax19 + edi15->f12;
            eax22 = g6e95d078;
            v12 = edx20;
            ebx11 = VirtualQuery;
            v23 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(eax22) + reinterpret_cast<unsigned char>(v18) + 4);
            eax24 = reinterpret_cast<int32_t>(ebx11(v23, v12, 28));
            ecx8 = v18;
            edx25 = v21;
            esp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp14) - 4 + 4 - 4 + 4 - 12);
            if (!eax24) 
                goto addr_6e954f37_5;
            if (v26 == 4) 
                goto addr_6e954e03_7;
            if (v26 == 64) 
                goto addr_6e954e03_7;
            tmp32_27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx8) + reinterpret_cast<uint32_t>(g6e95d078));
            ecx8 = tmp32_27;
            v18 = edx25;
            eax30 = reinterpret_cast<int32_t>(VirtualProtect(v28, v29, 64, ecx8, v12, 28));
            edx25 = v18;
            esp6 = esp6 - 4 + 4 - 16;
            if (eax30) 
                goto addr_6e954e03_7;
            eax32 = reinterpret_cast<void**>(GetLastError("  VirtualProtect failed with code 0x%x", v31));
            v31 = eax32;
            fun_6e954ce0(ecx8, "  VirtualProtect failed with code 0x%x", v31, v33, 0x6e954f05, v28, v29, 64, ecx8, v12, 28);
            esp6 = esp6 - 4 + 4 - 4 + 4;
            esi4 = esi4;
        }
    } else {
        edx34 = g6e95d078;
        ebx11 = reinterpret_cast<void**>(0);
        while (reinterpret_cast<unsigned char>(esi4) < reinterpret_cast<unsigned char>(edx34->f4) || (edi15 = edx34->f8, reinterpret_cast<unsigned char>(esi4) >= reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(edx34->f4) + reinterpret_cast<unsigned char>(edi15->f8)))) {
            ++ebx11;
            ++edx34;
            if (ebx11 == ecx8) 
                goto addr_6e954d86_3;
        }
        edx25 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffffcc);
        ebx11 = VirtualQuery;
        goto addr_6e954e0a_15;
    }
    addr_6e954f57_16:
    fun_6e954ce0(ecx8, "Address %p has no image-section", esi4, 28, v35, v21, v18, v7, v9, v36, v37);
    esp38 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(esp14) - 4 + 4);
    fun_6e954ce0(ecx8, "  VirtualQuery failed for %d bytes at address %p", 28, esi4, v39, v21, v18, v7, v9, v40, v41);
    eax42 = g6e95d070;
    if (eax42) {
        goto "  VirtualQuery failed for %d bytes at address %p";
    }
    esp43 = reinterpret_cast<void*>(esp38 - 4 + 4 - 4);
    ebp44 = esp43;
    g6e95d070 = reinterpret_cast<void**>(1);
    fun_6e955760();
    eax45 = fun_6e941590(ecx8);
    g6e95d074 = reinterpret_cast<void**>(0);
    esp46 = reinterpret_cast<struct s138*>(reinterpret_cast<int32_t>(esp43) - 4 - 4 - 4 - 76 - 4 + 4 - 4 + 4 - eax45);
    g6e95d078 = reinterpret_cast<struct s1*>(reinterpret_cast<uint32_t>(esp46) + 31 & 0xfffffff0);
    if (1) 
        goto addr_6e955081_21;
    if (1) {
        ebx47 = reinterpret_cast<void**>(0x6e959864);
    } else {
        eax48 = g6e959864;
        if (eax48 || (eax49 = g6e959868, !!eax49)) {
            ebx47 = reinterpret_cast<void**>(0x6e959864);
            goto addr_6e95508e_26;
        } else {
            edi15 = g6e95986c;
            ebx47 = reinterpret_cast<void**>(0x6e959870);
            if (edi15) {
                ebx47 = reinterpret_cast<void**>(0x6e959864);
                goto addr_6e955020_29;
            }
        }
    }
    esi4 = *reinterpret_cast<void***>(ebx47);
    if (esi4) {
        addr_6e95508e_26:
        if (reinterpret_cast<unsigned char>(ebx47) >= reinterpret_cast<unsigned char>(0x6e959864)) {
            addr_6e955081_21:
            goto "  VirtualQuery failed for %d bytes at address %p";
        } else {
            v50 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp44) + 0xffffffcc);
            do {
                ebx47 = ebx47 + 8;
                v51 = reinterpret_cast<uint32_t>(*reinterpret_cast<int32_t*>(*reinterpret_cast<void***>(ebx47 + 4) + 0x6e940000) + *reinterpret_cast<int32_t*>(ebx47 + 0xfffffff8));
                esp52 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                esp52->f0 = reinterpret_cast<void*>(0x6e9550c5);
                fun_6e954d40(4);
                esp46 = reinterpret_cast<struct s138*>(&esp52->f4);
            } while (reinterpret_cast<unsigned char>(ebx47) < reinterpret_cast<unsigned char>(0x6e959864));
        }
    } else {
        ecx8 = *reinterpret_cast<void***>(ebx47 + 4);
        if (!ecx8) {
            addr_6e955020_29:
            eax53 = *reinterpret_cast<void***>(ebx47 + 8);
            if (!reinterpret_cast<int1_t>(eax53 == 1)) {
                addr_6e955243_34:
                esp46->f4 = eax53;
                esp46->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation protocol version %d.\n");
                esp54 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                esp54->f0 = reinterpret_cast<void*>(0x6e955253);
                fun_6e954ce0(ecx8, esp54->f4, esp54->f8, esp54->f12, esp54->f16, esp54->f20, esp54->f24, esp54->f28, esp54->f32, esp54->f36, esp54->f40);
                goto addr_6e955260_35;
            } else {
                ebx55 = reinterpret_cast<struct s4*>(ebx47 + 12);
                if (reinterpret_cast<uint32_t>(ebx55) >= 0x6e959864) 
                    goto addr_6e955081_21;
                do {
                    edx56 = ebx55->f0;
                    edi57 = ebx55->f4;
                    eax58 = reinterpret_cast<unsigned char*>(edi57 + 0x6e940000);
                    v59 = *reinterpret_cast<int32_t*>(edx56 + 0x6e940000);
                    ecx60 = reinterpret_cast<void**>(static_cast<uint32_t>(ebx55->f8));
                    if (ecx60 == 16) {
                        ecx61 = *reinterpret_cast<unsigned char*>(edi57 + 0x6e940000);
                        edi62 = *reinterpret_cast<uint16_t*>(&ecx61);
                        if (*reinterpret_cast<int16_t*>(&ecx61) < reinterpret_cast<int16_t>(0)) {
                            edi62 = edi62 | 0xffff0000;
                        }
                        v50 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp44) + 0xffffffcc);
                        v51 = v59 + (edi62 - reinterpret_cast<unsigned char>(edx56) - 0x6e940000);
                        esp63 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                        esp63->f0 = reinterpret_cast<void*>(0x6e9551ad);
                        fun_6e954d40(2);
                        esp46 = reinterpret_cast<struct s138*>(&esp63->f4);
                        continue;
                    } else {
                        if (ecx60 == 32) {
                            v50 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp44) + 0xffffffcc);
                            v51 = v59 - reinterpret_cast<uint32_t>(edx56 + 0x6e940000) + *eax58;
                            esp64 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                            esp64->f0 = reinterpret_cast<void*>(0x6e95521c);
                            fun_6e954d40(4);
                            esp46 = reinterpret_cast<struct s138*>(&esp64->f4);
                            continue;
                        } else {
                            if (ecx60 != 8) 
                                goto addr_6e95506a_44;
                            ecx65 = *eax58;
                            edi66 = *reinterpret_cast<unsigned char*>(&ecx65);
                            if (*reinterpret_cast<signed char*>(&ecx65) >= reinterpret_cast<signed char>(0)) 
                                goto addr_6e9551d4_46;
                        }
                    }
                    edi66 = edi66 | 0xffffff00;
                    addr_6e9551d4_46:
                    v50 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp44) + 0xffffffcc);
                    v51 = v59 + (edi66 - 0x6e940000 - reinterpret_cast<unsigned char>(edx56));
                    esp67 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                    esp67->f0 = reinterpret_cast<void*>(0x6e9551f7);
                    fun_6e954d40(1);
                    esp46 = reinterpret_cast<struct s138*>(&esp67->f4);
                    ebx55 = reinterpret_cast<struct s4*>(reinterpret_cast<uint32_t>(ebx55) + 12);
                } while (reinterpret_cast<uint32_t>(ebx55) < 0x6e959864);
                goto addr_6e9551bc_49;
            }
        } else {
            goto addr_6e95508e_26;
        }
    }
    addr_6e9550cd_51:
    eax68 = g6e95d074;
    ebx47 = reinterpret_cast<void**>(0);
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax68) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(eax68 == 0))) {
        do {
            eax69 = g6e95d078;
            esi4 = ebx47 + reinterpret_cast<unsigned char>(ebx47) * 2;
            edi15 = reinterpret_cast<struct s2*>(reinterpret_cast<unsigned char>(esi4) * 4);
            eax70 = reinterpret_cast<struct s140*>(reinterpret_cast<uint32_t>(eax69) + reinterpret_cast<uint32_t>(edi15));
            if (eax70->f0) {
                esp46->f8 = 28;
                esp46->f4 = v50;
                esp46->f0 = eax70->f4;
                esp71 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
                esp71->f0 = reinterpret_cast<void*>(0x6e95511d);
                eax72 = reinterpret_cast<int32_t>(VirtualQuery());
                esp73 = reinterpret_cast<struct s141*>(&esp71->f4 - 12);
                if (!eax72) 
                    break;
                esp73->f12 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp44) - 56);
                eax74 = g6e95d078;
                esp73->f8 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax74) + reinterpret_cast<unsigned char>(esi4) * 4);
                esp73->f4 = v75;
                esp73->f0 = v51;
                esp76 = reinterpret_cast<struct s142*>(reinterpret_cast<uint32_t>(esp73) - 4);
                esp76->f0 = 0x6e95514e;
                VirtualProtect();
                esp46 = reinterpret_cast<struct s138*>(&esp76->f4 - 16);
            }
            ++ebx47;
            less77 = reinterpret_cast<signed char>(ebx47) < reinterpret_cast<signed char>(g6e95d074);
        } while (less77);
        goto addr_6e955081_21;
    } else {
        goto addr_6e955081_21;
    }
    ecx78 = g6e95d078;
    ecx8 = reinterpret_cast<void**>(reinterpret_cast<uint32_t>(ecx78) + reinterpret_cast<uint32_t>(edi15));
    esp73->f8 = *reinterpret_cast<void***>(ecx8 + 4);
    eax79 = *reinterpret_cast<void***>(*reinterpret_cast<void***>(ecx8 + 8) + 8);
    esp73->f0 = reinterpret_cast<uint32_t>("  VirtualQuery failed for %d bytes at address %p");
    esp73->f4 = eax79;
    esp80 = reinterpret_cast<struct s142*>(reinterpret_cast<uint32_t>(esp73) - 4);
    esp80->f0 = 0x6e955243;
    eax53 = fun_6e954ce0(ecx8, esp80->f4, esp80->f8, esp80->f12, esp80->f16, esp80->f20, esp80->f24, esp80->f28, esp80->f32, esp80->f36, esp80->f40);
    esp46 = reinterpret_cast<struct s138*>(&esp80->f4);
    goto addr_6e955243_34;
    addr_6e955260_35:
    esp81 = reinterpret_cast<struct s139*>(&esp54->f4 - 4);
    esp81->f0 = ebp44;
    esp82 = reinterpret_cast<struct s2**>(reinterpret_cast<uint32_t>(esp81) - 4);
    *esp82 = edi15;
    esp83 = reinterpret_cast<void***>(esp82 - 1);
    *esp83 = esi4;
    esp84 = esp83 - 4;
    *esp84 = ebx47;
    esp85 = reinterpret_cast<uint32_t**>(esp84 - 44);
    eax86 = g6e956018;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 40) = 0;
    *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 36) = 0;
    if (eax86 == 0xbb40e64e) {
        *esp85 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 40);
        esp87 = reinterpret_cast<struct s143*>(esp85 - 1);
        esp87->f0 = 0x6e95529e;
        GetSystemTimeAsFileTime(esp87->f4);
        esi88 = *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 40) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 36);
        esp89 = reinterpret_cast<struct s144*>(&esp87->f4 - 1 - 1);
        esp89->f0 = 0x6e9552af;
        eax90 = reinterpret_cast<uint32_t>(GetCurrentProcessId(esp89->f4, esp89->f8));
        esp91 = reinterpret_cast<struct s145*>(&esp89->f4 - 1);
        esp91->f0 = 0x6e9552b7;
        eax92 = reinterpret_cast<uint32_t>(GetCurrentThreadId(esp91->f4, esp91->f8));
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 44) = eax92;
        esp93 = reinterpret_cast<struct s146*>(&esp91->f4 - 1);
        esp93->f0 = 0x6e9552c0;
        eax94 = reinterpret_cast<uint32_t>(GetTickCount(esp93->f4, esp93->f8));
        esp95 = &esp93->f4;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 48) = eax94;
        *esp95 = reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 32);
        esp96 = reinterpret_cast<struct s147*>(esp95 - 1);
        esp96->f0 = 0x6e9552cf;
        QueryPerformanceCounter(esp96->f4, esp96->f8);
        esi97 = esi88 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 32) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 28) ^ eax90 ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 44) ^ *reinterpret_cast<uint32_t*>(reinterpret_cast<uint32_t>(esp81) - 48);
        if (esi97 == 0xbb40e64e) {
            eax98 = 0x44bf19b0;
            esi97 = 0xbb40e64f;
        } else {
            eax98 = reinterpret_cast<int32_t>(~esi97);
        }
        g6e956018 = esi97;
        g6e95601c = eax98;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp81) - 12 + 4 + 4 + 4 + 4);
    } else {
        g6e95601c = reinterpret_cast<int32_t>(~eax86);
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(esp81) - 12 + 4 + 4 + 4 + 4);
    }
    addr_6e9551bc_49:
    goto addr_6e9550cd_51;
    addr_6e95506a_44:
    esp46->f4 = ecx60;
    esp46->f0 = reinterpret_cast<void**>("  Unknown pseudo relocation bit size %d.\n");
    esp99 = reinterpret_cast<struct s139*>(reinterpret_cast<uint32_t>(esp46) - 4);
    esp99->f0 = reinterpret_cast<void*>(0x6e955081);
    fun_6e954ce0(ecx60, esp99->f4, esp99->f8, esp99->f12, esp99->f16, esp99->f20, esp99->f24, esp99->f28, esp99->f32, esp99->f36, esp99->f40);
    goto addr_6e955081_21;
    addr_6e954f37_5:
    eax100 = g6e95d078;
    v101 = *reinterpret_cast<void***>(reinterpret_cast<uint32_t>(eax100) + reinterpret_cast<unsigned char>(ecx8) + 4);
    eax102 = edi15->f8;
    fun_6e954ce0(ecx8, "  VirtualQuery failed for %d bytes at address %p", eax102, v101, v23, v12, 28, v103, v21, v18, v7);
    esp14 = reinterpret_cast<void*>(esp6 - 4 + 4);
    goto addr_6e954f57_16;
    addr_6e954e03_7:
    tmp32_104 = g6e95d074 + 1;
    g6e95d074 = tmp32_104;
    addr_6e954e0a_15:
    eax105 = reinterpret_cast<int32_t>(ebx11(esi4, edx25, 28));
    esp38 = esp6 - 4 + 4 - 12;
    if (eax105) {
        if (v106 == 4 || v106 == 64) {
            fun_6e955980(esi4, v9, v7, esi4, edx25, 28, v107, v21, v18, v7);
        } else {
            edi108 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffffc8);
            ebx109 = VirtualProtect;
            ebx109(v110, v111, 64, edi108, edx25, 28);
            fun_6e955980(esi4, v9, v7, 0x6e954e89, v110, v111, 64, edi108, edx25, 28);
            if (v112 != 64 && v112 != 4) {
                ebx109(v113, v114, v115, edi108, v110, v111, 64, edi108, edx25, 28);
                return;
            }
        }
        return;
    }
}

int32_t strncmp = 0x1f43c;

int32_t fun_6e9559c8(uint32_t a1, int32_t a2, int32_t a3) {
    goto strncmp;
}

struct s148 {
    signed char[6] pad6;
    uint16_t f6;
    signed char[12] pad20;
    uint16_t f20;
};

struct s2* fun_6e955630(struct s124* a1, uint32_t a2) {
    uint32_t ebx3;
    struct s148* edx4;
    uint32_t esi5;
    struct s2* eax6;
    uint32_t edx7;

    ebx3 = a2;
    edx4 = reinterpret_cast<struct s148*>(reinterpret_cast<int32_t>(a1) + reinterpret_cast<int32_t>(a1->f60));
    esi5 = edx4->f6;
    eax6 = reinterpret_cast<struct s2*>(reinterpret_cast<int32_t>(edx4) + edx4->f20 + 24);
    if (!esi5) {
        addr_6e955668_2:
        eax6 = reinterpret_cast<struct s2*>(0);
    } else {
        edx7 = 0;
        do {
            if (eax6->f12 > ebx3) 
                continue;
            if (ebx3 < eax6->f12 + reinterpret_cast<unsigned char>(eax6->f8)) 
                break;
            ++edx7;
            ++eax6;
        } while (edx7 < esi5);
        goto addr_6e955668_2;
    }
    return eax6;
}

int32_t fun_6e955a70(int32_t* ecx, int32_t* a2, int32_t* a3) {
    uint32_t eflags4;
    uint32_t eax5;
    uint32_t esi6;
    int32_t eax7;
    uint32_t eax8;
    int32_t* edx9;

    *reinterpret_cast<int1_t*>(reinterpret_cast<int32_t>(&eflags4) + 1) = 0;
    eax5 = eflags4 & 0xfcffff;
    esi6 = (eax5 ^ (eax5 ^ 0x200000) & 0xfcffff) & 0x200000;
    if (esi6) {
        esi6 = __intrinsic();
    }
    eax7 = 0;
    if (eax8 <= esi6) {
        *edx9 = __intrinsic();
        *ecx = __intrinsic();
        *a2 = __intrinsic();
        *a3 = __intrinsic();
        eax7 = 1;
    }
    return eax7;
}

int32_t _initterm = 0x1f3b6;

void fun_6e955968(int32_t a1, int32_t a2) {
    goto _initterm;
}

void fun_6e955260(int32_t a1) {
    void* ebp2;
    uint32_t eax3;
    void* v4;
    uint32_t eax5;
    uint32_t eax6;
    uint32_t eax7;
    uint32_t esi8;
    uint32_t v9;
    uint32_t v10;
    int32_t eax11;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    eax3 = g6e956018;
    if (eax3 == 0xbb40e64e) {
        v4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebp2) - 40);
        GetSystemTimeAsFileTime(v4);
        eax5 = reinterpret_cast<uint32_t>(GetCurrentProcessId(0x6e95529e, v4));
        eax6 = reinterpret_cast<uint32_t>(GetCurrentThreadId(0x6e95529e, v4));
        eax7 = reinterpret_cast<uint32_t>(GetTickCount(0x6e95529e, v4));
        QueryPerformanceCounter(reinterpret_cast<int32_t>(ebp2) - 32, v4);
        esi8 = v9 ^ v10 ^ eax5 ^ eax6 ^ eax7;
        if (esi8 == 0xbb40e64e) {
            eax11 = 0x44bf19b0;
            esi8 = 0xbb40e64f;
        } else {
            eax11 = reinterpret_cast<int32_t>(~esi8);
        }
        g6e956018 = esi8;
        g6e95601c = eax11;
        return;
    } else {
        g6e95601c = reinterpret_cast<int32_t>(~eax3);
        return;
    }
}

int32_t _onexit = 0x1f3d2;

int32_t fun_6e954b00(int32_t a1) {
    void** eax2;
    void** eax3;
    int32_t eax4;
    void** eax5;
    void** eax6;
    void** eax7;
    void** eax8;
    int32_t* esp9;
    void* v10;
    void* v11;
    int32_t eax12;
    void** eax13;
    void** eax14;

    eax2 = g6e95d408;
    eax3 = fun_6e954cc0(eax2);
    if (eax3 == 0xffffffff) {
        eax4 = reinterpret_cast<int32_t>(_onexit(a1));
        return eax4;
    } else {
        fun_6e9559a0(8);
        eax5 = g6e95d408;
        eax6 = fun_6e954cc0(eax5);
        eax7 = g6e95d404;
        eax8 = fun_6e954cc0(eax7);
        esp9 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 40 - 4 + 4 - 4 + 4 - 4 + 4 - 4 + 4);
        v10 = reinterpret_cast<void*>(esp9 + 7);
        v11 = reinterpret_cast<void*>(esp9 + 6);
        eax12 = fun_6e9559a8(a1, v11, v10);
        eax13 = fun_6e954cd0(eax6, v11, v10);
        g6e95d408 = eax13;
        eax14 = fun_6e954cd0(eax8, v11, v10);
        g6e95d404 = eax14;
        fun_6e9559b0(8, v11, v10);
        return eax12;
    }
}

struct s149 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    uint32_t f12;
};

void fun_6e947870(struct s149* a1) {
    uint32_t v2;
    uint32_t v3;
    uint32_t edx4;
    int32_t v5;
    int32_t v6;
    int32_t v7;

    v2 = v3;
    edx4 = v3 >> 24 & 0x7f;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v2) + 3) = *reinterpret_cast<signed char*>(&edx4);
    a1->f0 = v5;
    a1->f4 = v6;
    a1->f8 = v7;
    a1->f12 = v2;
    return;
}

struct s150 {
    signed char[1855311912] pad1855311912;
    unsigned char f1855311912;
};

struct s151 {
    signed char[16] pad16;
    int32_t f16;
    signed char[79] pad99;
    unsigned char f99;
    signed char[12] pad112;
    signed char f112;
};

struct s153 {
    signed char[1855311912] pad1855311912;
    unsigned char f1855311912;
};

struct s152 {
    signed char[152] pad152;
    struct s153* f152;
    int32_t f156;
    int32_t f160;
};

struct s154 {
    signed char[1855311912] pad1855311912;
    unsigned char f1855311912;
};

struct s155 {
    signed char[1] pad1;
    signed char f1;
};

struct s156 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s157 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s158 {
    signed char[99] pad99;
    unsigned char f99;
};

struct s159 {
    signed char[187] pad187;
    signed char f187;
};

struct s160 {
    signed char[96] pad96;
    uint32_t f96;
};

struct s161 {
    signed char[72] pad72;
    void** f72;
};

struct s162 {
    signed char[4] pad4;
    uint32_t f4;
};

void fun_6e952320(void** a1, void** a2, int32_t a3, void** a4) {
    void** ecx5;
    struct s150* esi6;
    struct s150* eax7;
    void*** esp8;
    void*** edi9;
    uint32_t v10;
    signed char v11;
    struct s150* v12;
    int1_t zf13;
    struct s151* eax14;
    struct s152* edx15;
    uint32_t* ebx16;
    int32_t eax17;
    uint32_t ebx18;
    void** eax19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** eax29;
    void* v30;
    signed char* v31;
    void*** v32;
    signed char* v33;
    struct s155* v34;
    uint32_t eax35;
    void* v36;
    struct s156* v37;
    struct s157* v38;
    struct s154* eax39;
    uint32_t* edi40;
    uint32_t ebx41;
    void** v42;
    struct s158* v43;
    struct s154* eax44;
    uint32_t* edi45;
    uint32_t ebx46;
    void** v47;
    uint32_t edx48;
    unsigned char v49;
    struct s159* v50;
    struct s160* v51;
    void** edx52;
    uint32_t eax53;
    struct s150* eax54;
    void*** v55;
    void*** v56;
    int32_t v57;
    void** ebx58;
    void** ebp59;
    int32_t ecx60;
    uint32_t edx61;
    uint32_t eax62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    int32_t* v71;
    int32_t v72;
    void** v73;
    void** v74;
    void** edx75;
    uint32_t ecx76;
    void*** v77;
    void*** v78;
    int32_t v79;
    void** ebx80;
    int32_t ecx81;
    uint32_t ebp82;
    uint32_t eax83;
    uint32_t esi84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    int32_t* v93;
    int32_t v94;
    uint32_t ecx95;
    uint32_t ebp96;
    uint32_t eax97;
    uint32_t esi98;
    int1_t zf99;
    int32_t v100;
    int32_t* ebx101;
    int32_t eax102;
    int32_t v103;
    int32_t v104;
    void** v105;
    int32_t v106;
    struct s161* v107;
    struct s162* v108;

    ecx5 = reinterpret_cast<void**>(32);
    esi6 = eax7;
    esp8 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0xbc);
    edi9 = esp8 + 48;
    while (ecx5) {
        --ecx5;
        edi9 = edi9 + 4;
        esi6 = reinterpret_cast<struct s150*>(reinterpret_cast<uint32_t>(esi6) + 4);
    }
    if ((!(v10 & 0x40000000) || !v11) && (esi6 = v12, !esi6)) {
        zf13 = g6e95d02c == 4;
        if (!zf13) 
            goto addr_6e952420_6;
        if (v10 & 0x40000000) {
        }
    }
    if (eax14->f99 & 64) {
        eax14->f112 = 0;
    }
    eax14->f16 = 0;
    if (edx15->f160 == 1) {
        if (reinterpret_cast<int32_t>(edx15->f152) > 17) 
            goto addr_6e952420_6;
        ecx5 = reinterpret_cast<void**>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(edx15->f152) + 0x6e95d028)));
        ebx16 = *reinterpret_cast<uint32_t**>(esp8 + reinterpret_cast<int32_t>(edx15->f152) * 4 + 48);
        if (!(v10 & 0x40000000)) 
            goto addr_6e9525d3_15;
        if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp8) + reinterpret_cast<int32_t>(edx15->f152) + 0x9c)) 
            goto addr_6e9525c0_17;
    } else {
        if (edx15->f160 != 2) 
            goto addr_6e952420_6;
        eax17 = edx15->f156;
        do {
            ++eax17;
            ebx18 = *reinterpret_cast<unsigned char*>(eax17 - 1);
        } while (*reinterpret_cast<signed char*>(&ebx18) < 0);
        ecx5 = reinterpret_cast<void**>(esp8 + 48);
        eax19 = fun_6e951c60(ecx5, 0);
        esp8 = esp8 - 4 + 12 + 4;
        v20 = eax19;
        goto addr_6e9523d1_22;
    }
    addr_6e9525d3_15:
    if (!reinterpret_cast<int1_t>(ecx5 == 4)) {
        while (1) {
            addr_6e952420_6:
            fun_6e955970(ecx5, v21, v22, v23, v24, v25, v26, v27, v28);
            esp8 = esp8 - 4 + 4;
            while (eax29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v30) + reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1))), *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi6) + 0x6e95d028) <= 4) {
                do {
                    *v31 = 1;
                    while (1) {
                        edi9 = v32;
                        *edi9 = eax29;
                        while (esi6 = reinterpret_cast<struct s150*>(reinterpret_cast<uint32_t>(esi6) + 1), ebx16 = ebx16 + 2, v33 = &v34->f1, !reinterpret_cast<int1_t>(esi6 == 18)) {
                            addr_6e9523f0_27:
                            if (*ebx16 > 5) 
                                continue;
                            eax35 = *ebx16;
                            switch (eax35) {
                            case 32:
                                goto 0x6e954c30;
                            case 29:
                                goto 0x6e954587;
                            case 21:
                                goto 0x6e9545f6;
                            case 1:
                                goto 0x6e952541;
                            case 19:
                            case 22:
                            case 30:
                                goto 0x6e954550;
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                                goto 0x6e954601;
                            case 16:
                                goto 0x6e9533a7;
                            case 20:
                                goto 0x6e9545d0;
                            case 15:
                                goto 0x6e9533b0;
                            case 2:
                                goto 0x6e952520;
                            case 10:
                            case 18:
                                goto 0x6e9533a0;
                            case 8:
                                goto 0x6e9533f0;
                            case 7:
                                goto 0x6e9533c3;
                            case 23:
                            case 31:
                                goto 0x6e954580;
                            case 28:
                                goto 0x6e954590;
                            case 0:
                                goto 0x6e952442;
                            case 4:
                                goto 0x6e952425;
                            case 6:
                            case 9:
                            case 17:
                                goto 0x6e953370;
                            case 5:
                                goto 0x6e9524d6;
                            case 3:
                                goto 0x6e952480;
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                                goto 0x6e953400;
                            }
                        }
                        goto addr_6e952457_29;
                        eax29 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(v36) + reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)));
                        if (!(v37->f99 & 64)) 
                            continue;
                        addr_6e9524ca_32:
                        *v33 = 0;
                        continue;
                        if (*reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(esp8) + reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)) + 0x9c)) 
                            goto addr_6e952560_34;
                        eax29 = (esp8 + reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)) * 4)[48];
                        if (!(v38->f99 & 64)) 
                            continue;
                        goto addr_6e9524ca_32;
                        eax39 = *reinterpret_cast<struct s154**>(ebx16 - 1);
                        edi40 = ebx16;
                        esi6 = esi6;
                        do {
                            eax39 = reinterpret_cast<struct s154*>(reinterpret_cast<uint32_t>(eax39) + 1);
                            ebx41 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax39) + 0xffffffff);
                        } while (*reinterpret_cast<signed char*>(&ebx41) < 0);
                        ebx16 = edi40;
                        ecx5 = reinterpret_cast<void**>(esp8 + 48);
                        eax29 = fun_6e951c60(ecx5, v42);
                        esp8 = esp8 - 4 + 12 + 4;
                        if (v43->f99 & 64) 
                            goto addr_6e9524ca_32;
                    }
                    eax44 = *reinterpret_cast<struct s154**>(ebx16 - 1);
                    edi45 = ebx16;
                    do {
                        eax44 = reinterpret_cast<struct s154*>(reinterpret_cast<uint32_t>(eax44) + 1);
                        ebx46 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(eax44) + 0xffffffff);
                    } while (*reinterpret_cast<signed char*>(&ebx46) < 0);
                    ebx16 = edi45;
                    ecx5 = reinterpret_cast<void**>(esp8 + 48);
                    eax29 = fun_6e951c60(ecx5, v47);
                    esp8 = esp8 - 4 + 12 + 4;
                    continue;
                    addr_6e952560_34:
                    if (reinterpret_cast<int32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)) > reinterpret_cast<int32_t>(17)) 
                        goto addr_6e952420_6;
                    edx48 = *reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)) + 0x6e95d028);
                    eax29 = (esp8 + reinterpret_cast<uint32_t>(*reinterpret_cast<struct s154**>(ebx16 - 1)) * 4)[48];
                    if (!(v49 & 64)) {
                        if (*reinterpret_cast<signed char*>(&edx48) != 4) 
                            goto addr_6e952420_6;
                        eax29 = *reinterpret_cast<void***>(eax29);
                    }
                } while (*reinterpret_cast<unsigned char*>(reinterpret_cast<uint32_t>(esi6) + 0x6e95d028) <= 4);
                goto addr_6e952519_47;
            }
            continue;
            addr_6e952519_47:
        }
    } else {
        goto addr_6e9525c0_17;
    }
    addr_6e952457_29:
    if (v50->f187) {
        v51->f96 = v51->f96 | 0x80000000;
        return;
    } else {
        v51->f96 = v51->f96 & 0x7fffffff;
        return;
    }
    edx52 = *reinterpret_cast<void***>(ecx5);
    addr_6e953375_52:
    if (edx52) {
        eax53 = reinterpret_cast<uint32_t>(esi6) & 0x70;
        eax54 = esi6;
        if (*reinterpret_cast<signed char*>(&eax53) != 16) {
            edi9 = v55;
        }
        edx52 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx52) + reinterpret_cast<uint32_t>(edi9));
        if (*reinterpret_cast<signed char*>(&eax54) < 0) {
            edx52 = *reinterpret_cast<void***>(edx52);
        }
    }
    *v56 = edx52;
    goto v57;
    ebx58 = ecx5;
    ebp59 = reinterpret_cast<void**>(0);
    ecx60 = 0;
    esi6 = esi6;
    do {
        ++ebx58;
        edx61 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx58 + 0xffffffff));
        eax62 = (edx61 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx60);
        ecx60 = ecx60 + 7;
        ebp59 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp59) | eax62);
    } while (*reinterpret_cast<signed char*>(&edx61) < 0);
    edx52 = ebp59;
    goto addr_6e953375_52;
    edx52 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx5))));
    goto addr_6e953375_52;
    edx52 = *reinterpret_cast<void***>(ecx5);
    goto addr_6e953375_52;
    fun_6e955970(ecx5, v63, v64, v65, v66, v67, v68, v69, v70);
    *v71 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx5 + 3) & 0xfffffffc);
    goto v72;
    fun_6e953120(v73);
    edx52 = v74;
    goto addr_6e953375_52;
    edx52 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx5))));
    goto addr_6e953375_52;
    edx75 = *reinterpret_cast<void***>(ecx5);
    addr_6e954555_68:
    if (edx75) {
        ecx76 = eax35 & 0x70;
        if (*reinterpret_cast<signed char*>(&ecx76) != 16) {
            edi9 = v77;
        }
        edx75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx75) + reinterpret_cast<uint32_t>(edi9));
        if (*reinterpret_cast<signed char*>(&eax35) < 0) {
            edx75 = *reinterpret_cast<void***>(edx75);
        }
    }
    *v78 = edx75;
    goto v79;
    ebx80 = ecx5;
    edx75 = reinterpret_cast<void**>(0);
    ecx81 = 0;
    ebp82 = eax35;
    do {
        ++ebx80;
        eax83 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx80 + 0xffffffff));
        esi84 = (eax83 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx81);
        ecx81 = ecx81 + 7;
        edx75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx75) | esi84);
    } while (*reinterpret_cast<signed char*>(&eax83) < 0);
    eax35 = ebp82;
    goto addr_6e954555_68;
    edx75 = reinterpret_cast<void**>(static_cast<uint32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<void***>(ecx5))));
    goto addr_6e954555_68;
    edx75 = *reinterpret_cast<void***>(ecx5);
    goto addr_6e954555_68;
    fun_6e955970(ecx5, v85, v86, v87, v88, v89, v90, v91, v92);
    *v93 = *reinterpret_cast<int32_t*>(reinterpret_cast<uint32_t>(ecx5 + 3) & 0xfffffffc);
    goto v94;
    ebx80 = ecx5;
    edx75 = reinterpret_cast<void**>(0);
    ecx95 = 0;
    ebp96 = eax35;
    do {
        ++ebx80;
        eax97 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx80 + 0xffffffff));
        esi98 = (eax97 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx95);
        ecx95 = ecx95 + 7;
        edx75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx75) | esi98);
    } while (*reinterpret_cast<signed char*>(&eax97) < 0);
    eax35 = ebp96;
    if (ecx95 <= 31 && eax97 & 64) {
        edx75 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx75) | 0xffffffff << *reinterpret_cast<unsigned char*>(&ecx95));
        goto addr_6e954555_68;
    }
    edx75 = reinterpret_cast<void**>(static_cast<int32_t>(reinterpret_cast<int16_t>(*reinterpret_cast<void***>(ecx5))));
    goto addr_6e954555_68;
    zf99 = g6e956014 == 2;
    if (!zf99) {
        g6e956014 = 2;
    }
    if (v100 == 2) {
        ebx101 = reinterpret_cast<int32_t*>(0x6e960028);
        if (!1) {
            do {
                eax102 = *ebx101;
                if (eax102) {
                    eax102(0x6e952425);
                }
                ++ebx101;
            } while (!reinterpret_cast<int1_t>(ebx101 == 0x6e960028));
            goto v103;
        }
    } else {
        if (v100 == 1) {
            fun_6e955550(v104, 1, v105);
        }
    }
    goto v106;
    addr_6e9525c0_17:
    addr_6e9523d1_22:
    v107->f72 = v20;
    ebx16 = &v108->f4;
    esi6 = reinterpret_cast<struct s150*>(0);
    goto addr_6e9523f0_27;
}

void** __deregister_frame_info_bases(void** ecx, void** a2) {
    void** v3;
    void** v4;
    void** esi5;
    void** v6;
    void** ebx7;
    void** esi8;
    void** eax9;
    void** ebx10;
    void** v11;
    void** v12;
    void** v13;
    void** v14;
    void** eax15;
    void** v16;
    void** v17;
    void** v18;

    v3 = reinterpret_cast<void**>(__return_address());
    v4 = esi5;
    v6 = ebx7;
    esi8 = a2;
    if (!esi8 || !*reinterpret_cast<void***>(esi8)) {
        return 0;
    }
    fun_6e954ad8(0x6e956004);
    eax9 = g6e95d04c;
    if (!eax9) {
        addr_6e9542a4_4:
        ebx10 = g6e95d048;
        if (!ebx10) {
            addr_6e954300_5:
            fun_6e954ae0(0x6e956004);
            eax15 = fun_6e955970(ecx, 0x6e956004, v11, v12, v13, v14, v6, v4, v3);
        } else {
            eax15 = reinterpret_cast<void**>(0x6e95d048);
            do {
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx10 + 16)) & 1) {
                    if (*reinterpret_cast<void***>(*reinterpret_cast<void***>(ebx10 + 12)) == esi8) 
                        break;
                } else {
                    if (*reinterpret_cast<void***>(ebx10 + 12) == esi8) 
                        goto addr_6e9542d1_10;
                }
                eax15 = ebx10 + 20;
                ebx10 = *reinterpret_cast<void***>(ebx10 + 20);
            } while (ebx10);
            goto addr_6e954300_5;
        }
    } else {
        if (*reinterpret_cast<void***>(eax9 + 12) != esi8) {
            while (ebx10 = *reinterpret_cast<void***>(eax9 + 20), !!ebx10) {
                if (*reinterpret_cast<void***>(ebx10 + 12) == esi8) 
                    goto addr_6e9542f0_15;
                eax9 = ebx10;
            }
            goto addr_6e9542a4_4;
        } else {
            ebx10 = eax9;
            eax15 = reinterpret_cast<void**>(0x6e95d04c);
            goto addr_6e9542d1_10;
        }
    }
    *reinterpret_cast<void***>(eax15) = *reinterpret_cast<void***>(ebx10 + 20);
    v16 = *reinterpret_cast<void***>(ebx10 + 12);
    fun_6e955960(v16, v17, v18);
    addr_6e9542d6_20:
    fun_6e954ae0(0x6e956004);
    return ebx10;
    addr_6e9542d1_10:
    *reinterpret_cast<void***>(eax15) = *reinterpret_cast<void***>(ebx10 + 20);
    goto addr_6e9542d6_20;
    addr_6e9542f0_15:
    eax15 = eax9 + 20;
    goto addr_6e9542d1_10;
}

void** _Unwind_GetTextRelBase(void** a1) {
    return *reinterpret_cast<void***>(a1 + 84);
}

struct s31* _Unwind_GetLanguageSpecificData(void** a1) {
    return *reinterpret_cast<struct s31**>(a1 + 80);
}

int32_t pthread_key_create = 0x1f46c;

int32_t fun_6e954ae8() {
    goto pthread_key_create;
}

int32_t calloc = 0x1f3ee;

void** fun_6e955998(void** a1, void** a2) {
    goto calloc;
}

int32_t g6e95d3c4;

int32_t InitializeCriticalSection = 0x1f2b6;

void fun_6e9553a0();

int32_t DeleteCriticalSection = 0x1f1d8;

int32_t fun_6e955550(int32_t a1, uint32_t a2, void** a3) {
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t eax7;

    if (a2 == 1) {
        eax4 = g6e95d3c4;
        if (!eax4) {
            InitializeCriticalSection(0x6e95d3c8);
        }
        g6e95d3c4 = 1;
        return 1;
    } else {
        if (a2 < 1) {
            eax5 = g6e95d3c4;
            if (eax5) {
                fun_6e9553a0();
            }
            eax6 = g6e95d3c4;
            if (eax6 == 1) {
                g6e95d3c4 = 0;
                DeleteCriticalSection(0x6e95d3c8);
            }
        } else {
            if (a2 == 3 && (eax7 = g6e95d3c4, !!eax7)) {
                fun_6e9553a0();
            }
        }
        return 1;
    }
}

int32_t fwrite = 0x1f400;

void fun_6e9559b8(int32_t a1, int32_t a2, int32_t a3, void** a4) {
    goto fwrite;
}

int32_t vfprintf = 0x1f446;

void fun_6e9559c0() {
    goto vfprintf;
}

int32_t EnterCriticalSection = 0x1f1f0;

void** g6e95d3c0;

int32_t TlsGetValue = 0x1f34e;

int32_t LeaveCriticalSection = 0x1f2d2;

void fun_6e9553a0() {
    void** edi1;
    int32_t esi2;
    int32_t esi3;
    void** v4;
    void** eax5;
    int32_t eax6;
    void** eax7;

    EnterCriticalSection(0x6e95d3c8);
    edi1 = g6e95d3c0;
    esi2 = GetLastError;
    if (edi1) {
        esi3 = esi2;
        do {
            v4 = *reinterpret_cast<void***>(edi1);
            eax5 = reinterpret_cast<void**>(TlsGetValue(v4, 0x6e95d3c8));
            eax6 = reinterpret_cast<int32_t>(esi3(0x6e9553db, v4, 0x6e95d3c8));
            if (!eax6 && eax5) {
                eax7 = *reinterpret_cast<void***>(edi1 + 4);
                eax7(eax5, v4, 0x6e95d3c8);
            }
            edi1 = *reinterpret_cast<void***>(edi1 + 8);
        } while (edi1);
    }
    LeaveCriticalSection(0x6e95d3c8, 0x6e95d3c8);
    return;
}

struct s163 {
    int32_t f0;
    signed char[20] pad24;
    int16_t f24;
};

struct s164 {
    signed char[60] pad60;
    int32_t f60;
};

uint32_t fun_6e9555f0(int32_t a1) {
    struct s163* eax2;
    int32_t eax3;
    struct s164* eax4;

    eax2 = reinterpret_cast<struct s163*>(eax3 + eax4->f60);
    if (eax2->f0 == 0x4550) {
        return static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(eax2->f24 == 0x10b)));
    } else {
        return 0;
    }
}

uint32_t g6e95d400;

void fun_6e9559d0(int32_t ecx, int32_t* a2, int32_t* a3) {
    uint32_t esi4;
    uint32_t edx5;
    uint32_t edx6;
    uint32_t edx7;
    uint32_t edx8;
    uint32_t eax9;
    unsigned char al10;
    unsigned char ah11;
    uint32_t edx12;
    uint32_t eax13;
    uint32_t edx14;
    uint32_t eax15;
    uint32_t edx16;
    uint32_t eax17;
    int32_t ebx18;
    uint32_t eax19;

    esi4 = edx5 >> 15 & 1;
    if (edx6 & 0x800000) {
        esi4 = esi4 | 2;
    }
    if (edx7 & 0x2000000) {
        esi4 = esi4 | 8;
    }
    if (edx8 & 0x4000000) {
        esi4 = esi4 | 16;
    }
    if (eax9 & 0x800000) {
        esi4 = esi4 | 4;
    }
    if (al10 & 1) {
        esi4 = esi4 | 32;
    }
    if (ah11 & 2) {
        esi4 = esi4 | 64;
    }
    edx12 = esi4;
    *reinterpret_cast<unsigned char*>(&edx12) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&edx12) | 0x80);
    if (eax13 & 0x80000) {
        esi4 = edx12;
    }
    edx14 = esi4;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx14) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx14) + 1) | 1);
    if (eax15 & 0x100000) {
        esi4 = edx14;
    }
    edx16 = esi4;
    *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&edx16) + 1) | 2);
    if (eax17 & 0x10000000) {
        esi4 = edx16;
    }
    if (ecx > 6 && (ebx18 = __intrinsic(), eax19 = esi4, *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax19) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax19) + 1) | 4), !!(*reinterpret_cast<unsigned char*>(&ebx18) & 32))) {
        esi4 = eax19;
    }
    g6e95d400 = esi4;
    return;
}

int32_t g6e94003c;

uint32_t fun_6e955760() {
    int1_t zf1;
    int32_t ebx2;
    uint32_t eax3;
    int32_t eax4;

    zf1 = image_base_ == 0x5a4d;
    if (!zf1 || (eax3 = fun_6e9555f0(ebx2), eax3 == 0)) {
        return 0;
    } else {
        eax4 = g6e94003c;
        return static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(eax4 + 0x6e940006));
    }
}

void __register_frame_info_table_bases(void** a1, void** a2, void** a3, void** a4) {
    void** eax5;

    *reinterpret_cast<void***>(a2 + 16) = reinterpret_cast<void**>(0);
    *reinterpret_cast<void***>(a2 + 4) = a3;
    *reinterpret_cast<void***>(a2 + 16) = reinterpret_cast<void**>(2);
    *reinterpret_cast<void***>(a2) = reinterpret_cast<void**>(0xffffffff);
    *reinterpret_cast<void***>(a2 + 8) = a4;
    *reinterpret_cast<void***>(a2 + 16) = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(a2 + 16)) | 0x7f8);
    *reinterpret_cast<void***>(a2 + 12) = a1;
    fun_6e954ad8(0x6e956004);
    eax5 = g6e95d04c;
    g6e95d04c = a2;
    *reinterpret_cast<void***>(a2 + 20) = eax5;
    goto pthread_mutex_unlock;
}

int32_t GetModuleHandleA = 0x1f266;

int32_t LoadLibraryA = 0x1f2ea;

int32_t g6e95d01c;

int32_t GetProcAddress = 0x1f27a;

int32_t g6e956020 = 0;

void fun_6e941460() {
    int32_t ebx1;
    int32_t v2;
    int32_t eax3;
    int32_t eax4;
    int32_t eax5;
    int32_t eax6;
    int32_t v7;
    int32_t eax8;
    int32_t edx9;
    int32_t eax10;

    ebx1 = GetModuleHandleA;
    v2 = reinterpret_cast<int32_t>("libgcc_s_dw2-1.dll");
    eax3 = reinterpret_cast<int32_t>(ebx1("libgcc_s_dw2-1.dll"));
    eax4 = 0x6e954120;
    if (eax3) {
        eax5 = reinterpret_cast<int32_t>(LoadLibraryA("libgcc_s_dw2-1.dll", "libgcc_s_dw2-1.dll"));
        g6e95d01c = eax5;
        eax4 = reinterpret_cast<int32_t>(GetProcAddress(eax3, "__register_frame_info", "libgcc_s_dw2-1.dll"));
    }
    if (eax4) {
        v2 = 0x6e95d004;
        eax4(0x6e95a0e4, 0x6e95d004);
    }
    eax6 = g6e956020;
    if (eax6) {
        v7 = reinterpret_cast<int32_t>("libgcj-13.dll");
        eax8 = reinterpret_cast<int32_t>(ebx1("libgcj-13.dll", v2));
        edx9 = 0;
        if (eax8) {
            v7 = reinterpret_cast<int32_t>("_Jv_RegisterClasses");
            eax10 = reinterpret_cast<int32_t>(GetProcAddress(eax8, "_Jv_RegisterClasses", v2));
            edx9 = eax10;
        }
        if (edx9) {
            edx9(0x6e956020, v7, v2);
        }
    }
    return;
}

int32_t fun_6e941000() {
    void** eax1;
    void* v2;
    void* v3;
    void** eax4;

    eax1 = fun_6e955950(0x80);
    eax4 = fun_6e954cd0(eax1, v2, v3);
    g6e95d408 = eax4;
    g6e95d404 = eax4;
    if (!eax1) {
        return 1;
    } else {
        *reinterpret_cast<void***>(eax1) = reinterpret_cast<void**>(0);
        return 0;
    }
}

void fun_6e955d53() {
    int32_t eax1;

    eax1();
    __asm__("outsb ");
}

void fun_6e955d5c() {
    signed char* eax1;
    signed char* eax2;
    signed char al3;
    signed char* eax4;
    signed char* eax5;
    signed char al6;

    *eax1 = reinterpret_cast<signed char>(*eax2 + al3);
    *eax4 = reinterpret_cast<signed char>(*eax5 + al6);
}

void fun_6e955d63() {
    int32_t* eax1;
    int32_t* eax2;
    signed char* eax3;
    signed char* eax4;
    signed char al5;
    signed char* eax6;
    signed char* eax7;
    signed char al8;
    signed char* eax9;
    signed char* eax10;
    signed char al11;
    signed char* eax12;
    signed char* eax13;
    signed char al14;
    signed char* eax15;
    signed char* eax16;
    signed char al17;
    signed char* eax18;
    signed char* eax19;
    signed char al20;
    signed char* eax21;
    signed char* eax22;
    signed char al23;
    signed char* eax24;
    signed char* eax25;
    signed char al26;
    signed char* eax27;
    signed char* eax28;
    signed char al29;
    signed char* eax30;
    signed char* eax31;
    signed char al32;
    signed char* eax33;
    signed char* eax34;
    signed char al35;
    signed char* eax36;
    signed char* eax37;
    signed char al38;
    signed char* eax39;
    signed char* eax40;
    signed char al41;
    signed char* eax42;
    signed char* eax43;
    signed char al44;
    signed char* eax45;
    signed char* eax46;
    signed char al47;
    signed char* eax48;
    signed char* eax49;
    signed char al50;
    signed char* eax51;
    signed char* eax52;
    signed char al53;
    signed char* eax54;
    signed char* eax55;
    signed char al56;
    signed char* eax57;
    signed char* eax58;
    signed char al59;
    signed char* eax60;
    signed char* eax61;
    signed char al62;
    signed char* eax63;
    signed char* eax64;
    signed char al65;
    signed char* eax66;
    signed char* eax67;
    signed char al68;
    signed char* eax69;
    signed char* eax70;
    signed char al71;
    signed char* eax72;
    signed char* eax73;
    signed char al74;
    signed char* eax75;
    signed char* eax76;
    signed char al77;
    signed char* eax78;
    signed char* eax79;
    signed char al80;
    signed char* eax81;
    signed char* eax82;
    signed char al83;
    signed char* eax84;
    signed char* eax85;
    signed char al86;
    signed char* eax87;
    signed char* eax88;
    signed char al89;
    signed char* eax90;
    signed char* eax91;
    signed char al92;
    signed char* eax93;
    signed char* eax94;
    signed char al95;
    signed char* eax96;
    signed char* eax97;
    signed char al98;
    signed char* eax99;
    signed char* eax100;
    signed char al101;
    signed char* eax102;
    signed char* eax103;
    signed char al104;
    signed char* eax105;
    signed char* eax106;
    signed char al107;
    signed char* eax108;
    signed char* eax109;
    signed char al110;
    signed char* eax111;
    signed char* eax112;
    signed char al113;
    signed char* eax114;
    signed char* eax115;
    signed char al116;
    signed char* eax117;
    signed char* eax118;
    signed char al119;
    signed char* eax120;
    signed char* eax121;
    signed char al122;
    signed char* eax123;
    signed char* eax124;
    signed char al125;
    signed char* eax126;
    signed char* eax127;
    signed char al128;
    signed char* eax129;
    signed char* eax130;
    signed char al131;
    signed char* eax132;
    signed char* eax133;
    signed char al134;
    signed char* eax135;
    signed char* eax136;
    signed char al137;
    signed char* eax138;
    signed char* eax139;
    signed char al140;
    signed char* eax141;
    signed char* eax142;
    signed char al143;
    signed char* eax144;
    signed char* eax145;
    signed char al146;
    signed char* eax147;
    signed char* eax148;
    signed char al149;
    signed char* eax150;
    signed char* eax151;
    signed char al152;
    signed char* eax153;
    signed char* eax154;
    signed char al155;
    signed char* eax156;
    signed char* eax157;
    signed char al158;
    signed char* eax159;
    signed char* eax160;
    signed char al161;
    signed char* eax162;
    signed char* eax163;
    signed char al164;
    signed char* eax165;
    signed char* eax166;
    signed char al167;
    signed char* eax168;
    signed char* eax169;
    signed char al170;
    signed char* eax171;
    signed char* eax172;
    signed char al173;
    signed char* eax174;
    signed char* eax175;
    signed char al176;
    signed char* eax177;
    signed char* eax178;
    signed char al179;
    signed char* eax180;
    signed char* eax181;
    signed char al182;
    signed char* eax183;
    signed char* eax184;
    signed char al185;
    signed char* eax186;
    signed char* eax187;
    signed char al188;
    signed char* eax189;
    signed char* eax190;
    signed char al191;
    signed char* eax192;
    signed char* eax193;
    signed char al194;
    signed char* eax195;
    signed char* eax196;
    signed char al197;
    signed char* eax198;
    signed char* eax199;
    signed char al200;
    signed char* eax201;
    signed char* eax202;
    signed char al203;
    signed char* eax204;
    signed char* eax205;
    signed char al206;
    signed char* eax207;
    signed char* eax208;
    signed char al209;
    signed char* eax210;
    signed char* eax211;
    signed char al212;
    signed char* eax213;
    signed char* eax214;
    signed char al215;
    signed char* eax216;
    signed char* eax217;
    signed char al218;
    signed char* eax219;
    signed char* eax220;
    signed char al221;
    signed char* eax222;
    signed char* eax223;
    signed char al224;
    signed char* eax225;
    signed char* eax226;
    signed char al227;
    signed char* eax228;
    signed char* eax229;
    signed char al230;
    signed char* eax231;
    signed char* eax232;
    signed char al233;

    *eax1 = *eax2 + 1;
    *eax3 = reinterpret_cast<signed char>(*eax4 + al5);
    *eax6 = reinterpret_cast<signed char>(*eax7 + al8);
    *eax9 = reinterpret_cast<signed char>(*eax10 + al11);
    *eax12 = reinterpret_cast<signed char>(*eax13 + al14);
    *eax15 = reinterpret_cast<signed char>(*eax16 + al17);
    *eax18 = reinterpret_cast<signed char>(*eax19 + al20);
    *eax21 = reinterpret_cast<signed char>(*eax22 + al23);
    *eax24 = reinterpret_cast<signed char>(*eax25 + al26);
    *eax27 = reinterpret_cast<signed char>(*eax28 + al29);
    *eax30 = reinterpret_cast<signed char>(*eax31 + al32);
    *eax33 = reinterpret_cast<signed char>(*eax34 + al35);
    *eax36 = reinterpret_cast<signed char>(*eax37 + al38);
    *eax39 = reinterpret_cast<signed char>(*eax40 + al41);
    *eax42 = reinterpret_cast<signed char>(*eax43 + al44);
    *eax45 = reinterpret_cast<signed char>(*eax46 + al47);
    *eax48 = reinterpret_cast<signed char>(*eax49 + al50);
    *eax51 = reinterpret_cast<signed char>(*eax52 + al53);
    *eax54 = reinterpret_cast<signed char>(*eax55 + al56);
    *eax57 = reinterpret_cast<signed char>(*eax58 + al59);
    *eax60 = reinterpret_cast<signed char>(*eax61 + al62);
    *eax63 = reinterpret_cast<signed char>(*eax64 + al65);
    *eax66 = reinterpret_cast<signed char>(*eax67 + al68);
    *eax69 = reinterpret_cast<signed char>(*eax70 + al71);
    *eax72 = reinterpret_cast<signed char>(*eax73 + al74);
    *eax75 = reinterpret_cast<signed char>(*eax76 + al77);
    *eax78 = reinterpret_cast<signed char>(*eax79 + al80);
    *eax81 = reinterpret_cast<signed char>(*eax82 + al83);
    *eax84 = reinterpret_cast<signed char>(*eax85 + al86);
    *eax87 = reinterpret_cast<signed char>(*eax88 + al89);
    *eax90 = reinterpret_cast<signed char>(*eax91 + al92);
    *eax93 = reinterpret_cast<signed char>(*eax94 + al95);
    *eax96 = reinterpret_cast<signed char>(*eax97 + al98);
    *eax99 = reinterpret_cast<signed char>(*eax100 + al101);
    *eax102 = reinterpret_cast<signed char>(*eax103 + al104);
    *eax105 = reinterpret_cast<signed char>(*eax106 + al107);
    *eax108 = reinterpret_cast<signed char>(*eax109 + al110);
    *eax111 = reinterpret_cast<signed char>(*eax112 + al113);
    *eax114 = reinterpret_cast<signed char>(*eax115 + al116);
    *eax117 = reinterpret_cast<signed char>(*eax118 + al119);
    *eax120 = reinterpret_cast<signed char>(*eax121 + al122);
    *eax123 = reinterpret_cast<signed char>(*eax124 + al125);
    *eax126 = reinterpret_cast<signed char>(*eax127 + al128);
    *eax129 = reinterpret_cast<signed char>(*eax130 + al131);
    *eax132 = reinterpret_cast<signed char>(*eax133 + al134);
    *eax135 = reinterpret_cast<signed char>(*eax136 + al137);
    *eax138 = reinterpret_cast<signed char>(*eax139 + al140);
    *eax141 = reinterpret_cast<signed char>(*eax142 + al143);
    *eax144 = reinterpret_cast<signed char>(*eax145 + al146);
    *eax147 = reinterpret_cast<signed char>(*eax148 + al149);
    *eax150 = reinterpret_cast<signed char>(*eax151 + al152);
    *eax153 = reinterpret_cast<signed char>(*eax154 + al155);
    *eax156 = reinterpret_cast<signed char>(*eax157 + al158);
    *eax159 = reinterpret_cast<signed char>(*eax160 + al161);
    *eax162 = reinterpret_cast<signed char>(*eax163 + al164);
    *eax165 = reinterpret_cast<signed char>(*eax166 + al167);
    *eax168 = reinterpret_cast<signed char>(*eax169 + al170);
    *eax171 = reinterpret_cast<signed char>(*eax172 + al173);
    *eax174 = reinterpret_cast<signed char>(*eax175 + al176);
    *eax177 = reinterpret_cast<signed char>(*eax178 + al179);
    *eax180 = reinterpret_cast<signed char>(*eax181 + al182);
    *eax183 = reinterpret_cast<signed char>(*eax184 + al185);
    *eax186 = reinterpret_cast<signed char>(*eax187 + al188);
    *eax189 = reinterpret_cast<signed char>(*eax190 + al191);
    *eax192 = reinterpret_cast<signed char>(*eax193 + al194);
    *eax195 = reinterpret_cast<signed char>(*eax196 + al197);
    *eax198 = reinterpret_cast<signed char>(*eax199 + al200);
    *eax201 = reinterpret_cast<signed char>(*eax202 + al203);
    *eax204 = reinterpret_cast<signed char>(*eax205 + al206);
    *eax207 = reinterpret_cast<signed char>(*eax208 + al209);
    *eax210 = reinterpret_cast<signed char>(*eax211 + al212);
    *eax213 = reinterpret_cast<signed char>(*eax214 + al215);
    *eax216 = reinterpret_cast<signed char>(*eax217 + al218);
    *eax219 = reinterpret_cast<signed char>(*eax220 + al221);
    *eax222 = reinterpret_cast<signed char>(*eax223 + al224);
    *eax225 = reinterpret_cast<signed char>(*eax226 + al227);
    *eax228 = reinterpret_cast<signed char>(*eax229 + al230);
    *eax231 = reinterpret_cast<signed char>(*eax232 + al233);
}

void fun_6e941449() {
    void** v1;
    int32_t v2;

    fun_6e955260(__return_address());
    fun_6e941260(v1, __return_address());
    goto v2;
}

int32_t FreeLibrary = 0x1f208;

void fun_6e94150c() {
    int32_t eax1;
    int32_t edx2;
    int32_t eax3;

    eax1 = 0x6e954330;
    edx2 = g6e95d01c;
    if (edx2) {
        eax1 = reinterpret_cast<int32_t>(GetProcAddress(edx2, "__deregister_frame_info"));
    }
    if (eax1) {
        eax1(0x6e95a0e4, "__deregister_frame_info");
    }
    eax3 = g6e95d01c;
    if (eax3) {
        FreeLibrary(eax3, "__deregister_frame_info");
    }
    return;
}

void fun_6e941560(int32_t ecx) {
    int32_t v2;
    void* ecx3;
    uint32_t eax4;
    uint32_t eax5;
    uint32_t* ecx6;
    int32_t* esp7;

    v2 = reinterpret_cast<int32_t>(__return_address());
    ecx3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 8);
    if (eax4 >= 0x1000) {
        do {
            ecx3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx3) - 0x1000);
            eax5 = eax5 - 0x1000;
        } while (eax5 > 0x1000);
    }
    ecx6 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(ecx3) - eax5);
    *ecx6 = *ecx6;
    esp7 = reinterpret_cast<int32_t*>(ecx6 - 1);
    *esp7 = v2;
    goto *esp7;
}

int32_t __muldi3(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    return a1 * a3;
}

void fun_6e94164a(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    goto a4;
}

void fun_6e9416ea(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    goto a4;
}

int32_t __ucmpdi2(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    int32_t eax5;

    eax5 = 0;
    if (a2 < a4) {
        addr_6e94175f_2:
        return eax5;
    } else {
        if (a2 > a4) 
            goto addr_6e94175a_4;
        if (a1 < a3) 
            goto addr_6e94175f_2;
    }
    if (a1 > a3) {
        addr_6e94175a_4:
        eax5 = 2;
        goto addr_6e94175f_2;
    } else {
        eax5 = 1;
        goto addr_6e94175f_2;
    }
}

void __clear_cache() {
    return;
}

void fun_6e94185c() {
}

void fun_6e9418a9() {
}

void fun_6e9418bc() {
}

void** fun_6e9418df(void** ecx, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8) {
    int32_t eax9;
    void** eax10;
    uint1_t cf11;
    void** v12;
    void** v13;
    uint32_t eax14;
    uint32_t v15;
    unsigned char dl16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** edi22;
    void** v23;
    void** esi24;
    void** v25;
    void** ebx26;
    void** ecx27;
    void** v28;
    void** tmp32_29;
    void* v30;
    void** eax31;
    uint32_t edx32;
    int32_t v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    int32_t v38;
    int32_t v39;

    if (-eax9 >= 0) {
        goto a4;
    } else {
        fun_6e955970(ecx, __return_address(), a2, a3, a4, a5, a6, a7, a8);
        eax10 = a2;
        if (reinterpret_cast<signed char>(a3) >= reinterpret_cast<signed char>(0) || (cf11 = reinterpret_cast<uint1_t>(!!eax10), eax10 = reinterpret_cast<void**>(-reinterpret_cast<unsigned char>(eax10)), reinterpret_cast<int32_t>(-(reinterpret_cast<unsigned char>(a3) + cf11)) >= 0)) {
            return eax10;
        } else {
            fun_6e955970(ecx, v12, v13, 0x6e9418eb, __return_address(), a2, a3, a4, a5);
            eax14 = v15 + reinterpret_cast<unsigned char>(0x6e9418eb);
            if (0) {
                dl16 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax14) > reinterpret_cast<int32_t>(v15));
            } else {
                dl16 = reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax14) < reinterpret_cast<int32_t>(v15));
            }
            if (dl16) {
                fun_6e955970(0x6e9418eb, v17, v18, 0x6e941913, v19, v20, 0x6e9418eb, __return_address(), a2);
                v21 = edi22;
                v23 = esi24;
                v25 = ebx26;
                ecx27 = v28;
                tmp32_29 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx27) + reinterpret_cast<uint32_t>(v30));
                eax31 = tmp32_29;
                edx32 = 0x6e941913 + v33 + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_29) < reinterpret_cast<unsigned char>(ecx27));
                if (v33 < 0) {
                    while (reinterpret_cast<int32_t>(edx32) > reinterpret_cast<int32_t>(0x6e941913) || reinterpret_cast<int32_t>(edx32) >= reinterpret_cast<int32_t>(0x6e941913) && reinterpret_cast<unsigned char>(eax31) > reinterpret_cast<unsigned char>(ecx27)) {
                        addr_6e941979_12:
                        eax31 = fun_6e955970(ecx27, v25, v23, v21, v34, v35, 0x6e941913, v36, v37);
                    }
                } else {
                    if (reinterpret_cast<int32_t>(edx32) < reinterpret_cast<int32_t>(0x6e941913)) 
                        goto addr_6e941979_12;
                    if (reinterpret_cast<int32_t>(edx32) > reinterpret_cast<int32_t>(0x6e941913)) 
                        goto addr_6e941992_15;
                    if (reinterpret_cast<unsigned char>(eax31) < reinterpret_cast<unsigned char>(ecx27)) 
                        goto addr_6e941979_12;
                }
                addr_6e941992_15:
                goto v38;
            } else {
                goto v39;
            }
        }
    }
}

void __subvsi3(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** eax6;
    unsigned char dl7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** edi12;
    void** v13;
    void** esi14;
    void** v15;
    void** ebx16;
    void** ecx17;
    void** v18;
    uint32_t ebx19;
    uint32_t v20;
    void** eax21;
    uint32_t edx22;
    void** v23;
    void** v24;
    void** v25;
    int32_t v26;

    v5 = reinterpret_cast<void**>(__return_address());
    eax6 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(a1) - reinterpret_cast<unsigned char>(a2));
    if (reinterpret_cast<signed char>(a2) < reinterpret_cast<signed char>(0)) {
        dl7 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax6) < reinterpret_cast<signed char>(a1));
    } else {
        dl7 = reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(eax6) > reinterpret_cast<signed char>(a1));
    }
    if (dl7) {
        fun_6e955970(a2, v8, v9, v10, v5, a1, a2, a3, a4);
        v11 = edi12;
        v13 = esi14;
        v15 = ebx16;
        ecx17 = v18;
        ebx19 = v20;
        eax21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx17) - reinterpret_cast<unsigned char>(v5));
        edx22 = ebx19 - (reinterpret_cast<unsigned char>(a1) + reinterpret_cast<uint1_t>(ebx19 < reinterpret_cast<unsigned char>(a1) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(ecx17) < reinterpret_cast<unsigned char>(v5))));
        if (reinterpret_cast<signed char>(a1) < reinterpret_cast<signed char>(0)) {
            while (reinterpret_cast<int32_t>(edx22) < reinterpret_cast<int32_t>(ebx19) || reinterpret_cast<int32_t>(edx22) <= reinterpret_cast<int32_t>(ebx19) && reinterpret_cast<unsigned char>(eax21) < reinterpret_cast<unsigned char>(ecx17)) {
                addr_6e9419f9_7:
                eax21 = fun_6e955970(ecx17, v15, v13, v11, v23, v24, v25, v5, a1);
            }
        } else {
            if (reinterpret_cast<int32_t>(edx22) > reinterpret_cast<int32_t>(ebx19)) 
                goto addr_6e9419f9_7;
            if (reinterpret_cast<int32_t>(edx22) < reinterpret_cast<int32_t>(ebx19)) 
                goto addr_6e941a12_10;
            if (reinterpret_cast<unsigned char>(eax21) > reinterpret_cast<unsigned char>(ecx17)) 
                goto addr_6e9419f9_7;
        }
        addr_6e941a12_10:
        goto v26;
    } else {
        return;
    }
}

void __mulvsi3(void** ecx, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** ebx8;
    void** edx9;
    void** ebx10;
    void** v11;
    void** ecx12;
    void** v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** eax21;
    void** eax22;
    uint1_t cf23;
    void** tmp32_24;
    void** eax25;
    uint1_t cf26;
    void** tmp32_27;
    int32_t v28;

    if (reinterpret_cast<int32_t>(reinterpret_cast<unsigned char>(a3) * reinterpret_cast<unsigned char>(a2)) >> 31 == __intrinsic()) {
        return;
    }
    fun_6e955970(ecx, v6, v7, ebx8, __return_address(), a2, a3, a4, a5);
    edx9 = a2;
    ebx10 = ebx8;
    v11 = reinterpret_cast<void**>(__return_address());
    ecx12 = edx9;
    v13 = edx9;
    v14 = v15;
    v16 = reinterpret_cast<void**>(__return_address());
    v17 = v15;
    if (!reinterpret_cast<int1_t>(ebx8 == reinterpret_cast<signed char>(v15) >> 31)) {
        if (!reinterpret_cast<int1_t>(edx9 == reinterpret_cast<signed char>(v11) >> 31)) {
            if (reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(0)) {
                while (1) {
                    if (reinterpret_cast<signed char>(edx9) < reinterpret_cast<signed char>(0)) {
                        ++ebx10;
                        if (!ebx10 && (++ecx12, !ecx12)) {
                            ebx10 = v14;
                            edx9 = __intrinsic();
                            ecx12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - reinterpret_cast<unsigned char>(ebx10) - reinterpret_cast<unsigned char>(v16));
                            if (reinterpret_cast<signed char>(ecx12) >= reinterpret_cast<signed char>(0)) 
                                break;
                        }
                    } else {
                        ++ebx10;
                        if (ebx10) 
                            goto addr_6e941b3a_11;
                        if (edx9) 
                            goto addr_6e941b3a_11;
                        ebx10 = v16;
                        edx9 = __intrinsic();
                        ecx12 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - reinterpret_cast<unsigned char>(ebx10));
                        if (reinterpret_cast<signed char>(ecx12) < reinterpret_cast<signed char>(0)) 
                            break;
                    }
                    addr_6e941b3a_11:
                    fun_6e955970(ecx12, v18, v19, v20, v14, v16, v17, v11, v13);
                }
            } else {
                if (reinterpret_cast<signed char>(edx9) < reinterpret_cast<signed char>(0)) {
                    if (ebx8) 
                        goto addr_6e941b3a_11;
                    ++ecx12;
                    if (ecx12) 
                        goto addr_6e941b3a_11;
                    edx9 = __intrinsic();
                    eax21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - reinterpret_cast<unsigned char>(v14));
                    ecx12 = eax21;
                    if (reinterpret_cast<signed char>(eax21) >= reinterpret_cast<signed char>(0)) 
                        goto addr_6e941b86_18;
                } else {
                    if (ebx8) 
                        goto addr_6e941b3a_11;
                    if (edx9) 
                        goto addr_6e941b3a_11;
                    edx9 = __intrinsic();
                    if (reinterpret_cast<signed char>(edx9) >= reinterpret_cast<signed char>(0)) 
                        goto addr_6e941a85_22; else 
                        goto addr_6e941b3a_11;
                }
            }
        } else {
            v14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v14) * reinterpret_cast<unsigned char>(v11));
            eax22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebx8) * reinterpret_cast<unsigned char>(v11));
            edx9 = __intrinsic();
            if (reinterpret_cast<signed char>(ebx8) < reinterpret_cast<signed char>(0)) {
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - reinterpret_cast<unsigned char>(v11));
            }
            if (reinterpret_cast<signed char>(v11) < reinterpret_cast<signed char>(0)) {
                cf23 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax22) < reinterpret_cast<unsigned char>(v15));
                eax22 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax22) - reinterpret_cast<unsigned char>(v15));
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - (reinterpret_cast<unsigned char>(ebx8) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx9) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ebx8) + cf23))));
            }
            tmp32_24 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(__intrinsic()) + reinterpret_cast<unsigned char>(eax22));
            ecx12 = tmp32_24;
            ebx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_24) < reinterpret_cast<unsigned char>(__intrinsic())));
            if (!reinterpret_cast<int1_t>(reinterpret_cast<signed char>(ecx12) >> 31 == ebx10)) 
                goto addr_6e941b3a_11;
            goto addr_6e941a85_22;
        }
    } else {
        if (!reinterpret_cast<int1_t>(edx9 == reinterpret_cast<signed char>(__return_address()) >> 31)) {
            eax25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v17) * reinterpret_cast<unsigned char>(ecx12));
            edx9 = __intrinsic();
            if (reinterpret_cast<signed char>(ecx12) < reinterpret_cast<signed char>(0)) {
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - reinterpret_cast<unsigned char>(v17));
            }
            if (reinterpret_cast<signed char>(v17) < reinterpret_cast<signed char>(0)) {
                cf26 = reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(eax25) < reinterpret_cast<unsigned char>(v11));
                eax25 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax25) - reinterpret_cast<unsigned char>(v11));
                edx9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) - (reinterpret_cast<unsigned char>(v13) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(edx9) < reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(v13) + cf26))));
            }
            tmp32_27 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(__intrinsic()) + reinterpret_cast<unsigned char>(eax25));
            ecx12 = tmp32_27;
            ebx10 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx9) + reinterpret_cast<uint1_t>(reinterpret_cast<unsigned char>(tmp32_27) < reinterpret_cast<unsigned char>(__intrinsic())));
            if (!reinterpret_cast<int1_t>(reinterpret_cast<signed char>(ecx12) >> 31 == ebx10)) 
                goto addr_6e941b3a_11;
            goto addr_6e941a85_22;
        } else {
            goto addr_6e941a85_22;
        }
    }
    addr_6e941a85_22:
    goto v28;
    addr_6e941b86_18:
    goto addr_6e941b3a_11;
}

void __negvsi2(void** a1, void** a2, void** a3, void** a4) {
    uint32_t eax5;
    void** ecx6;
    void** v7;
    void** v8;
    void** v9;
    uint32_t edx10;
    int32_t v11;
    int32_t v12;
    void** ecx13;
    uint32_t ebx14;
    void** v15;
    void** v16;
    void** ebx17;
    void** v18;
    void** v19;
    void** v20;
    int32_t v21;
    int32_t v22;
    int32_t v23;

    eax5 = -reinterpret_cast<unsigned char>(a1);
    ecx6 = reinterpret_cast<void**>(eax5 >> 31);
    if (reinterpret_cast<signed char>(a1) >= reinterpret_cast<signed char>(0)) {
        *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<uint1_t>(!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(eax5) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(eax5 == 0)));
    }
    if (*reinterpret_cast<unsigned char*>(&ecx6)) {
        fun_6e955970(ecx6, v7, v8, v9, __return_address(), a1, a2, a3, a4);
        edx10 = -(v11 + reinterpret_cast<uint1_t>(!!v12));
        if (v11 < 0) {
            ecx13 = reinterpret_cast<void**>(edx10 >> 31);
        } else {
            ebx14 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx10) >> 31);
            ecx13 = reinterpret_cast<void**>(ebx14 - (edx10 + reinterpret_cast<uint1_t>(ebx14 < edx10 + reinterpret_cast<uint1_t>(ebx14 < reinterpret_cast<uint32_t>(-v12)))) >> 31);
        }
        if (*reinterpret_cast<signed char*>(&ecx13)) {
            fun_6e955970(ecx13, v15, v16, ebx17, v18, v19, v20, __return_address(), a1);
            if (v21) {
                __asm__("rep bsf eax, edx");
            }
            goto v22;
        } else {
            goto v23;
        }
    } else {
        return;
    }
}

int32_t __ffsdi2(int32_t a1, int32_t a2) {
    int32_t eax3;
    int32_t ecx4;

    eax3 = a1;
    if (!eax3) {
        eax3 = a2;
        if (!a2) {
            addr_6e941c67_3:
            return eax3;
        } else {
            ecx4 = 33;
        }
    } else {
        ecx4 = 1;
    }
    __asm__("rep bsf eax, eax");
    eax3 = eax3 + ecx4;
    goto addr_6e941c67_3;
}

void fun_6e941c69() {
}

uint32_t __clzsi2() {
    uint32_t eax1;

    __asm__("bsr eax, [esp+0x4]");
    return eax1 ^ 31;
}

void __ctzsi2() {
    __asm__("rep bsf eax, [esp+0x4]");
    return;
}

uint32_t __popcountsi2(uint32_t a1) {
    uint32_t ebx2;
    uint32_t eax3;
    int32_t ecx4;
    uint32_t edx5;

    ebx2 = a1;
    eax3 = 0;
    ecx4 = 0;
    do {
        edx5 = ebx2 >> *reinterpret_cast<signed char*>(&ecx4);
        ecx4 = ecx4 + 8;
        eax3 = eax3 + *reinterpret_cast<unsigned char*>(*reinterpret_cast<unsigned char*>(&edx5) + 0x6e957180);
    } while (ecx4 != 32);
    return eax3;
}

uint32_t __popcountdi2(uint32_t a1, uint32_t a2) {
    int32_t ecx3;
    uint32_t eax4;
    uint32_t ebx5;
    uint32_t edx6;
    uint32_t esi7;

    ecx3 = 0;
    eax4 = a1;
    ebx5 = 0;
    edx6 = a2;
    do {
        esi7 = eax4;
        __asm__("shrd esi, edi, cl");
        if (*reinterpret_cast<unsigned char*>(&ecx3) & 32) {
            esi7 = edx6 >> *reinterpret_cast<unsigned char*>(&ecx3);
        }
        ecx3 = ecx3 + 8;
        ebx5 = ebx5 + *reinterpret_cast<unsigned char*>((esi7 & 0xff) + 0x6e957180);
    } while (ecx3 != 64);
    return ebx5;
}

uint32_t __paritysi2(uint32_t a1) {
    uint32_t edx2;
    uint32_t eax3;
    uint32_t ecx4;

    edx2 = a1 >> 16 ^ a1;
    eax3 = edx2 >> 8 ^ edx2;
    ecx4 = (eax3 >> 4 ^ eax3) & 15;
    return reinterpret_cast<uint32_t>(0x6996 >> *reinterpret_cast<signed char*>(&ecx4)) & 1;
}

void fun_6e941e2f() {
    uint32_t eax1;
    int32_t edx2;

    while (1) {
        __asm__("fxch st0, st1");
        eax1 = eax1 >> 1;
        if (!eax1) 
            break;
        __asm__("fxch st0, st1");
        do {
            __asm__("fmul st0, st0");
            if (!(*reinterpret_cast<unsigned char*>(&eax1) & 1)) 
                break;
            eax1 = eax1 >> 1;
            __asm__("fmul st1, st0");
        } while (eax1);
        goto addr_6e941e44_7;
    }
    __asm__("fstp st1");
    addr_6e941e4a_9:
    if (edx2 < 0) {
        __asm__("fdivr dword [0x6e957284]");
        return;
    } else {
        return;
    }
    addr_6e941e44_7:
    __asm__("fstp st0");
    goto addr_6e941e4a_9;
}

void fun_6e941e7f() {
    uint32_t eax1;
    int32_t edx2;

    while (1) {
        __asm__("fxch st0, st1");
        eax1 = eax1 >> 1;
        if (!eax1) 
            break;
        __asm__("fxch st0, st1");
        do {
            __asm__("fmul st0, st0");
            if (!(*reinterpret_cast<unsigned char*>(&eax1) & 1)) 
                break;
            eax1 = eax1 >> 1;
            __asm__("fmul st1, st0");
        } while (eax1);
        goto addr_6e941e94_7;
    }
    __asm__("fstp st1");
    addr_6e941e9a_9:
    if (edx2 < 0) {
        __asm__("fdivr dword [0x6e957288]");
        return;
    } else {
        return;
    }
    addr_6e941e94_7:
    __asm__("fstp st0");
    goto addr_6e941e9a_9;
}

int32_t __muldc3(int32_t a1) {
    int32_t eax2;
    uint1_t pf3;
    unsigned char bl4;
    int16_t ax5;
    int16_t fpu_status_word6;
    unsigned char cl7;
    int1_t pf8;
    int16_t ax9;
    int16_t fpu_status_word10;
    int16_t ax11;
    int16_t fpu_status_word12;
    int16_t ax13;
    int16_t fpu_status_word14;
    int16_t ax15;
    int16_t fpu_status_word16;
    int16_t ax17;
    int16_t fpu_status_word18;
    int1_t pf19;
    int16_t ax20;
    int16_t fpu_status_word21;
    int16_t ax22;
    int16_t fpu_status_word23;
    int16_t ax24;
    int16_t fpu_status_word25;
    int16_t ax26;
    int16_t fpu_status_word27;
    int16_t ax28;
    int16_t fpu_status_word29;
    int16_t ax30;
    int16_t fpu_status_word31;

    __asm__("fld qword [esp+0x4c]");
    __asm__("fld qword [esp+0x54]");
    __asm__("fld qword [esp+0x5c]");
    __asm__("fld qword [esp+0x64]");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fstp qword [esp+0x20]");
    __asm__("fld st2");
    __asm__("fmul st0, st1");
    __asm__("fstp qword [esp+0x28]");
    __asm__("fld st3");
    __asm__("fmul st0, st1");
    __asm__("fstp qword [esp+0x30]");
    __asm__("fld st2");
    __asm__("fmul st0, st2");
    __asm__("fstp qword [esp+0x38]");
    __asm__("fld qword [esp+0x20]");
    __asm__("fld st0");
    __asm__("fstp qword [esp]");
    __asm__("fld qword [esp+0x28]");
    __asm__("fsub st1, st0");
    __asm__("fld qword [esp+0x30]");
    __asm__("fst qword [esp+0x8]");
    __asm__("fld qword [esp+0x38]");
    __asm__("fst qword [esp+0x10]");
    __asm__("faddp st1, st0");
    __asm__("fxch st0, st2");
    __asm__("fucomi st0, st0");
    if (__intrinsic()) {
        __asm__("fxch st0, st2");
        __asm__("fucomi st0, st0");
        if (!__intrinsic()) {
            __asm__("fstp st6");
            __asm__("fstp st0");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fld st6");
            __asm__("fsub st0, st7");
            __asm__("fucomip st0, st0");
            if (!__intrinsic()) {
                addr_6e942521_5:
                __asm__("fld st5");
                __asm__("fsub st0, st6");
                __asm__("fucomip st0, st0");
                if (!__intrinsic()) {
                    addr_6e942530_6:
                    __asm__("fxch st0, st4");
                    eax2 = 0;
                    pf3 = __intrinsic();
                    goto addr_6e942534_7;
                } else {
                    __asm__("fxch st0, st5");
                    __asm__("fucomi st0, st0");
                    if (__intrinsic()) 
                        goto addr_6e94252e_10; else 
                        goto addr_6e9426fc_11;
                }
            } else {
                __asm__("fxch st0, st6");
                __asm__("fucomi st0, st0");
                if (__intrinsic()) 
                    goto addr_6e94251f_14; else 
                    goto addr_6e9427bd_15;
            }
        }
    } else {
        __asm__("fstp st5");
        __asm__("fstp st0");
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
    }
    addr_6e942500_17:
    __asm__("fstp qword [edx]");
    __asm__("fstp qword [edx+0x8]");
    return a1;
    addr_6e942534_7:
    __asm__("fucomi st0, st0");
    __asm__("fld st0");
    bl4 = pf3;
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (pf3) {
        pf3 = __intrinsic();
        if (bl4) {
            __asm__("fxch st0, st3");
        } else {
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
            __asm__("fxam ");
            ax5 = fpu_status_word6;
            __asm__("fstp st0");
            __asm__("fld1 ");
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax5) + 1) & 2) {
                __asm__("fstp st0");
                __asm__("fld1 ");
                __asm__("fchs ");
            }
            __asm__("fld st1");
            __asm__("fsub st0, st2");
            __asm__("fucomip st0, st0");
            if (__intrinsic()) 
                goto addr_6e942776_23; else 
                goto addr_6e9426e9_24;
        }
    } else {
        __asm__("fxch st0, st3");
    }
    __asm__("fucomi st0, st0");
    __asm__("fld st0");
    cl7 = pf3;
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (!pf3 || cl7) {
        pf8 = __intrinsic();
        if (*reinterpret_cast<signed char*>(&eax2)) {
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
        } else {
            __asm__("fld qword [esp]");
            __asm__("fsub st0, st0");
            __asm__("fucomip st0, st0");
            if (pf8) {
                __asm__("fld qword [esp]");
                __asm__("fucomip st0, st0");
                if (!pf8) {
                    __asm__("fstp st4");
                    __asm__("fstp st0");
                    __asm__("fstp st0");
                    __asm__("fxch st0, st1");
                    __asm__("fxch st0, st3");
                    goto addr_6e9425d1_32;
                } else {
                    goto addr_6e942571_34;
                }
            } else {
                addr_6e942571_34:
                __asm__("fld st1");
                __asm__("fsub st0, st2");
                __asm__("fucomip st0, st0");
                if (pf8) {
                    __asm__("fxch st0, st1");
                    __asm__("fucomip st0, st0");
                    if (!pf8) {
                        __asm__("fstp st3");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        __asm__("fxch st0, st3");
                        goto addr_6e9425d1_32;
                    } else {
                        goto addr_6e94257f_38;
                    }
                } else {
                    __asm__("fstp st1");
                    goto addr_6e94257f_38;
                }
            }
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fxam ");
        ax9 = fpu_status_word10;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax9) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
            goto addr_6e942669_42;
        }
    }
    addr_6e942621_43:
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fsubp st1, st0");
    __asm__("fld dword [0x6e957294]");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st5");
    __asm__("fmulp st2, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st2, st0");
    __asm__("faddp st1, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e942500_17;
    addr_6e9425d1_32:
    __asm__("fucomi st0, st0");
    if (pf8) {
        __asm__("fxam ");
        ax11 = fpu_status_word12;
        __asm__("fstp st0");
        pf8 = __intrinsic();
        __asm__("fldz ");
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax11) + 1) & 2)) {
            __asm__("fxch st0, st2");
        } else {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
            __asm__("fxch st0, st2");
        }
    } else {
        __asm__("fxch st0, st2");
    }
    __asm__("fucomi st0, st0");
    if (pf8 && (ax13 = fpu_status_word14, !!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax13) + 1) & 2))) {
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fchs ");
    }
    if (!bl4) {
        addr_6e9425f7_51:
        if (cl7) {
            __asm__("fxch st0, st3");
            __asm__("fxam ");
            ax15 = fpu_status_word16;
            __asm__("fstp st0");
            __asm__("fldz ");
            if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax15) + 1) & 2)) {
                __asm__("fxch st0, st2");
                __asm__("fxch st0, st3");
                __asm__("fxch st0, st2");
                goto addr_6e942621_43;
            } else {
                __asm__("fstp st0");
                __asm__("fldz ");
                __asm__("fchs ");
                __asm__("fxch st0, st2");
                __asm__("fxch st0, st3");
                __asm__("fxch st0, st2");
                goto addr_6e942621_43;
            }
        } else {
            __asm__("fxch st0, st2");
            __asm__("fxch st0, st3");
            goto addr_6e942621_43;
        }
    } else {
        __asm__("fxch st0, st1");
        __asm__("fxam ");
        ax17 = fpu_status_word18;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax17) + 1) & 2) 
            goto addr_6e94282e_58;
    }
    __asm__("fxch st0, st1");
    goto addr_6e9425f7_51;
    addr_6e94282e_58:
    __asm__("fstp st0");
    __asm__("fldz ");
    __asm__("fchs ");
    __asm__("fxch st0, st1");
    goto addr_6e9425f7_51;
    addr_6e94257f_38:
    __asm__("fld qword [esp+0x8]");
    __asm__("fld st0");
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (pf8) {
        __asm__("fucomip st0, st0");
        if (!pf8) {
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st3");
            goto addr_6e9425d1_32;
        }
    } else {
        __asm__("fstp st0");
    }
    __asm__("fld qword [esp+0x10]");
    __asm__("fld st0");
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (!pf8) {
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st3");
        __asm__("fstp st0");
        __asm__("fstp st2");
        goto addr_6e942500_17;
    } else {
        __asm__("fucomip st0, st0");
        if (pf8) {
            __asm__("fstp st0");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st2");
            goto addr_6e942500_17;
        } else {
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st3");
            goto addr_6e9425d1_32;
        }
    }
    addr_6e942669_42:
    __asm__("fld1 ");
    __asm__("fxch st0, st2");
    addr_6e94266d_69:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    pf19 = __intrinsic();
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fxch st0, st3");
    __asm__("fucomi st0, st0");
    if (pf19) {
        __asm__("fxam ");
        ax20 = fpu_status_word21;
        __asm__("fstp st0");
        pf19 = __intrinsic();
        __asm__("fldz ");
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax20) + 1) & 2)) {
            __asm__("fxch st0, st2");
        } else {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
            __asm__("fxch st0, st2");
        }
    } else {
        __asm__("fxch st0, st2");
    }
    __asm__("fucomi st0, st0");
    if (!pf19) {
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st3");
        goto addr_6e942621_43;
    } else {
        __asm__("fxam ");
        ax22 = fpu_status_word23;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax22) + 1) & 2)) {
            __asm__("fxch st0, st2");
            __asm__("fxch st0, st3");
            goto addr_6e942621_43;
        } else {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
            __asm__("fxch st0, st2");
            __asm__("fxch st0, st3");
            goto addr_6e942621_43;
        }
    }
    addr_6e942776_23:
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) {
        __asm__("fxch st0, st1");
        goto addr_6e942669_42;
    } else {
        __asm__("fxch st0, st1");
    }
    addr_6e9426e9_24:
    __asm__("fldz ");
    __asm__("fxch st0, st2");
    goto addr_6e94266d_69;
    addr_6e94252e_10:
    __asm__("fxch st0, st5");
    goto addr_6e942530_6;
    addr_6e9426fc_11:
    __asm__("fxch st0, st6");
    __asm__("fxam ");
    ax24 = fpu_status_word25;
    __asm__("fstp st0");
    __asm__("fldz ");
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax24) + 1) & 2) {
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fchs ");
    }
    addr_6e942717_82:
    __asm__("fld1 ");
    __asm__("fstp qword [esp+0x18]");
    addr_6e94271d_83:
    __asm__("fxch st0, st6");
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fld qword [esp+0x18]");
    pf3 = __intrinsic();
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fxch st0, st4");
    __asm__("fucomi st0, st0");
    if (pf3) {
        __asm__("fxam ");
        ax26 = fpu_status_word27;
        __asm__("fstp st0");
        pf3 = __intrinsic();
        __asm__("fldz ");
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax26) + 1) & 2)) {
            __asm__("fxch st0, st3");
        } else {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
            __asm__("fxch st0, st3");
        }
    } else {
        __asm__("fxch st0, st3");
    }
    __asm__("fucomi st0, st0");
    if (pf3 && (ax28 = fpu_status_word29, pf3 = __intrinsic(), !!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax28) + 1) & 2))) {
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fchs ");
    }
    __asm__("fxch st0, st3");
    __asm__("fxch st0, st4");
    __asm__("fxch st0, st5");
    __asm__("fxch st0, st4");
    eax2 = 1;
    goto addr_6e942534_7;
    addr_6e94251f_14:
    __asm__("fxch st0, st6");
    goto addr_6e942521_5;
    addr_6e9427bd_15:
    __asm__("fxam ");
    ax30 = fpu_status_word31;
    __asm__("fstp st0");
    __asm__("fld1 ");
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax30) + 1) & 2) {
        __asm__("fstp st0");
        __asm__("fld1 ");
        __asm__("fchs ");
    }
    __asm__("fld st5");
    __asm__("fsub st0, st6");
    __asm__("fucomip st0, st0");
    if (__intrinsic()) {
        __asm__("fxch st0, st5");
        __asm__("fucomi st0, st0");
        if (!__intrinsic()) {
            __asm__("fxch st0, st6");
            __asm__("fxch st0, st5");
            goto addr_6e942717_82;
        } else {
            __asm__("fxch st0, st5");
            goto addr_6e9427d8_96;
        }
    } else {
        addr_6e9427d8_96:
        __asm__("fldz ");
        __asm__("fstp qword [esp+0x18]");
        __asm__("fxch st0, st5");
        __asm__("fxch st0, st6");
        __asm__("fxch st0, st5");
        goto addr_6e94271d_83;
    }
}

int32_t __mulxc3(int32_t a1) {
    int16_t ax2;
    int16_t fpu_status_word3;
    int32_t eax4;
    uint1_t pf5;
    int16_t ax6;
    int16_t fpu_status_word7;
    unsigned char bl8;
    int16_t ax9;
    int16_t fpu_status_word10;
    unsigned char cl11;
    int1_t pf12;
    int16_t ax13;
    int16_t fpu_status_word14;
    int16_t ax15;
    int16_t fpu_status_word16;
    int16_t ax17;
    int16_t fpu_status_word18;
    int16_t ax19;
    int16_t fpu_status_word20;
    int16_t ax21;
    int16_t fpu_status_word22;
    int1_t pf23;
    int16_t ax24;
    int16_t fpu_status_word25;
    int16_t ax26;
    int16_t fpu_status_word27;
    int16_t ax28;
    int16_t fpu_status_word29;
    int16_t ax30;
    int16_t fpu_status_word31;

    __asm__("fld tword [esp+0x40]");
    __asm__("fld tword [esp+0x1c]");
    __asm__("fld tword [esp+0x34]");
    __asm__("fmulp st1, st0");
    __asm__("fld st0");
    __asm__("fstp tword [esp]");
    __asm__("fld tword [esp+0x28]");
    __asm__("fmul st0, st2");
    __asm__("fld tword [esp+0x1c]");
    __asm__("fmul st0, st3");
    __asm__("fld tword [esp+0x34]");
    __asm__("fld tword [esp+0x28]");
    __asm__("fmulp st1, st0");
    __asm__("fxch st0, st3");
    __asm__("fsub st0, st2");
    __asm__("fld st1");
    __asm__("fadd st0, st4");
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st0");
    if (__intrinsic()) {
        __asm__("fxch st0, st1");
        __asm__("fucomi st0, st0");
        if (!__intrinsic()) {
            __asm__("fstp st5");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fld tword [esp+0x1c]");
            __asm__("fld st0");
            __asm__("fsub st0, st0");
            __asm__("fucomip st0, st0");
            if (__intrinsic()) {
                __asm__("fucomi st0, st0");
                if (__intrinsic()) {
                    __asm__("fstp st0");
                    goto addr_6e942938_7;
                } else {
                    __asm__("fxam ");
                    ax2 = fpu_status_word3;
                    __asm__("fstp st0");
                    __asm__("fld1 ");
                    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax2) + 1) & 2) {
                        __asm__("fstp st0");
                        __asm__("fld1 ");
                        __asm__("fchs ");
                    }
                    __asm__("fstp tword [esp+0x1c]");
                    __asm__("fld tword [esp+0x28]");
                    __asm__("fld st0");
                    __asm__("fsub st0, st0");
                    __asm__("fucomip st0, st0");
                    if (__intrinsic()) 
                        goto addr_6e942c08_11; else 
                        goto addr_6e942be3_12;
                }
            } else {
                __asm__("fstp st0");
                goto addr_6e942938_7;
            }
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
    }
    addr_6e942910_15:
    __asm__("fstp tword [edx]");
    __asm__("fstp tword [edx+0xc]");
    return a1;
    addr_6e942938_7:
    __asm__("fld tword [esp+0x28]");
    __asm__("fld st0");
    __asm__("fsub st0, st0");
    __asm__("fucomip st0, st0");
    if (!__intrinsic()) {
        __asm__("fstp st0");
        goto addr_6e94294a_17;
    }
    __asm__("fucomip st0, st0");
    if (__intrinsic()) {
        addr_6e94294a_17:
        eax4 = 0;
        pf5 = __intrinsic();
    } else {
        __asm__("fld tword [esp+0x1c]");
        __asm__("fxam ");
        ax6 = fpu_status_word7;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax6) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x1c]");
        goto addr_6e942b45_22;
    }
    addr_6e94294c_23:
    __asm__("fld tword [esp+0x34]");
    __asm__("fucomi st0, st0");
    __asm__("fsub st0, st0");
    bl8 = pf5;
    __asm__("fucomip st0, st0");
    if (pf5) {
        pf5 = __intrinsic();
        if (bl8) {
            __asm__("fxch st0, st5");
        } else {
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fld tword [esp+0x34]");
            __asm__("fxam ");
            ax9 = fpu_status_word10;
            __asm__("fstp st0");
            __asm__("fld1 ");
            if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax9) + 1) & 2) {
                __asm__("fstp st0");
                __asm__("fld1 ");
                __asm__("fchs ");
            }
            __asm__("fstp tword [esp+0x34]");
            __asm__("fld st0");
            __asm__("fsub st0, st1");
            __asm__("fucomip st0, st0");
            if (__intrinsic()) 
                goto addr_6e942b7e_29; else 
                goto addr_6e942b19_30;
        }
    } else {
        __asm__("fxch st0, st5");
    }
    __asm__("fucomi st0, st0");
    __asm__("fld st0");
    cl11 = pf5;
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (!pf5 || cl11) {
        pf12 = __intrinsic();
        if (*reinterpret_cast<signed char*>(&eax4)) {
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st1");
            goto addr_6e942a24_35;
        }
        __asm__("fld tword [esp]");
        __asm__("fld st0");
        __asm__("fsub st0, st1");
        __asm__("fucomip st0, st0");
        if (!pf12) 
            goto addr_6e94298d_37;
    } else {
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st1");
        __asm__("fld tword [esp+0x34]");
        __asm__("fxam ");
        ax13 = fpu_status_word14;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax13) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x34]");
        goto addr_6e942a82_41;
    }
    __asm__("fucomip st0, st0");
    if (!pf12) {
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st1");
    } else {
        goto addr_6e94298f_45;
    }
    addr_6e9429e9_46:
    __asm__("fld tword [esp+0x1c]");
    __asm__("fucomi st0, st0");
    if (pf12) {
        __asm__("fxam ");
        ax15 = fpu_status_word16;
        __asm__("fstp st0");
        pf12 = __intrinsic();
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax15) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x1c]");
    } else {
        __asm__("fstp st0");
    }
    __asm__("fld tword [esp+0x28]");
    __asm__("fucomi st0, st0");
    if (pf12) {
        __asm__("fxam ");
        ax17 = fpu_status_word18;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax17) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x28]");
    } else {
        __asm__("fstp st0");
    }
    if (bl8) {
        __asm__("fld tword [esp+0x34]");
        __asm__("fxam ");
        ax19 = fpu_status_word20;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax19) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x34]");
    }
    if (!cl11) {
        addr_6e942a24_35:
        __asm__("fld tword [esp+0x1c]");
        __asm__("fld tword [esp+0x34]");
        __asm__("fmul st1, st0");
        __asm__("fld tword [esp+0x28]");
        __asm__("fmul st0, st3");
        __asm__("fsubp st2, st0");
        __asm__("fld dword [0x6e957298]");
        __asm__("fmul st2, st0");
        __asm__("fld tword [esp+0x1c]");
        __asm__("fmulp st4, st0");
        __asm__("fld tword [esp+0x28]");
        __asm__("fmulp st2, st0");
        __asm__("fxch st0, st3");
        __asm__("faddp st1, st0");
        __asm__("fmulp st2, st0");
        goto addr_6e942910_15;
    } else {
        __asm__("fxam ");
        ax21 = fpu_status_word22;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax21) + 1) & 2)) 
            goto addr_6e942a24_35;
    }
    __asm__("fstp st0");
    __asm__("fldz ");
    __asm__("fchs ");
    goto addr_6e942a24_35;
    addr_6e94298f_45:
    __asm__("fld st3");
    __asm__("fsub st0, st4");
    __asm__("fucomip st0, st0");
    if (pf12) {
        __asm__("fxch st0, st3");
        __asm__("fucomip st0, st0");
        if (!pf12) {
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st1");
            __asm__("fstp st1");
            goto addr_6e9429e9_46;
        } else {
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st2");
        }
    } else {
        __asm__("fstp st3");
        __asm__("fxch st0, st1");
        __asm__("fxch st0, st2");
    }
    __asm__("fld st2");
    __asm__("fsub st0, st3");
    __asm__("fucomip st0, st0");
    if (pf12) {
        __asm__("fxch st0, st2");
        __asm__("fucomip st0, st0");
        if (!pf12) {
            __asm__("fstp st0");
            __asm__("fstp st1");
            __asm__("fstp st1");
            goto addr_6e9429e9_46;
        } else {
            __asm__("fxch st0, st1");
        }
    } else {
        __asm__("fstp st2");
        __asm__("fxch st0, st1");
    }
    __asm__("fld st2");
    __asm__("fsub st0, st3");
    __asm__("fucomip st0, st0");
    if (!pf12) {
        __asm__("fstp st0");
        __asm__("fstp st1");
        goto addr_6e942910_15;
    } else {
        __asm__("fxch st0, st2");
        __asm__("fucomip st0, st0");
        if (pf12) {
            __asm__("fstp st1");
            goto addr_6e942910_15;
        } else {
            __asm__("fstp st0");
            __asm__("fstp st1");
            goto addr_6e9429e9_46;
        }
    }
    addr_6e94298d_37:
    __asm__("fstp st0");
    goto addr_6e94298f_45;
    addr_6e942b7e_29:
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) {
        addr_6e942a82_41:
        __asm__("fld1 ");
        __asm__("fxch st0, st1");
    } else {
        goto addr_6e942b19_30;
    }
    addr_6e942a86_79:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fabs ");
    pf23 = __intrinsic();
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld tword [esp+0x1c]");
    __asm__("fucomi st0, st0");
    if (pf23) {
        __asm__("fxam ");
        ax24 = fpu_status_word25;
        __asm__("fstp st0");
        pf23 = __intrinsic();
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax24) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x1c]");
    } else {
        __asm__("fstp st0");
    }
    __asm__("fld tword [esp+0x28]");
    __asm__("fucomi st0, st0");
    if (!pf23) {
        __asm__("fstp st0");
        goto addr_6e942a24_35;
    } else {
        __asm__("fxam ");
        ax26 = fpu_status_word27;
        __asm__("fstp st0");
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax26) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x28]");
        goto addr_6e942a24_35;
    }
    addr_6e942b19_30:
    __asm__("fldz ");
    __asm__("fxch st0, st1");
    goto addr_6e942a86_79;
    addr_6e942c08_11:
    __asm__("fucomip st0, st0");
    if (!__intrinsic()) {
        addr_6e942b45_22:
        __asm__("fld1 ");
    } else {
        goto addr_6e942be5_90;
    }
    addr_6e942b47_91:
    __asm__("fld tword [esp+0x28]");
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fabs ");
    pf5 = __intrinsic();
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fstp tword [esp+0x28]");
    __asm__("fld tword [esp+0x34]");
    __asm__("fucomi st0, st0");
    if (pf5) {
        __asm__("fxam ");
        ax28 = fpu_status_word29;
        __asm__("fstp st0");
        pf5 = __intrinsic();
        __asm__("fldz ");
        if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax28) + 1) & 2) {
            __asm__("fstp st0");
            __asm__("fldz ");
            __asm__("fchs ");
        }
        __asm__("fstp tword [esp+0x34]");
        __asm__("fxch st0, st5");
    } else {
        __asm__("fstp st0");
        __asm__("fxch st0, st5");
    }
    __asm__("fucomi st0, st0");
    if (pf5 && (ax30 = fpu_status_word31, pf5 = __intrinsic(), !!(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax30) + 1) & 2))) {
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fchs ");
    }
    __asm__("fxch st0, st5");
    eax4 = 1;
    goto addr_6e94294c_23;
    addr_6e942be5_90:
    __asm__("fldz ");
    goto addr_6e942b47_91;
    addr_6e942be3_12:
    __asm__("fstp st0");
    goto addr_6e942be5_90;
}

void __multc3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20) {
    void*** esp21;
    void** v22;
    void** ebx23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** edi48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** ebp70;
    void** v71;
    void** v72;
    void** ebp73;
    void** edi74;
    void** esi75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    uint32_t eax85;
    void** edx86;
    void** v87;
    uint32_t eax88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void** v98;
    uint32_t eax99;
    void*** esp100;
    void** edx101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    uint32_t eax109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void** v119;
    uint32_t eax120;
    void*** esp121;
    void** edx122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    uint32_t eax130;
    void** v131;
    void** v132;
    void** v133;
    void** v134;
    void*** esp135;
    void** ecx136;
    void** edx137;
    void** v138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    uint32_t eax150;
    void** v151;
    void** v152;
    void** v153;
    void** v154;
    void** v155;
    uint32_t eax156;
    void** v157;
    void** v158;
    void** v159;
    uint32_t eax160;
    unsigned char v161;
    uint32_t eax162;
    void*** esp163;
    void** v164;
    void** v165;
    uint32_t eax166;
    unsigned char v167;
    void** v168;
    void** v169;
    void** v170;
    uint32_t eax171;
    void*** esp172;
    void** edx173;
    void** v174;
    void** v175;
    void** v176;
    void** v177;
    void** v178;
    void** v179;
    void** v180;
    void** v181;
    void** v182;
    void** v183;
    uint32_t eax184;
    void*** esp185;
    void** v186;
    void** v187;
    void** v188;
    uint32_t eax189;
    void** v190;
    void** v191;
    void** v192;
    void** v193;
    void** v194;
    uint32_t eax195;
    void** v196;
    uint32_t eax197;
    void** v198;
    void** v199;
    void** v200;
    void** v201;
    void** v202;
    void** v203;
    void** v204;
    uint32_t eax205;
    void** v206;
    void** v207;
    void** v208;
    void** v209;
    uint32_t eax210;
    uint32_t eax211;
    uint32_t eax212;
    uint32_t eax213;
    void*** esp214;
    void** edx215;
    void** v216;
    void** v217;
    void** v218;
    uint32_t eax219;
    void** v220;
    void** v221;
    void** v222;
    void** v223;
    int32_t v224;
    void*** esp225;
    void** ecx226;
    void** edx227;
    uint32_t eax228;
    uint32_t eax229;
    void*** esp230;
    void** ecx231;
    void** v232;
    void*** esp233;
    void** eax234;
    void** v235;
    void** v236;
    void** v237;
    void** v238;
    void** v239;
    void** v240;
    void** v241;
    void** v242;
    void** v243;
    void** v244;
    void** v245;
    void** v246;
    void** v247;
    void** v248;
    void** v249;
    void** v250;
    void** v251;
    void** v252;
    void** v253;
    void** v254;
    uint32_t eax255;
    void*** esp256;
    void** edx257;
    uint32_t eax258;
    void** v259;
    void** v260;
    void** v261;
    void** v262;
    void** v263;
    void** v264;
    void** v265;
    void** v266;
    uint32_t eax267;
    void*** esp268;
    void** edx269;
    void** v270;
    void** v271;
    void** v272;
    void** v273;
    uint32_t eax274;
    void** v275;

    esp21 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x12c);
    v22 = a19;
    ebx23 = reinterpret_cast<void**>(esp21 + 0x110);
    __multf3(ebx23, v24, v25, v26, a5, a6, a7, a8, a13, a14, a15, a16, v27, v28, v29, a9, a12, a8, a13, a16, a17, a20, a10, a11, a14, a15, a18, v22, v30, v31, v32, v33);
    v34 = v35;
    v36 = v37;
    __multf3(ebx23, a5, a6, a7, a13, a15, a18, a16, a11, v38, v39, a14, a9, a12, a8, a13, a16, a17, a20, a10, a11, a14, a15, a18, v22, v40, v41, v42, v43, v34, v36, v44);
    v45 = v46;
    v47 = edi48;
    __multf3(ebx23, a13, a15, a18, a5, a6, a7, a11, a18, v34, v36, v22, a13, a16, a17, a20, a10, a11, a14, a15, a18, v22, v49, v50, v51, v52, v34, v36, v53, v54, v55, v45);
    __multf3(ebx23, a5, a6, a7, a14, v56, v34, a15, v22, v36, v57, v58, a20, a10, a11, a14, a15, a18, v22, v59, v60, v61, v62, v34, v36, v63, v64, v65, v45, v47, v66, v67);
    __subtf3(ebx23, a14, v56, v34, v68, v69, ebp70, edi48, a1, __return_address(), v71, v72);
    ebp73 = a1;
    edi74 = a2;
    esi75 = a3;
    v76 = a4;
    __addtf3(ebx23, a14, v56, v34, v77, v78, v79, v80, a1, a2, a3, a4, a14, a15, a18, v22, v81, v82, v83, v84);
    eax85 = __netf2(ebp73, edi74, esi75, v76, ebp73, edi74, esi75, v76, a1, a2, a3, a4);
    edx86 = v87;
    if (!eax85) 
        goto addr_6e94309b_2;
    eax88 = __netf2(a1, a2, a3, a4, a1, a2, a3, a4, a1, a2, a3, a4);
    edx86 = v89;
    if (!eax88) 
        goto addr_6e94309b_2;
    __subtf3(ebx23, a2, a3, a4, v90, v91, v92, v93, v94, v91, v92, v95);
    v96 = a2;
    v97 = a4;
    v98 = a3;
    eax99 = __netf2(a1, v96, v98, v97, a1, a2, a3, a4, v94, v91, v92, v95);
    esp100 = esp21 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 4 - 4 + 4 - 4 + 4 - 4 + 4 - 4 + 4 - 4 + 4;
    edx101 = v102;
    if (!eax99 || (v98 = v103, v96 = v104, v97 = v105, eax109 = __netf2(v106, v96, v98, v97, v107, v104, v103, v108, v94, v91, v92, v95), esp100 = esp100 - 4 + 4, edx101 = v110, !!eax109)) {
        v111 = edx101;
        v112 = v22;
        v113 = v114;
        v115 = v116;
        v117 = v118;
        __subtf3(ebx23, v96, v98, v97, v22, v114, v116, v119, v112, v113, v115, v117);
        eax120 = __netf2(a1, a2, a3, a4, a1, a2, a3, a4, v112, v113, v115, v117);
        esp121 = esp100 - 4 + 4 - 4 + 4;
        edx122 = v111;
        if (!eax120 || (v123 = v124, v125 = v126, v127 = v128, eax130 = __netf2(v22, v125, v123, v127, v22, v126, v124, v129, v112, v113, v115, v117), esp121 = esp121 - 4 + 4, edx122 = v111, !!eax130)) {
            *reinterpret_cast<signed char*>(&v111) = 0;
        } else {
            fun_6e947820(ebx23, v125, v123, v127, 0, 0, 0, 0, v131, v132, v133, v134);
            esp135 = esp121 - 4 + 4;
            ecx136 = reinterpret_cast<void**>(0x3fff0000);
            edx137 = v111;
            v138 = a1;
            v139 = a2;
            v140 = a3;
            v141 = a4;
            goto addr_6e9433a2_8;
        }
    } else {
        fun_6e947820(ebx23, v96, v98, v97, 0, 0, 0, 0x3fff0000, v142, v143, v144, v145);
        v138 = a1;
        v139 = a2;
        v140 = a3;
        v141 = a4;
        __subtf3(ebx23, v96, v98, v97, v22, v146, v147, v148, v22, v146, v147, v149);
        v125 = a2;
        v127 = a4;
        v123 = a3;
        eax150 = __netf2(a1, v125, v123, v127, a1, a2, a3, a4, v22, v146, v147, v149);
        esp135 = esp100 - 4 + 4 - 4 + 4 - 4 + 4;
        edx137 = v151;
        if (!eax150 || (v125 = v152, v123 = v153, v127 = v154, eax156 = __netf2(v22, v125, v123, v127, v22, v152, v153, v155, v22, v146, v147, v149), esp135 = esp135 - 4 + 4, ecx136 = reinterpret_cast<void**>(0x3fff0000), edx137 = edx137, !!eax156)) {
            ecx136 = reinterpret_cast<void**>(0);
            goto addr_6e9433a2_8;
        }
    }
    addr_6e943535_11:
    eax160 = __netf2(v157, v158, v45, v159, v157, v158, v45, v159, v112, v113, v115, v117);
    v161 = reinterpret_cast<uint1_t>(!!eax160);
    __subtf3(ebx23, v158, v45, v159, v157, v158, v45, v159, v157, v158, v45, v159);
    eax162 = __netf2(a1, a2, a3, a4, a1, a2, a3, a4, v157, v158, v45, v159);
    esp163 = esp121 - 4 + 4 - 4 + 4 - 4 + 4;
    if (!eax162 || v161) {
        v164 = edx122;
        eax166 = __netf2(v34, v47, v165, v36, v34, v47, v165, v36, v157, v158, v45, v159);
        v167 = reinterpret_cast<uint1_t>(!!eax166);
        __subtf3(ebx23, v47, v165, v36, v34, v47, v165, v36, v34, v47, v165, v36);
        v168 = a4;
        v169 = a3;
        v170 = a2;
        eax171 = __netf2(a1, v170, v169, v168, a1, a2, a3, a4, v34, v47, v165, v36);
        esp172 = esp163 - 4 + 4 - 4 + 4 - 4 + 4;
        edx173 = v164;
        if (!eax171 || v167) {
            if (!*reinterpret_cast<signed char*>(&v111)) {
                v111 = edx173;
                v174 = v175;
                v176 = v177;
                v178 = ebp70;
                v179 = edi48;
                __subtf3(ebx23, v170, v169, v168, v180, v177, ebp70, edi48, v174, v176, v178, v179);
                v181 = a2;
                v182 = a4;
                v183 = a3;
                eax184 = __netf2(a1, v181, v183, v182, a1, a2, a3, a4, v174, v176, v178, v179);
                esp185 = esp172 - 4 + 4 - 4 + 4;
                edx86 = v111;
                if (eax184 && (v183 = ebp70, v181 = v186, v182 = edi48, eax189 = __netf2(v187, v181, v183, v182, v188, v186, ebp70, edi48, v174, v176, v178, v179), esp185 = esp185 - 4 + 4, edx86 = v111, eax189 == 0) || ((v190 = edx86, v174 = a1, v176 = reinterpret_cast<void**>(__return_address()), v178 = v191, v179 = v72, __subtf3(ebx23, v181, v183, v182, a1, __return_address(), v191, v72, v174, v176, v178, v179), v192 = a2, v193 = a4, v194 = a3, eax195 = __netf2(a1, v192, v194, v193, a1, a2, a3, a4, v174, v176, v178, v179), esp185 = esp185 - 4 + 4 - 4 + 4, edx86 = v190, !!eax195) && (v194 = v196, v192 = reinterpret_cast<void**>(__return_address()), v193 = v72, eax197 = __netf2(a1, v192, v194, v193, a1, __return_address(), v196, v72, v174, v176, v178, v179), esp185 = esp185 - 4 + 4, edx86 = v190, eax197 == 0) || ((v190 = edx86, v174 = v77, v176 = v198, v178 = v199, v179 = v200, __subtf3(ebx23, v192, v194, v193, v77, v198, v199, v201, v174, v176, v178, v179), v202 = a2, v203 = a4, v204 = a3, eax205 = __netf2(a1, v202, v204, v203, a1, a2, a3, a4, v174, v176, v178, v179), esp185 = esp185 - 4 + 4 - 4 + 4, edx86 = v190, !!eax205) && (v204 = v206, v202 = v207, v203 = v208, eax210 = __netf2(v77, v202, v204, v203, v77, v207, v206, v209, v174, v176, v178, v179), esp185 = esp185 - 4 + 4, edx86 = v190, eax210 == 0) || (v190 = edx86, v174 = a1, v176 = a2, v178 = a3, v179 = a4, __subtf3(ebx23, v202, v204, v203, a1, a2, a3, a4, v174, v176, v178, v179), eax211 = __netf2(a1, a2, a3, a4, a1, a2, a3, a4, v174, v176, v178, v179), esp185 = esp185 - 4 + 4 - 4 + 4, edx86 = v190, !!eax211) && (eax212 = __netf2(a1, a2, a3, a4, a1, a2, a3, a4, v174, v176, v178, v179), esp185 = esp185 - 4 + 4, edx86 = v190, !eax212)))) {
                    eax213 = __netf2(v138, v139, v140, v141, v138, v139, v140, v141, v174, v176, v178, v179);
                    esp214 = esp185 - 4 + 4;
                    edx215 = edx86;
                    if (eax213) {
                        v174 = v138;
                        v176 = v139;
                        v178 = v140;
                        v179 = v141;
                        fun_6e947820(ebx23, v139, v140, v141, 0, 0, 0, 0, v174, v176, v178, v179);
                        esp214 = esp214 - 4 + 4;
                        edx215 = edx86;
                        v138 = a1;
                        v139 = a2;
                        v140 = a3;
                        v141 = a4;
                    }
                    v170 = v216;
                    v169 = v217;
                    v168 = v218;
                    v76 = edx215;
                    eax219 = __netf2(v22, v170, v169, v168, v22, v216, v217, v218, v174, v176, v178, v179);
                    esp172 = esp214 - 4 + 4;
                    edx173 = v76;
                    if (eax219) {
                        fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, 0, v22, v216, v217, v218);
                        esp172 = esp172 - 4 + 4;
                        edx173 = v76;
                        v22 = a1;
                        v216 = a2;
                        v217 = a3;
                        v218 = a4;
                    }
                    if (v161) {
                        v76 = edx173;
                        fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, 0, v157, v158, v45, v159);
                        esp172 = esp172 - 4 + 4;
                        edx173 = v76;
                        v157 = a1;
                        v158 = a2;
                        v45 = a3;
                        v159 = a4;
                    }
                    if (v167) {
                        v76 = edx173;
                        fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, 0, v34, v47, v165, v36);
                        esp172 = esp172 - 4 + 4;
                        edx173 = v76;
                        v34 = a1;
                        v47 = a2;
                        v165 = a3;
                        v36 = a4;
                    }
                } else {
                    addr_6e94309b_2:
                    *reinterpret_cast<void***>(edx86) = ebp73;
                    *reinterpret_cast<void***>(edx86 + 4) = edi74;
                    *reinterpret_cast<void***>(edx86 + 8) = esi75;
                    *reinterpret_cast<void***>(edx86 + 12) = v220;
                    *reinterpret_cast<void***>(edx86 + 16) = v164;
                    *reinterpret_cast<void***>(edx86 + 20) = v221;
                    *reinterpret_cast<void***>(edx86 + 24) = v222;
                    *reinterpret_cast<void***>(edx86 + 28) = v223;
                    goto v224;
                }
            }
        } else {
            fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, 0, v157, v158, v45, v159);
            esp225 = esp172 - 4 + 4;
            ecx226 = reinterpret_cast<void**>(0x3fff0000);
            edx227 = edx173;
            v157 = a1;
            v158 = a2;
            v45 = a3;
            v159 = a4;
            goto addr_6e9443a2_24;
        }
    } else {
        fun_6e947820(ebx23, a2, a3, a4, 0, 0, 0, 0x3fff0000, v157, v158, v45, v159);
        v157 = a1;
        v158 = a2;
        v45 = a3;
        v159 = a4;
        __subtf3(ebx23, a2, a3, a4, v34, v47, v165, v36, v34, v47, v165, v36);
        v170 = a2;
        v169 = a3;
        v168 = a4;
        eax228 = __netf2(a1, v170, v169, v168, a1, a2, a3, a4, v34, v47, v165, v36);
        esp225 = esp163 - 4 + 4 - 4 + 4 - 4 + 4;
        edx227 = edx122;
        if (!eax228 || (v168 = v36, v170 = v47, v169 = v165, eax229 = __netf2(v34, v170, v169, v168, v34, v47, v165, v36, v34, v47, v165, v36), esp225 = esp225 - 4 + 4, ecx226 = reinterpret_cast<void**>(0x3fff0000), edx227 = edx122, !!eax229)) {
            ecx226 = reinterpret_cast<void**>(0);
            goto addr_6e9443a2_24;
        }
    }
    addr_6e943d9d_27:
    __multf3(ebx23, v170, v169, v168, v138, v139, v140, v141, v157, v158, v45, v159, a14, a15, a18, v22, v218, v141, v157, v159, v34, v36, v216, v217, v158, v45, v47, v165, v76, v190, edi48, edx173);
    esp230 = esp172 - 4 + 12 + 4;
    ecx231 = reinterpret_cast<void**>(esp230 + 0x100);
    __multf3(ecx231, v138, v139, v140, v157, v45, v47, v159, v217, v190, edi48, v158, v22, v218, v141, v157, v159, v34, v36, v216, v217, v158, v45, v47, v165, v76, v190, edi48, a7, v72, ecx231, v232);
    esp233 = esp230 - 4 + 12 + 4;
    eax234 = reinterpret_cast<void**>(esp233 + 0xf0);
    __subtf3(eax234, v157, v45, v47, a4, a5, a6, v235, a3, a4, a5, a6);
    __multf3(esp233 + 0xe0, v157, v45, v47, 0, 0, 0, 0x7fff0000, ebp70, __return_address(), a1, a2, v157, v159, v34, v36, v216, v217, v158, v45, v47, v165, v76, v190, edi48, a7, v72, ecx231, v236, eax234, a4, a1);
    ebp73 = edi48;
    edi74 = ebp70;
    esi75 = reinterpret_cast<void**>(__return_address());
    __multf3(ebx23, 0, 0, 0, v237, v238, v239, v47, v190, eax234, a4, edi48, v36, v216, v217, v158, v45, v47, v165, v76, v190, edi48, a7, v72, ecx231, v240, eax234, a4, a1, a4, a2, a3);
    __multf3(ebp70, v237, v238, v239, v165, v241, eax234, v76, edi48, a4, a1, a7, v158, v45, v47, v165, v76, a14, edi48, a7, a15, a16, v242, eax234, a4, a1, a4, a2, a3, v243, ebp70, __return_address());
    __addtf3(v244, v165, v241, eax234, a13, a15, eax234, a4, a12, a13, a14, a15, v165, v76, a14, edi48, a7, a15, a16, v245);
    __multf3(esp233 - 4 + 4 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 4 + 0xe0, v165, v241, eax234, 0, 0, 0, 0x7fff0000, a8, a9, a10, a11, v165, v76, a14, edi48, a7, a15, a16, v246, eax234, a4, a1, a4, a2, a3, v247, ebp70, __return_address(), v248, v249, v250);
    edx86 = v111;
    v164 = a7;
    v221 = a8;
    v222 = a9;
    v223 = a10;
    goto addr_6e94309b_2;
    addr_6e9443a2_24:
    v251 = v34;
    v252 = v47;
    v253 = v165;
    v254 = v36;
    fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, ecx226, v251, v252, v253, v254);
    v34 = a1;
    v47 = a2;
    v165 = a3;
    v36 = a4;
    eax255 = __netf2(v138, v139, v140, v141, v138, v139, v140, v141, v251, v252, v253, v254);
    esp256 = esp225 - 4 + 4 - 4 + 4;
    edx257 = edx227;
    if (eax255) {
        v251 = v138;
        v252 = v139;
        v253 = v140;
        v254 = v141;
        fun_6e947820(ebx23, v139, v140, v141, 0, 0, 0, 0, v251, v252, v253, v254);
        esp256 = esp256 - 4 + 4;
        edx257 = edx227;
        v138 = a1;
        v139 = a2;
        v140 = a3;
        v141 = a4;
    }
    v170 = v216;
    v169 = v217;
    v168 = v218;
    v76 = edx257;
    eax258 = __netf2(v22, v170, v169, v168, v22, v216, v217, v218, v251, v252, v253, v254);
    esp172 = esp256 - 4 + 4;
    edx173 = v76;
    if (eax258) {
        fun_6e947820(ebx23, v170, v169, v168, 0, 0, 0, 0, v22, v216, v217, v218);
        esp172 = esp172 - 4 + 4;
        edx173 = v76;
        v22 = a1;
        v216 = a2;
        v217 = a3;
        v218 = a4;
        goto addr_6e943d9d_27;
    }
    addr_6e9433a2_8:
    v112 = v22;
    v113 = v259;
    v115 = v260;
    v117 = v261;
    fun_6e947820(ebx23, v125, v123, v127, 0, 0, 0, ecx136, v112, v113, v115, v117);
    v22 = a1;
    v216 = a2;
    v217 = a3;
    v218 = a4;
    eax267 = __netf2(v262, v263, v45, v264, v265, v263, v45, v266, v112, v113, v115, v117);
    esp268 = esp135 - 4 + 4 - 4 + 4;
    edx269 = edx137;
    if (eax267) {
        v112 = v270;
        v113 = v271;
        v115 = v45;
        v117 = v272;
        fun_6e947820(ebx23, v263, v45, v264, 0, 0, 0, 0, v112, v113, v115, v117);
        esp268 = esp268 - 4 + 4;
        edx269 = edx137;
        v157 = a1;
        v158 = a2;
        v45 = a3;
        v159 = a4;
    }
    v111 = edx269;
    eax274 = __netf2(v34, v47, v273, v36, v34, v47, v273, v36, v112, v113, v115, v117);
    esp121 = esp268 - 4 + 4;
    edx122 = v111;
    if (eax274) {
        v112 = v34;
        v113 = v47;
        v115 = v275;
        v117 = v36;
        fun_6e947820(ebx23, v47, v273, v36, 0, 0, 0, 0, v112, v113, v115, v117);
        esp121 = esp121 - 4 + 4;
        *reinterpret_cast<signed char*>(&v111) = 1;
        edx122 = edx122;
        v34 = a1;
        v47 = a2;
        v165 = a3;
        v36 = a4;
        goto addr_6e943535_11;
    } else {
        *reinterpret_cast<signed char*>(&v111) = 1;
        goto addr_6e943535_11;
    }
}

int32_t __divdc3(int32_t a1) {
    int1_t below_or_equal2;
    int1_t pf3;
    int1_t pf4;
    int32_t eax5;
    int32_t ecx6;
    int1_t pf7;
    int1_t zf8;
    uint1_t pf9;
    int1_t zf10;
    unsigned char cl11;
    uint1_t pf12;
    uint32_t eax13;
    int32_t ecx14;
    int32_t ecx15;
    int16_t ax16;
    int16_t fpu_status_word17;

    __asm__("fld qword [esp+0x8]");
    __asm__("fld qword [esp+0x10]");
    __asm__("fld qword [esp+0x18]");
    __asm__("fld qword [esp+0x20]");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fucomip st0, st1");
    __asm__("fstp st0");
    if (below_or_equal2) {
        __asm__("fld st0");
        __asm__("fdiv st0, st2");
        __asm__("fld st1");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st3");
        __asm__("fld st4");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st6");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st6");
        __asm__("fsubr st0, st5");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    } else {
        __asm__("fld st1");
        __asm__("fdiv st0, st1");
        __asm__("fld st2");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st2");
        __asm__("fld st5");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st5");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st5");
        __asm__("fsub st0, st6");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    }
    __asm__("fucomi st0, st0");
    if (pf3) {
        __asm__("fxch st0, st1");
        __asm__("fucomi st0, st0");
        if (!pf4) {
            __asm__("fstp st5");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fldz ");
            eax5 = 0;
            __asm__("fucomi st0, st4");
            *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<uint1_t>(!pf7);
            if (!zf8) {
                ecx6 = 0;
            }
            pf9 = __intrinsic();
            zf10 = *reinterpret_cast<unsigned char*>(&ecx6) == 0;
            if (zf10) 
                goto addr_6e944bd2_10; else 
                goto addr_6e944abb_11;
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
    }
    addr_6e944a74_13:
    __asm__("fstp qword [edx]");
    __asm__("fstp qword [edx+0x8]");
    return a1;
    addr_6e944bd2_10:
    __asm__("fstp st0");
    addr_6e944bd4_14:
    __asm__("fld st5");
    __asm__("fsub st0, st6");
    __asm__("fucomip st0, st0");
    cl11 = pf9;
    pf12 = __intrinsic();
    eax13 = cl11;
    if (!cl11) {
        addr_6e944beb_15:
        __asm__("fld st4");
        __asm__("fsub st0, st5");
        __asm__("fucomip st0, st0");
        if (!pf12) {
            addr_6e944b20_16:
            __asm__("fld st3");
            __asm__("fsub st0, st4");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st5");
            __asm__("fxch st0, st1");
            goto addr_6e944b2a_17;
        } else {
            __asm__("fxch st0, st4");
            ecx14 = 0;
            pf12 = __intrinsic();
            __asm__("fucomi st0, st0");
            if (pf12) {
                __asm__("fxch st0, st4");
                goto addr_6e944b20_16;
            } else {
                addr_6e944c03_20:
                __asm__("fld st3");
                __asm__("fsub st0, st4");
                __asm__("fucomi st0, st0");
                if (pf12) {
                    addr_6e944b2a_17:
                    __asm__("fucomip st0, st0");
                    if (pf12) {
                        __asm__("fxch st0, st3");
                        __asm__("fucomi st0, st0");
                        ecx15 = 1;
                        if (!pf12) {
                            addr_6e944b4e_22:
                            if (eax13) {
                                __asm__("fstp st0");
                                __asm__("fstp st4");
                                __asm__("fstp st0");
                                __asm__("fstp st0");
                                __asm__("fxch st0, st1");
                                goto addr_6e944a74_13;
                            } else {
                                __asm__("fld st3");
                                __asm__("fsub st0, st4");
                                __asm__("fucomip st0, st0");
                                if (__intrinsic()) {
                                    __asm__("fstp st0");
                                    __asm__("fstp st4");
                                    __asm__("fstp st0");
                                    __asm__("fstp st0");
                                    __asm__("fxch st0, st1");
                                    goto addr_6e944a74_13;
                                } else {
                                    __asm__("fstp st4");
                                    __asm__("fstp st0");
                                    __asm__("fxch st0, st1");
                                    __asm__("fxch st0, st2");
                                    if (ecx15) {
                                        __asm__("fld1 ");
                                        __asm__("fxch st0, st1");
                                    } else {
                                        __asm__("fldz ");
                                        __asm__("fxch st0, st1");
                                    }
                                    __asm__("fxam ");
                                    __asm__("fstp st0");
                                    __asm__("fabs ");
                                    __asm__("fld st0");
                                    __asm__("fchs ");
                                    __asm__("fcmove st0, st1");
                                    __asm__("fstp st1");
                                    __asm__("fld st1");
                                    __asm__("fsub st0, st2");
                                    __asm__("fucomip st0, st0");
                                    if (__intrinsic()) 
                                        goto addr_6e944b91_30;
                                }
                            }
                        } else {
                            __asm__("fxch st0, st3");
                            goto addr_6e944b32_32;
                        }
                    } else {
                        addr_6e944b32_32:
                        __asm__("fld st2");
                        __asm__("fsub st0, st3");
                        goto addr_6e944b36_33;
                    }
                } else {
                    __asm__("fstp st0");
                    __asm__("fld st2");
                    __asm__("fsub st0, st3");
                    __asm__("fucomi st0, st0");
                    if (pf12) {
                        addr_6e944b36_33:
                        __asm__("fucomip st0, st0");
                        if (!pf12) {
                            __asm__("fstp st0");
                            __asm__("fstp st4");
                            __asm__("fstp st0");
                            __asm__("fstp st0");
                            __asm__("fxch st0, st1");
                            goto addr_6e944a74_13;
                        } else {
                            __asm__("fxch st0, st2");
                            __asm__("fucomi st0, st0");
                            if (pf12) {
                                __asm__("fstp st0");
                                __asm__("fstp st4");
                                __asm__("fstp st0");
                                __asm__("fstp st0");
                                __asm__("fxch st0, st1");
                                goto addr_6e944a74_13;
                            } else {
                                __asm__("fxch st0, st2");
                                __asm__("fxch st0, st3");
                                ecx15 = 0;
                                goto addr_6e944b4e_22;
                            }
                        }
                    } else {
                        __asm__("fstp st0");
                        __asm__("fstp st4");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        __asm__("fxch st0, st2");
                        if (ecx14) {
                            __asm__("fld1 ");
                            __asm__("fxch st0, st4");
                        } else {
                            __asm__("fldz ");
                            __asm__("fxch st0, st4");
                        }
                        __asm__("fxam ");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st3");
                        __asm__("fabs ");
                        __asm__("fld st0");
                        __asm__("fchs ");
                        __asm__("fcmove st0, st1");
                        __asm__("fstp st1");
                        __asm__("fld st3");
                        __asm__("fsub st0, st4");
                        __asm__("fucomip st0, st0");
                        if (!__intrinsic()) 
                            goto addr_6e944c54_43; else 
                            goto addr_6e944c50_44;
                    }
                }
            }
        }
    } else {
        __asm__("fxch st0, st5");
        __asm__("fucomi st0, st0");
        if (pf12) 
            goto addr_6e944be9_47; else 
            goto addr_6e944ccc_48;
    }
    addr_6e944b98_49:
    __asm__("fldz ");
    __asm__("fxch st0, st2");
    addr_6e944b9c_50:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("faddp st1, st0");
    __asm__("fldz ");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st1");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fsubrp st3, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944a74_13;
    addr_6e944b91_30:
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) 
        goto addr_6e944ca0_52;
    __asm__("fxch st0, st1");
    goto addr_6e944b98_49;
    addr_6e944ca0_52:
    __asm__("fld1 ");
    __asm__("fxch st0, st2");
    __asm__("fxch st0, st1");
    goto addr_6e944b9c_50;
    addr_6e944c54_43:
    __asm__("fldz ");
    __asm__("fxch st0, st4");
    addr_6e944c58_54:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st3");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st3");
    __asm__("fmul st0, st3");
    __asm__("fld st1");
    __asm__("fmul st0, st3");
    __asm__("faddp st1, st0");
    __asm__("fld dword [0x6e9572a8]");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fsubrp st3, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st1, st0");
    __asm__("fxch st0, st1");
    goto addr_6e944a74_13;
    addr_6e944c50_44:
    __asm__("fxch st0, st3");
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) 
        goto addr_6e944cb1_56;
    __asm__("fxch st0, st3");
    goto addr_6e944c54_43;
    addr_6e944cb1_56:
    __asm__("fld1 ");
    __asm__("fxch st0, st4");
    __asm__("fxch st0, st1");
    goto addr_6e944c58_54;
    addr_6e944be9_47:
    __asm__("fxch st0, st5");
    goto addr_6e944beb_15;
    addr_6e944ccc_48:
    __asm__("fxch st0, st5");
    __asm__("fxch st0, st4");
    ecx14 = 1;
    goto addr_6e944c03_20;
    addr_6e944abb_11:
    __asm__("fucomip st0, st3");
    *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<uint1_t>(!pf9);
    if (zf10) {
        eax5 = ecx6;
    }
    pf9 = __intrinsic();
    if (!*reinterpret_cast<signed char*>(&eax5)) 
        goto addr_6e944bd4_14;
    __asm__("fxch st0, st5");
    __asm__("fucomi st0, st0");
    if (pf9) {
        __asm__("fxch st0, st4");
        __asm__("fucomi st0, st0");
        if (!pf9) {
            __asm__("fstp st5");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fld st4");
            eax13 = 0;
            pf12 = __intrinsic();
            __asm__("fsub st0, st5");
            __asm__("fucomip st0, st0");
            __asm__("fxch st0, st4");
            __asm__("fxch st0, st5");
            *reinterpret_cast<unsigned char*>(&eax13) = pf12;
            goto addr_6e944b20_16;
        }
    } else {
        __asm__("fstp st5");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fxch st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st1");
    }
    __asm__("fxam ");
    ax16 = fpu_status_word17;
    __asm__("fstp st0");
    __asm__("fld dword [0x6e9572a8]");
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax16) + 1) & 2) {
        __asm__("fstp st0");
        __asm__("fld dword [0x6e9572ac]");
    }
    __asm__("fmul st1, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944a74_13;
}

int32_t __divxc3(int32_t a1) {
    int1_t below_or_equal2;
    int1_t pf3;
    int1_t pf4;
    int32_t eax5;
    int32_t ecx6;
    int1_t pf7;
    int1_t zf8;
    uint1_t pf9;
    int1_t zf10;
    unsigned char cl11;
    uint1_t pf12;
    uint32_t eax13;
    int32_t ecx14;
    int32_t ecx15;
    int16_t ax16;
    int16_t fpu_status_word17;

    __asm__("fld tword [esp+0x8]");
    __asm__("fld tword [esp+0x14]");
    __asm__("fld tword [esp+0x20]");
    __asm__("fld tword [esp+0x2c]");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fucomip st0, st1");
    __asm__("fstp st0");
    if (below_or_equal2) {
        __asm__("fld st0");
        __asm__("fdiv st0, st2");
        __asm__("fld st1");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st3");
        __asm__("fld st4");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st6");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st6");
        __asm__("fsubr st0, st5");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    } else {
        __asm__("fld st1");
        __asm__("fdiv st0, st1");
        __asm__("fld st2");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st2");
        __asm__("fld st5");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st5");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st5");
        __asm__("fsub st0, st6");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    }
    __asm__("fucomi st0, st0");
    if (pf3) {
        __asm__("fxch st0, st1");
        __asm__("fucomi st0, st0");
        if (!pf4) {
            __asm__("fstp st5");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fldz ");
            eax5 = 0;
            __asm__("fucomi st0, st4");
            *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<uint1_t>(!pf7);
            if (!zf8) {
                ecx6 = 0;
            }
            pf9 = __intrinsic();
            zf10 = *reinterpret_cast<unsigned char*>(&ecx6) == 0;
            if (zf10) 
                goto addr_6e944ee2_10; else 
                goto addr_6e944dcb_11;
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
    }
    addr_6e944d84_13:
    __asm__("fstp tword [edx]");
    __asm__("fstp tword [edx+0xc]");
    return a1;
    addr_6e944ee2_10:
    __asm__("fstp st0");
    addr_6e944ee4_14:
    __asm__("fld st5");
    __asm__("fsub st0, st6");
    __asm__("fucomip st0, st0");
    cl11 = pf9;
    pf12 = __intrinsic();
    eax13 = cl11;
    if (!cl11) {
        addr_6e944efb_15:
        __asm__("fld st4");
        __asm__("fsub st0, st5");
        __asm__("fucomip st0, st0");
        if (!pf12) {
            addr_6e944e30_16:
            __asm__("fld st3");
            __asm__("fsub st0, st4");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st5");
            __asm__("fxch st0, st1");
            goto addr_6e944e3a_17;
        } else {
            __asm__("fxch st0, st4");
            ecx14 = 0;
            pf12 = __intrinsic();
            __asm__("fucomi st0, st0");
            if (pf12) {
                __asm__("fxch st0, st4");
                goto addr_6e944e30_16;
            } else {
                addr_6e944f13_20:
                __asm__("fld st3");
                __asm__("fsub st0, st4");
                __asm__("fucomi st0, st0");
                if (pf12) {
                    addr_6e944e3a_17:
                    __asm__("fucomip st0, st0");
                    if (pf12) {
                        __asm__("fxch st0, st3");
                        __asm__("fucomi st0, st0");
                        ecx15 = 1;
                        if (!pf12) {
                            addr_6e944e5e_22:
                            if (eax13) {
                                __asm__("fstp st0");
                                __asm__("fstp st4");
                                __asm__("fstp st0");
                                __asm__("fstp st0");
                                __asm__("fxch st0, st1");
                                goto addr_6e944d84_13;
                            } else {
                                __asm__("fld st3");
                                __asm__("fsub st0, st4");
                                __asm__("fucomip st0, st0");
                                if (__intrinsic()) {
                                    __asm__("fstp st0");
                                    __asm__("fstp st4");
                                    __asm__("fstp st0");
                                    __asm__("fstp st0");
                                    __asm__("fxch st0, st1");
                                    goto addr_6e944d84_13;
                                } else {
                                    __asm__("fstp st4");
                                    __asm__("fstp st0");
                                    __asm__("fxch st0, st1");
                                    __asm__("fxch st0, st2");
                                    if (ecx15) {
                                        __asm__("fld1 ");
                                        __asm__("fxch st0, st1");
                                    } else {
                                        __asm__("fldz ");
                                        __asm__("fxch st0, st1");
                                    }
                                    __asm__("fxam ");
                                    __asm__("fstp st0");
                                    __asm__("fabs ");
                                    __asm__("fld st0");
                                    __asm__("fchs ");
                                    __asm__("fcmove st0, st1");
                                    __asm__("fstp st1");
                                    __asm__("fld st1");
                                    __asm__("fsub st0, st2");
                                    __asm__("fucomip st0, st0");
                                    if (__intrinsic()) 
                                        goto addr_6e944ea1_30;
                                }
                            }
                        } else {
                            __asm__("fxch st0, st3");
                            goto addr_6e944e42_32;
                        }
                    } else {
                        addr_6e944e42_32:
                        __asm__("fld st2");
                        __asm__("fsub st0, st3");
                        goto addr_6e944e46_33;
                    }
                } else {
                    __asm__("fstp st0");
                    __asm__("fld st2");
                    __asm__("fsub st0, st3");
                    __asm__("fucomi st0, st0");
                    if (pf12) {
                        addr_6e944e46_33:
                        __asm__("fucomip st0, st0");
                        if (!pf12) {
                            __asm__("fstp st0");
                            __asm__("fstp st4");
                            __asm__("fstp st0");
                            __asm__("fstp st0");
                            __asm__("fxch st0, st1");
                            goto addr_6e944d84_13;
                        } else {
                            __asm__("fxch st0, st2");
                            __asm__("fucomi st0, st0");
                            if (pf12) {
                                __asm__("fstp st0");
                                __asm__("fstp st4");
                                __asm__("fstp st0");
                                __asm__("fstp st0");
                                __asm__("fxch st0, st1");
                                goto addr_6e944d84_13;
                            } else {
                                __asm__("fxch st0, st2");
                                __asm__("fxch st0, st3");
                                ecx15 = 0;
                                goto addr_6e944e5e_22;
                            }
                        }
                    } else {
                        __asm__("fstp st0");
                        __asm__("fstp st4");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        __asm__("fxch st0, st2");
                        if (ecx14) {
                            __asm__("fld1 ");
                            __asm__("fxch st0, st4");
                        } else {
                            __asm__("fldz ");
                            __asm__("fxch st0, st4");
                        }
                        __asm__("fxam ");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st3");
                        __asm__("fabs ");
                        __asm__("fld st0");
                        __asm__("fchs ");
                        __asm__("fcmove st0, st1");
                        __asm__("fstp st1");
                        __asm__("fld st3");
                        __asm__("fsub st0, st4");
                        __asm__("fucomip st0, st0");
                        if (!__intrinsic()) 
                            goto addr_6e944f64_43; else 
                            goto addr_6e944f60_44;
                    }
                }
            }
        }
    } else {
        __asm__("fxch st0, st5");
        __asm__("fucomi st0, st0");
        if (pf12) 
            goto addr_6e944ef9_47; else 
            goto addr_6e944fdc_48;
    }
    addr_6e944ea8_49:
    __asm__("fldz ");
    __asm__("fxch st0, st2");
    addr_6e944eac_50:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("faddp st1, st0");
    __asm__("fldz ");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st1");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fsubrp st3, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944d84_13;
    addr_6e944ea1_30:
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) 
        goto addr_6e944fb0_52;
    __asm__("fxch st0, st1");
    goto addr_6e944ea8_49;
    addr_6e944fb0_52:
    __asm__("fld1 ");
    __asm__("fxch st0, st2");
    __asm__("fxch st0, st1");
    goto addr_6e944eac_50;
    addr_6e944f64_43:
    __asm__("fldz ");
    __asm__("fxch st0, st4");
    addr_6e944f68_54:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st3");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st3");
    __asm__("fmul st0, st3");
    __asm__("fld st1");
    __asm__("fmul st0, st3");
    __asm__("faddp st1, st0");
    __asm__("fld dword [0x6e9572b0]");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fsubrp st3, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st1, st0");
    __asm__("fxch st0, st1");
    goto addr_6e944d84_13;
    addr_6e944f60_44:
    __asm__("fxch st0, st3");
    __asm__("fucomi st0, st0");
    if (!__intrinsic()) 
        goto addr_6e944fc1_56;
    __asm__("fxch st0, st3");
    goto addr_6e944f64_43;
    addr_6e944fc1_56:
    __asm__("fld1 ");
    __asm__("fxch st0, st4");
    __asm__("fxch st0, st1");
    goto addr_6e944f68_54;
    addr_6e944ef9_47:
    __asm__("fxch st0, st5");
    goto addr_6e944efb_15;
    addr_6e944fdc_48:
    __asm__("fxch st0, st5");
    __asm__("fxch st0, st4");
    ecx14 = 1;
    goto addr_6e944f13_20;
    addr_6e944dcb_11:
    __asm__("fucomip st0, st3");
    *reinterpret_cast<unsigned char*>(&ecx6) = reinterpret_cast<uint1_t>(!pf9);
    if (zf10) {
        eax5 = ecx6;
    }
    pf9 = __intrinsic();
    if (!*reinterpret_cast<signed char*>(&eax5)) 
        goto addr_6e944ee4_14;
    __asm__("fxch st0, st5");
    __asm__("fucomi st0, st0");
    if (pf9) {
        __asm__("fxch st0, st4");
        __asm__("fucomi st0, st0");
        if (!pf9) {
            __asm__("fstp st5");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fld st4");
            eax13 = 0;
            pf12 = __intrinsic();
            __asm__("fsub st0, st5");
            __asm__("fucomip st0, st0");
            __asm__("fxch st0, st4");
            __asm__("fxch st0, st5");
            *reinterpret_cast<unsigned char*>(&eax13) = pf12;
            goto addr_6e944e30_16;
        }
    } else {
        __asm__("fstp st5");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fxch st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st1");
    }
    __asm__("fxam ");
    ax16 = fpu_status_word17;
    __asm__("fstp st0");
    __asm__("fld dword [0x6e9572b0]");
    if (*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&ax16) + 1) & 2) {
        __asm__("fstp st0");
        __asm__("fld dword [0x6e9572b4]");
    }
    __asm__("fmul st1, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944d84_13;
}

void __divtc3(void** a1, void** a2, void** a3, void** a4, void** a5, void** a6, void** a7, void** a8, void** a9, void** a10, void** a11, void** a12, void** a13, void** a14, void** a15, void** a16, void** a17, void** a18, void** a19, void** a20, void** a21, void** a22) {
    struct s149** esp23;
    struct s149** esp24;
    uint32_t v25;
    void** v26;
    void** v27;
    void** v28;
    uint32_t v29;
    void** v30;
    void** v31;
    uint32_t v32;
    int32_t eax33;
    void*** esp34;
    void*** esp35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void*** esp45;
    void** eax46;
    void** esi47;
    void** v48;
    void** v49;
    void** ebx50;
    void** esi51;
    void** edi52;
    void** v53;
    void** v54;
    void*** esp55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** ebp67;
    void** v68;
    void** v69;
    void*** esp70;
    void** v71;
    void** v72;
    void** v73;
    void** v74;
    void*** esp75;
    void** v76;
    void** v77;
    void** v78;
    void** v79;
    void** v80;
    void** v81;
    void** v82;
    void** v83;
    void** v84;
    void** v85;
    void** v86;
    void** v87;
    void** v88;
    void** v89;
    void** v90;
    void** v91;
    void** v92;
    void** v93;
    void** v94;
    void** v95;
    void** v96;
    void** v97;
    void*** esp98;
    void** v99;
    void** v100;
    void** v101;
    void** v102;
    void** v103;
    void** v104;
    void** v105;
    void** v106;
    void** v107;
    void** v108;
    void*** esp109;
    void** v110;
    void** v111;
    void** v112;
    void** v113;
    void** v114;
    void** v115;
    void** v116;
    void** v117;
    void** v118;
    void*** esp119;
    void** eax120;
    void** v121;
    void*** esp122;
    void** v123;
    void** v124;
    void** v125;
    void** v126;
    void** v127;
    void** v128;
    void** v129;
    void** v130;
    void** v131;
    void** v132;
    void*** esp133;
    void** v134;
    void** v135;
    void** v136;
    void** v137;
    void*** esp138;
    void** v139;
    void** v140;
    void** v141;
    void** v142;
    void** v143;
    void** v144;
    void** v145;
    void** v146;
    void** v147;
    void** v148;
    void** v149;
    void** v150;
    void** v151;
    void** v152;
    void** v153;
    void** v154;
    void** v155;
    void** v156;
    void** v157;
    void** v158;
    void** ebp159;
    void** edi160;
    void** ebx161;
    void** v162;
    void** v163;
    void** v164;
    void** v165;
    void** v166;
    uint32_t eax167;
    void** ecx168;
    void** v169;
    void** v170;
    uint32_t eax171;
    void** v172;
    void** v173;
    void** v174;
    void** v175;
    void** v176;
    uint32_t eax177;
    void*** esp178;
    void** ecx179;
    void** v180;
    void** v181;
    void** v182;
    uint32_t eax183;
    void** v184;
    void** v185;
    void** v186;
    void** v187;
    uint32_t eax188;
    void*** esp189;
    void** ecx190;
    void** v191;
    void** v192;
    void** v193;
    void** v194;
    void** v195;
    uint32_t eax196;
    void** v197;
    void*** esp198;
    void** v199;
    void** v200;
    void** v201;
    void** v202;
    void** v203;
    void** v204;
    void** v205;
    void** v206;
    void** v207;
    void** v208;
    void** v209;
    void** v210;
    void** v211;
    void** v212;
    void** v213;
    void** v214;
    void** v215;
    void** v216;
    void** v217;
    void** v218;
    void** v219;
    void** v220;
    void** v221;
    void** v222;
    void** v223;
    void** v224;
    uint32_t eax225;
    void*** esp226;
    void** ecx227;
    uint32_t v228;
    uint32_t eax229;
    unsigned char al230;
    uint32_t eax231;
    void** v232;
    void** v233;
    void** v234;
    void** v235;
    void** v236;
    uint32_t eax237;
    void** v238;
    void** v239;
    void** v240;
    void** v241;
    uint32_t eax242;
    void** v243;
    void** v244;
    void** v245;
    void** v246;
    uint32_t eax247;
    void*** esp248;
    void** v249;
    uint32_t eax250;
    void** v251;
    void** v252;
    void** v253;
    uint32_t eax254;
    void** v255;
    void** v256;
    uint32_t eax257;
    int32_t v258;
    void** v259;
    void** v260;
    void** v261;
    void** v262;
    void** v263;
    void** v264;
    void** v265;
    uint32_t eax266;
    void** v267;
    void*** esp268;
    void** v269;
    void** v270;
    void** v271;
    void** v272;
    void** v273;
    uint32_t eax274;
    void*** esp275;
    void** ecx276;
    void** v277;
    void** v278;
    uint32_t eax279;
    void** edx280;
    void** v281;
    void** v282;
    void*** esp283;
    void** v284;
    void** v285;
    void** v286;
    void** v287;
    void** v288;
    void** v289;
    void** v290;
    void** v291;
    void** v292;
    void** v293;
    void** v294;
    void** v295;
    void** v296;
    void** v297;
    void** v298;
    void** v299;
    void** v300;
    void** v301;
    void** v302;
    void** v303;
    void** v304;
    void** v305;
    void** v306;
    void** v307;
    void*** esp308;
    void** eax309;
    void** v310;
    void** v311;
    void** v312;
    void** v313;
    void** v314;
    void** v315;
    void** v316;
    void** v317;
    void** v318;
    void** v319;
    void** v320;
    void** v321;
    void** v322;
    void** v323;
    void** v324;
    uint32_t eax325;
    void** v326;
    void** v327;
    uint32_t eax328;
    void*** esp329;
    void** v330;
    void** v331;
    void** v332;
    void** v333;
    void** v334;
    void** v335;
    void** v336;
    uint32_t eax337;
    void*** esp338;
    void** ecx339;
    void** v340;
    void** v341;
    void** v342;
    void** v343;
    uint32_t eax344;
    void** edx345;
    void** v346;
    void** v347;
    void** v348;
    void** v349;
    void*** esp350;
    void** v351;
    void** v352;
    void** v353;
    void** v354;
    void** v355;
    void** v356;
    void** v357;
    void** v358;
    void** v359;
    void** v360;
    void** v361;
    void** v362;
    void** v363;
    void** v364;
    void** v365;
    void** v366;
    void** v367;
    void** v368;
    void** v369;
    void** v370;
    void** v371;
    void** v372;
    void** v373;
    void** v374;
    void*** esp375;
    void** eax376;
    void** v377;
    void** v378;
    void** v379;
    void** v380;
    void** v381;
    void** v382;
    void** v383;
    void** v384;
    void** v385;
    void** v386;
    void** v387;
    void** v388;
    void** v389;
    void** v390;
    void** v391;
    void** v392;
    void** v393;
    void** v394;
    void** v395;
    void** v396;
    void** v397;
    void** v398;
    void** v399;
    void** v400;
    void** v401;
    void** v402;
    void** v403;
    void** v404;
    void** v405;

    esp23 = reinterpret_cast<struct s149**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0xec);
    fun_6e947870(esp23 + 52);
    esp24 = esp23 - 1 + 1;
    fun_6e947870(esp24 + 52);
    eax33 = __lttf2(v25, v26, v27, v28, v29, v30, v31, v32);
    esp34 = reinterpret_cast<void***>(esp24 - 1 + 1 - 1 + 1);
    if (eax33 >= 0) {
        __divtf3(esp34 + 0xd0, v26, v27, v28, a17, a18, a19, a20, a13, a14, a15, a16);
        esp35 = esp34 - 4 + 12 + 4;
        v36 = v37;
        __multf3(esp35 + 0xd0, a17, a18, a19, a17, a9, a10, a7, v37, v38, v39, v40, a9, a10, a11, a12, a20, a5, a6, a7, a8, a14, a15, a16, v27, a1, v41, v36, a13, v42, v43, v44);
        esp45 = esp35 - 4 + 12 + 4;
        eax46 = reinterpret_cast<void**>(esp45 + 0xc0);
        esi47 = eax46;
        v48 = eax46;
        __addtf3(esi47, a17, a9, a10, v49, ebx50, esi51, edi52, v53, v36, a13, v54, a12, a20, a5, a6, a7, a8, a14, a15);
        esp55 = esp45 - 4 + 4;
        v56 = v57;
        v58 = v59;
        __multf3(esp55 + 0xd0, a17, a9, a10, a6, a7, a8, a14, v59, v38, v39, v40, a12, a20, a5, a6, a7, a8, a14, a15, a16, v27, a1, v60, v36, a13, v61, v62, v63, v64, v65, v66);
        __addtf3(esi47, a6, a7, a8, edi52, ebp67, __return_address(), a1, v68, v36, a13, v69, a6, a7, a8, a14, a15, a16, v27, a1);
        esp70 = esp55 - 4 + 12 + 4 - 4 + 4;
        __divtf3(esp70 + 0xb0, a6, a7, a8, v71, v72, ebx50, esi51, v73, v48, v58, v74);
        esp75 = esp70 - 4 + 12 + 4;
        v76 = v77;
        v78 = v79;
        v80 = v81;
        v82 = v83;
        v84 = v85;
        v86 = v87;
        v88 = ebx50;
        __multf3(esp75 + 0xd0, v71, v72, ebx50, v78, v82, v86, v89, v90, v38, v39, v40, a14, a15, a16, v27, a1, v91, v36, a13, v92, v93, v94, v95, v96, v97, v56, v76, v80, v84, v88, v48);
        esp98 = esp75 - 4 + 12 + 4;
        v99 = a4;
        v100 = v36;
        v101 = a5;
        v102 = a13;
        v103 = a6;
        v104 = v105;
        v106 = a7;
        v107 = v108;
    } else {
        __divtf3(esp34 + 0xd0, v26, v27, v28, a13, a14, a15, a16, a17, a18, a19, a20);
        esp109 = esp34 - 4 + 12 + 4;
        v36 = v110;
        __multf3(esp109 + 0xd0, a13, a14, a15, a13, v27, a1, v111, v110, v112, v113, v114, a9, a10, a11, a12, a20, a5, a6, a7, a8, a14, a15, a16, v27, a1, v115, v36, a13, v116, v117, v118);
        esp119 = esp109 - 4 + 12 + 4;
        eax120 = reinterpret_cast<void**>(esp119 + 0xc0);
        esi47 = eax120;
        v48 = eax120;
        __addtf3(esi47, a13, v27, a1, v121, ebx50, esi51, edi52, a5, a12, a20, a15, a12, a20, a5, a6, a7, a8, a14, a15);
        esp122 = esp119 - 4 + 4;
        v56 = v123;
        v58 = v124;
        __multf3(esp122 + 0xd0, a13, v27, a1, a16, v27, a1, v125, v124, v112, v113, v114, a12, a20, a5, a6, a7, a8, a14, a15, a16, v27, a1, v126, v36, a13, v127, v128, v129, v130, v131, v132);
        __addtf3(esi47, a16, v27, a1, edi52, ebp67, __return_address(), a1, a14, a15, a16, v27, a6, a7, a8, a14, a15, a16, v27, a1);
        esp133 = esp122 - 4 + 12 + 4 - 4 + 4;
        __divtf3(esp133 + 0xb0, a16, v27, a1, v134, v135, ebx50, esi51, v136, v48, v58, v137);
        esp138 = esp133 - 4 + 12 + 4;
        v76 = v139;
        v78 = v27;
        v80 = v140;
        v82 = a1;
        v84 = v141;
        v86 = v142;
        v88 = ebx50;
        __multf3(esp138 + 0xd0, v134, v135, ebx50, v78, v82, v86, v36, v143, v112, v113, v114, a14, a15, a16, v27, a1, v144, v36, a13, v145, v146, v147, v148, v149, v150, v56, v76, v80, v84, v88, v48);
        esp98 = esp138 - 4 + 12 + 4;
        v99 = v151;
        v100 = a4;
        v101 = v152;
        v102 = a5;
        v103 = v153;
        v104 = a6;
        v106 = v56;
        v107 = a7;
    }
    __subtf3(esi47, v78, v82, v86, v100, v102, v104, v107, v99, v101, v103, v106);
    __divtf3(v154, v78, v82, v86, __return_address(), a1, a2, a3, v155, v156, v157, v158);
    ebp159 = ebp67;
    edi160 = reinterpret_cast<void**>(__return_address());
    ebx161 = a2;
    eax167 = __netf2(v162, v163, v164, v165, v162, v163, v164, v165, v158, v27, a1, v166);
    ecx168 = v169;
    if (!eax167) 
        goto addr_6e94558d_5;
    eax171 = __netf2(ebp159, edi160, a1, ebx161, ebp159, edi160, a1, ebx161, v158, v27, a1, v170);
    ecx168 = v169;
    if (!eax171) 
        goto addr_6e94558d_5;
    v172 = v88;
    v173 = v48;
    v174 = v58;
    eax177 = __netf2(v175, v172, v173, v174, 0, 0, 0, 0, v158, v27, a1, v176);
    esp178 = esp98 - 4 + 4 - 4 + 12 + 4 - 4 + 4 - 4 + 4 - 4 + 4;
    ecx179 = v169;
    if (!eax177 && (v172 = v36, v173 = a13, v174 = v180, eax183 = __netf2(v181, v172, v173, v174, 0, 0, 0, 0, v158, v27, a1, v182), esp178 = esp178 - 4 + 4, ecx179 = v169, !eax183)) {
        v184 = v84;
        v185 = v76;
        v186 = v80;
        eax188 = __netf2(v56, v185, v186, v184, v56, v76, v80, v84, v158, v27, a1, v187);
        esp189 = esp178 - 4 + 4;
        ecx190 = v169;
        if (!eax188 || (v184 = v191, v185 = v192, v186 = v193, eax196 = __netf2(v194, v185, v186, v184, v194, v192, v193, v191, v158, v27, a1, v195), esp189 = esp189 - 4 + 4, ecx190 = v169, eax196 == 0)) {
            fun_6e947820(esp189 + 0xd0, v185, v186, v184, 0, 0, 0, 0x7fff0000, v197, v88, v48, v58);
            esp198 = esp189 - 4 + 4;
            __multf3(esp198 + 0xd0, v185, v186, v184, a7, a8, a9, a10, v56, v76, v80, v84, a7, ecx190, v199, v200, v201, v202, v203, v204, v56, v76, v80, v84, v88, v48, v58, v205, v206, v207, v208, v209);
            __multf3(esp198 - 4 + 12 + 4 + 0xd0, a7, a8, a9, v210, v211, v56, v76, v212, a8, a9, a10, v213, v214, v215, v216, v217, v56, v76, v80, v84, v88, v48, v58, v218, v219, v220, a10, a11, a12, a13, v169);
            ebp159 = a13;
            edi160 = a14;
            ebx161 = a16;
            ecx168 = v221;
            goto addr_6e94558d_5;
        } else {
            __subtf3(esp189 + 0xd0, v185, v186, v184, v56, v76, v80, v84, v56, v76, v80, v84);
            v222 = a8;
            v223 = a9;
            v224 = a10;
            eax225 = __netf2(a7, v222, v223, v224, a7, a8, a9, a10, v56, v76, v80, v84);
            esp226 = esp189 - 4 + 4 - 4 + 4;
            ecx227 = ecx190;
            v228 = reinterpret_cast<uint1_t>(!!eax225);
            goto addr_6e946a55_11;
        }
    }
    __subtf3(esp178 + 0xd0, v172, v173, v174, v56, v76, v80, v84, v56, v76, v80, v84);
    v222 = a8;
    v224 = a10;
    v223 = a9;
    eax229 = __netf2(a7, v222, v223, v224, a7, a8, a9, a10, v56, v76, v80, v84);
    esp226 = esp178 - 4 + 4 - 4 + 4;
    ecx227 = ecx179;
    al230 = reinterpret_cast<uint1_t>(!!eax229);
    v228 = al230;
    if (!al230 || (v224 = v84, v222 = v76, v223 = v80, eax231 = __netf2(v56, v222, v223, v224, v56, v76, v80, v84, v56, v76, v80, v84), esp226 = esp226 - 4 + 4, ecx227 = ecx179, !!eax231)) {
        v232 = ecx227;
        __subtf3(esp226 + 0xd0, v222, v223, v224, v233, v234, v235, v236, v233, v234, v235, v236);
        v222 = a8;
        v223 = a9;
        v224 = a10;
        eax237 = __netf2(a7, v222, v223, v224, a7, a8, a9, a10, v233, v234, v235, v236);
        esp226 = esp226 - 4 + 4 - 4 + 4;
        ecx227 = v232;
        if (!eax237 || (v224 = v238, v222 = v239, v223 = v240, eax242 = __netf2(v241, v222, v223, v224, v241, v239, v240, v238, v233, v234, v235, v236), esp226 = esp226 - 4 + 4, ecx227 = v232, !!eax242)) {
            addr_6e946a55_11:
            __subtf3(esp226 + 0xd0, v222, v223, v224, v243, v88, v48, v58, v243, v88, v48, v58);
            v244 = a8;
            v245 = a9;
            v246 = a10;
            eax247 = __netf2(a7, v244, v245, v246, a7, a8, a9, a10, v243, v88, v48, v58);
            esp248 = esp226 - 4 + 4 - 4 + 4;
            ecx168 = ecx227;
            if (!eax247 || (v246 = v58, v244 = v88, v245 = v48, eax250 = __netf2(v249, v244, v245, v246, v249, v88, v48, v58, v243, v88, v48, v58), esp248 = esp248 - 4 + 4, ecx168 = ecx227, !!eax250)) {
                v251 = ecx168;
                __subtf3(esp248 + 0xd0, v244, v245, v246, v252, v36, a13, v253, v252, v36, a13, v253);
                eax254 = __netf2(a7, a8, a9, a10, a7, a8, a9, a10, v252, v36, a13, v253);
                esp248 = esp248 - 4 + 4 - 4 + 4;
                ecx168 = v251;
                if (!eax254 || (v246 = v255, v244 = v36, v245 = a13, eax257 = __netf2(v256, v244, v245, v246, v256, v36, a13, v255, v252, v36, a13, v253), esp248 = esp248 - 4 + 4, ecx168 = v251, !!eax257)) {
                    addr_6e94558d_5:
                    *reinterpret_cast<void***>(ecx168 + 16) = ebp159;
                    *reinterpret_cast<void***>(ecx168 + 20) = edi160;
                    *reinterpret_cast<void***>(ecx168 + 28) = ebx161;
                    *reinterpret_cast<void***>(ecx168) = reinterpret_cast<void**>(__return_address());
                    *reinterpret_cast<void***>(ecx168 + 4) = a1;
                    *reinterpret_cast<void***>(ecx168 + 8) = a2;
                    *reinterpret_cast<void***>(ecx168 + 12) = a3;
                    *reinterpret_cast<void***>(ecx168 + 24) = a5;
                    goto v258;
                } else {
                    v259 = reinterpret_cast<void**>(0);
                }
            } else {
                v259 = reinterpret_cast<void**>(1);
            }
        } else {
            v260 = reinterpret_cast<void**>(0);
            goto addr_6e945ce2_18;
        }
    } else {
        v260 = reinterpret_cast<void**>(1);
        goto addr_6e945ce2_18;
    }
    if (!v228 && (v261 = ecx168, __subtf3(esp248 + 0xd0, v244, v245, v246, v262, v263, v264, v265, v262, v263, v264, v265), eax266 = __netf2(a7, a8, a9, a10, a7, a8, a9, a10, v262, v263, v264, v265), esp248 = esp248 - 4 + 4 - 4 + 4, ecx168 = v261, !eax266)) {
        fun_6e947820(esp248 + 0xd0, a8, a9, a10, 0, 0, 0, reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(v259)) & 0x3fff0000, v267, v88, v48, v58);
        esp268 = esp248 - 4 + 4;
        __subtf3(esp268 + 0xd0, a8, a9, a10, v269, v36, a13, v270, v269, v36, a13, v270);
        v271 = a8;
        v272 = a9;
        v273 = a10;
        eax274 = __netf2(a7, v271, v272, v273, a7, a8, a9, a10, v269, v36, a13, v270);
        esp275 = esp268 - 4 + 4 - 4 + 4;
        ecx276 = ecx168;
        if (!eax274 || (v48 = ecx276, v272 = a13, v273 = v277, v271 = v36, eax279 = __netf2(v278, v271, v272, v273, v278, v36, a13, v277, v269, v36, a13, v270), esp275 = esp275 - 4 + 4, edx280 = reinterpret_cast<void**>(0x3fff0000), ecx276 = v48, !!eax279)) {
            edx280 = reinterpret_cast<void**>(0);
        }
        fun_6e947820(esp275 + 0xd0, v271, v272, v273, 0, 0, 0, edx280, v281, v36, a13, v282);
        esp283 = esp275 - 4 + 4;
        __multf3(esp283 + 0xd0, v271, v272, v273, v56, v76, v80, v84, a7, a8, a9, a10, a7, a8, a9, v284, v285, v286, v287, v288, v56, v76, v80, v84, a8, v48, v58, ecx168, v289, v290, v291, ecx276);
        __multf3(v292, v56, v76, v80, v293, v294, v56, v76, v295, v296, v297, a10, v298, v299, v300, v301, v302, v56, v76, a10, v84, a8, v48, v58, ecx168, a12, a13, a11, a10, a1, v303, v261);
        __addtf3(v304, v293, v294, v56, v261, v305, a10, a1, a9, a10, a11, a12, v306, v307, v56, v76, a10, v84, a8, v48);
        esp308 = esp283 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 4;
        eax309 = reinterpret_cast<void**>(esp308 + 0xa0);
        __multf3(eax309, v293, v294, v56, a5, a6, a7, a8, 0, 0, 0, 0, v310, v311, v56, v76, a10, v84, eax309, v48, v58, ecx168, a12, a13, a11, a10, a1, v312, v261, v259, v313, v314);
        __multf3(esp308 - 4 + 12 + 4 + 0xd0, a5, a6, a7, eax309, v48, v58, v76, a7, v315, a9, a10, v76, a10, v84, eax309, v48, v58, ecx168, a12, a13, a11, a10, a1, v316, v261, v259, a4, a5, a6, a7, v317);
        __multf3(a4, eax309, v48, v58, a1, v318, v261, v259, eax309, v48, v58, a10, eax309, v48, v58, ecx168, a12, a13, a11, a10, a1, v319, v261, v259, a4, a5, a6, a7, v320, ebx50, esi51, edi52);
        __subtf3(a3, a1, v318, v261, a19, a20, a21, a22, a18, a19, a20, a21);
        __multf3(v321, a1, v318, v261, a14, a15, a16, a17, 0, 0, 0, 0, ecx168, a12, a13, a11, a10, a1, v322, v261, v259, a4, a5, a6, a7, v323, ebx50, esi51, edi52, ebp67, __return_address(), a1);
        ebp159 = a13;
        edi160 = a14;
        ebx161 = a16;
        a5 = a15;
        ecx168 = a4;
        goto addr_6e94558d_5;
    }
    addr_6e945ce2_18:
    v313 = ecx227;
    __subtf3(esp226 + 0xd0, v222, v223, v224, v324, v88, v48, v58, v324, v88, v48, v58);
    v222 = a8;
    v223 = a9;
    v224 = a10;
    eax325 = __netf2(a7, v222, v223, v224, a7, a8, a9, a10, v324, v88, v48, v58);
    esp226 = esp226 - 4 + 4 - 4 + 4;
    ecx227 = v313;
    if (!eax325) {
        __subtf3(esp226 + 0xd0, v222, v223, v224, v326, v36, a13, v327, v326, v36, a13, v327);
        v244 = a8;
        v245 = a9;
        v246 = a10;
        eax328 = __netf2(a7, v244, v245, v246, a7, a8, a9, a10, v326, v36, a13, v327);
        esp248 = esp226 - 4 + 4 - 4 + 4;
        ecx168 = v313;
        if (!eax328) {
            fun_6e947820(esp248 + 0xd0, v244, v245, v246, 0, 0, 0, reinterpret_cast<uint32_t>(-reinterpret_cast<unsigned char>(v260)) & 0x3fff0000, v56, v76, v80, v84);
            esp329 = esp248 - 4 + 4;
            __subtf3(esp329 + 0xd0, v244, v245, v246, v330, v331, v332, v333, v330, v331, v332, v333);
            v334 = a8;
            v335 = a9;
            v336 = a10;
            eax337 = __netf2(a7, v334, v335, v336, a7, a8, a9, a10, v330, v331, v332, v333);
            esp338 = esp329 - 4 + 4 - 4 + 4;
            ecx339 = ecx168;
            if (!eax337 || (v334 = v340, v335 = v341, v336 = v342, eax344 = __netf2(v343, v334, v335, v336, v343, v340, v341, v342, v330, v331, v332, v333), esp338 = esp338 - 4 + 4, edx345 = reinterpret_cast<void**>(0x3fff0000), ecx339 = ecx168, !!eax344)) {
                edx345 = reinterpret_cast<void**>(0);
            }
            fun_6e947820(esp338 + 0xd0, v334, v335, v336, 0, 0, 0, edx345, v346, v347, v348, v349);
            esp350 = esp338 - 4 + 4;
            __multf3(esp350 + 0xd0, v334, v335, v336, a7, a8, a9, a10, v351, v88, v48, v58, v36, a13, v352, v353, v354, v355, v356, v357, a7, a8, a9, a10, v88, v48, v58, ecx168, v358, v359, v360, v361);
            __multf3(v362, a7, a8, a9, a7, a8, a9, a10, v363, v364, v365, a9, v366, v367, v368, a12, a13, a11, a10, a9, a10, v88, v48, v58, ecx168, v369, v370, v371, v372, a1, v373, ecx339);
            __addtf3(v374, a7, a8, a9, v88, a10, a10, a9, a9, a10, a11, a12, a12, a13, a11, a10, a9, a10, v88, v48);
            esp375 = esp350 - 4 + 12 + 4 - 4 + 12 + 4 - 4 + 4;
            eax376 = reinterpret_cast<void**>(esp375 + 0xa0);
            __multf3(eax376, a7, a8, a9, 0, 0, 0, 0x7fff0000, a5, a6, a7, a8, a12, a13, a11, eax376, a9, a10, v88, v48, v58, ecx168, v377, v378, v379, v380, a1, v381, ecx339, v260, v313, v382);
            __multf3(esp375 - 4 + 12 + 4 + 0xd0, 0, 0, 0, a7, a8, a9, a10, v383, v384, ecx339, v260, eax376, a9, a10, v88, v48, v58, ecx168, v385, v386, v387, v388, a1, v389, ecx339, v260, a4, a5, a6, a7, v390);
            __multf3(a4, a7, a8, a9, a1, v391, ecx339, v260, v58, v88, v48, v392, v88, v48, v58, ecx168, v393, v394, v395, v396, a1, v397, ecx339, v260, a4, a5, a6, a7, v398, ebx50, esi51, edi52);
            __subtf3(a3, a1, v391, ecx339, a19, a20, a21, a22, a18, a19, a20, a21);
            __multf3(v399, a1, v391, ecx339, 0, 0, 0, 0x7fff0000, a14, a15, a16, a17, ecx168, v400, v401, v402, v403, a1, v404, ecx339, v260, a4, a5, a6, a7, v405, ebx50, esi51, edi52, ebp67, __return_address(), a1);
            ebp159 = a13;
            edi160 = a14;
            ebx161 = a16;
            a5 = a15;
            ecx168 = a7;
            goto addr_6e94558d_5;
        }
    }
}

uint32_t __bswapsi2(uint32_t a1) {
    return a1 >> 24 | a1 >> 8 & 0xff00 | a1 << 8 & 0xff0000 | a1 << 24;
}

int32_t __fixunssfsi() {
    int32_t v1;
    int32_t v2;

    __asm__("fld dword [esp+0xc]");
    __asm__("fld dword [0x6e9572b8]");
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) >= 8) {
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fsubrp st1, st0");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v1 - 0x80000000;
    } else {
        __asm__("fstp st1");
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v2;
    }
}

int32_t __floatdidf(int32_t a1) {
    __asm__("fild dword [esp+0x14]");
    __asm__("fmul dword [0x6e9572e0]");
    __asm__("fild qword [esp]");
    __asm__("faddp st1, st0");
    return a1;
}

void fun_6e94716c() {
    uint32_t eax1;
    int32_t eax2;
    uint32_t ecx3;
    uint32_t ebp4;
    uint32_t ebx5;
    uint32_t esi6;
    int32_t v7;
    int32_t edi8;
    uint1_t cf9;
    uint32_t esi10;
    int32_t edx11;
    int32_t eax12;
    uint32_t ebx13;
    uint32_t ecx14;
    uint32_t eax15;
    uint32_t ecx16;
    uint32_t ecx17;
    uint32_t v18;
    uint32_t ecx19;
    uint32_t ecx20;
    uint32_t eax21;
    uint32_t esi22;
    uint32_t ecx23;
    int32_t v24;

    eax1 = reinterpret_cast<uint32_t>(-eax2);
    ecx3 = ebp4;
    ebx5 = esi6;
    v7 = -1;
    if (edi8 < 0) {
        cf9 = reinterpret_cast<uint1_t>(!!ecx3);
        ecx3 = -ecx3;
        v7 = 0;
        ebx5 = -(ebx5 + cf9);
    }
    esi10 = -(edx11 + reinterpret_cast<uint1_t>(!!eax12));
    if (ebx5) {
        if (ebx5 > esi10) 
            goto addr_6e947116_6;
        __asm__("bsr ebx, edx");
        ebx13 = eax1 ^ 31;
        if (!ebx13) 
            goto addr_6e94715b_8;
    } else {
        if (ecx3 <= esi10) {
            if (!ecx3) {
            }
            goto addr_6e94711a_13;
        } else {
            goto addr_6e94711a_13;
        }
    }
    ecx14 = ebx13;
    eax15 = 32 - ebx13;
    ecx16 = eax15;
    ecx17 = ebx13;
    v18 = ecx3 >> *reinterpret_cast<signed char*>(&ecx16) | ebx5 << *reinterpret_cast<unsigned char*>(&ecx14);
    ecx19 = ebx13;
    ecx20 = eax15;
    eax21 = eax1 >> *reinterpret_cast<signed char*>(&ecx20) | esi10 << *reinterpret_cast<unsigned char*>(&ecx19);
    esi22 = eax21 % v18;
    if (esi22 < __intrinsic() || (ecx23 = ebx13, eax1 << *reinterpret_cast<unsigned char*>(&ecx23) < eax21 / v18 * (ecx3 << *reinterpret_cast<unsigned char*>(&ecx17))) && esi22 == __intrinsic()) {
    }
    addr_6e94711a_13:
    if (v7) {
    }
    goto v24;
    addr_6e94715b_8:
    if (ecx3 <= eax1 || ebx5 < esi10) {
        goto addr_6e94711a_13;
    } else {
        addr_6e947116_6:
        goto addr_6e94711a_13;
    }
}

void fun_6e947199() {
}

void fun_6e94720a() {
}

void fun_6e94727a(uint32_t ecx, uint32_t a2) {
    uint32_t edx3;
    uint32_t ebp4;
    uint32_t v5;
    uint32_t edi6;
    uint32_t edi7;
    uint32_t ecx8;
    uint32_t ecx9;
    uint32_t v10;
    uint32_t edx11;
    uint32_t ecx12;
    uint32_t ecx13;
    uint32_t ecx14;
    uint32_t ecx15;
    uint32_t eax16;
    uint32_t eax17;
    uint32_t esi18;
    uint32_t ebx19;
    uint32_t eax20;
    uint32_t eax21;
    uint32_t edx22;
    uint32_t ebp23;
    int32_t v24;

    if (edx3 <= ebp4) {
        __asm__("bsr edi, edx");
        v5 = edi6 ^ 31;
        if (v5) {
            edi7 = 32 - v5;
            ecx8 = v5;
            ecx9 = edi7;
            v10 = a2 >> *reinterpret_cast<signed char*>(&ecx9) | edx11 << *reinterpret_cast<unsigned char*>(&ecx8);
            ecx12 = v5;
            ecx13 = v5;
            ecx14 = edi7;
            ecx15 = v5;
            eax16 = eax17 >> *reinterpret_cast<signed char*>(&ecx14) | esi18 << *reinterpret_cast<unsigned char*>(&ecx13);
            ebx19 = eax16 % v10;
            if (ebx19 < __intrinsic() || eax20 << *reinterpret_cast<unsigned char*>(&ecx15) < eax16 / v10 * (a2 << *reinterpret_cast<unsigned char*>(&ecx12)) && ebx19 == __intrinsic()) {
            }
        } else {
            if (ecx <= eax21 || edx22 < ebp23) {
            }
        }
    }
    if (__return_address()) {
    }
    goto v24;
}

void fun_6e94738c() {
}

uint32_t __udivdi3(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    uint32_t ebx5;
    uint32_t ebx6;
    uint32_t ecx7;
    uint32_t edi8;
    uint32_t ecx9;
    uint32_t ecx10;
    uint32_t ebp11;
    uint32_t ecx12;
    uint32_t ecx13;
    uint32_t eax14;
    uint32_t eax15;
    uint32_t esi16;
    uint32_t ecx17;
    uint32_t eax18;
    uint32_t ebx19;

    if (a4) {
        if (a4 > a2) {
            return 0;
        } else {
            __asm__("bsr ebx, esi");
            ebx5 = ebx6 ^ 31;
            if (ebx5) {
                ecx7 = ebx5;
                edi8 = 32 - ebx5;
                ecx9 = edi8;
                ecx10 = ebx5;
                ebp11 = a3 >> *reinterpret_cast<signed char*>(&ecx9) | a4 << *reinterpret_cast<unsigned char*>(&ecx7);
                ecx12 = ebx5;
                ecx13 = edi8;
                eax14 = a1 >> *reinterpret_cast<signed char*>(&ecx13) | a2 << *reinterpret_cast<unsigned char*>(&ecx12);
                eax15 = eax14 / ebp11;
                esi16 = eax14 % ebp11;
                if (esi16 < __intrinsic() || (ecx17 = ebx5, a1 << *reinterpret_cast<unsigned char*>(&ecx17) < eax15 * (a3 << *reinterpret_cast<unsigned char*>(&ecx10))) && esi16 == __intrinsic()) {
                    return eax15 + 0xffffffff;
                } else {
                    eax18 = eax15;
                }
            } else {
                if (a3 <= a1 || a4 < a2) {
                    eax18 = 1;
                } else {
                    eax18 = 0;
                }
            }
        }
    } else {
        if (a3 > a2) {
            return a1 / a3;
        } else {
            ebx19 = a3;
            if (!a3) {
                ebx19 = 1 / a3;
            }
            eax18 = a1 / ebx19;
        }
    }
    return eax18;
}

void fun_6e9474ac() {
}

void fun_6e94754d(int32_t ecx) {
    int32_t ebx2;
    int32_t v3;

    if (!ebx2) {
    }
    goto v3;
}

void fun_6e94756d(int32_t ecx) {
    int32_t v2;

    goto v2;
}

void fun_6e9475fd(int32_t a1, int32_t a2) {
    int32_t esi3;
    int32_t edx4;
    int32_t v5;

    if (esi3 == edx4) {
    }
    goto v5;
}

int32_t fun_6e947620() {
    return 0;
}

struct s165 {
    uint32_t f0;
    uint32_t f4;
};

struct s166 {
    uint32_t f0;
    uint32_t f4;
};

struct s167 {
    uint32_t f0;
    int32_t f4;
};

void fun_6e94768f(uint32_t ecx, uint32_t a2, uint32_t a3, int32_t a4) {
    uint32_t v5;
    uint32_t edx6;
    uint32_t ebp7;
    uint32_t edi8;
    uint32_t edi9;
    uint32_t ecx10;
    uint32_t ebp11;
    uint32_t ecx12;
    uint32_t ecx13;
    uint32_t v14;
    uint32_t eax15;
    uint32_t ecx16;
    uint32_t ecx17;
    uint32_t v18;
    uint32_t ebx19;
    uint32_t edx20;
    uint32_t ecx21;
    uint32_t v22;
    uint32_t esi23;
    uint32_t eax24;
    uint32_t esi25;
    uint32_t v26;
    uint32_t ebx27;
    int32_t v28;
    uint32_t ecx29;
    uint32_t eax30;
    uint32_t ecx31;
    uint32_t ecx32;
    struct s165* v33;
    int32_t v34;
    uint32_t ebx35;
    uint32_t edx36;
    uint32_t ebp37;
    uint32_t ebx38;
    int32_t ebx39;
    int32_t v40;
    struct s166* v41;
    int32_t v42;
    int32_t v43;
    struct s167* v44;
    int32_t ebp45;
    int32_t v46;

    v5 = reinterpret_cast<uint32_t>(__return_address());
    if (edx6 <= ebp7) {
        __asm__("bsr edi, edx");
        edi8 = edi9 ^ 31;
        if (edi8) {
            ecx10 = edi8;
            ebp11 = 32 - edi8;
            ecx12 = ebp11;
            ecx13 = edi8;
            v14 = eax15 << *reinterpret_cast<unsigned char*>(&ecx13);
            ecx16 = edi8;
            ecx17 = ebp11;
            v18 = ebx19 >> *reinterpret_cast<signed char*>(&ecx12) | edx20 << *reinterpret_cast<unsigned char*>(&ecx10);
            ecx21 = edi8;
            v22 = (a3 >> *reinterpret_cast<signed char*>(&ecx17) | esi23 << *reinterpret_cast<unsigned char*>(&ecx16)) % v18;
            eax24 = (a3 >> *reinterpret_cast<signed char*>(&ecx17) | esi23 << *reinterpret_cast<unsigned char*>(&ecx16)) / v18 * v14;
            esi25 = eax24;
            v26 = a3 << *reinterpret_cast<unsigned char*>(&ecx21);
            ebx27 = __intrinsic();
            if (v22 < __intrinsic() || eax24 > v26 && __intrinsic() == v22) {
                esi25 = eax24 - v14;
                ebx27 = __intrinsic() - (v18 + reinterpret_cast<uint1_t>(__intrinsic() < v18 + reinterpret_cast<uint1_t>(eax24 < v14)));
            }
            if (v28) {
                ecx29 = edi8;
                eax30 = v22 - (ebx27 + reinterpret_cast<uint1_t>(v22 < ebx27 + reinterpret_cast<uint1_t>(v26 < esi25)));
                ecx31 = ebp11;
                ecx32 = edi8;
                v33->f0 = v26 - esi25 >> *reinterpret_cast<signed char*>(&ecx29) | eax30 << *reinterpret_cast<unsigned char*>(&ecx31);
                v33->f4 = eax30 >> *reinterpret_cast<signed char*>(&ecx32);
            }
            goto v34;
        } else {
            if (v5 >= ebx35 || a2 > edx36) {
                a2 = ebp37 - (a4 + reinterpret_cast<uint1_t>(ebp37 < a4 + reinterpret_cast<uint1_t>(ecx < ebx38)));
                v5 = ecx - ebx39;
            }
            if (v40) {
                v41->f0 = v5;
                v41->f4 = a2;
                goto v42;
            }
        }
    } else {
        if (v43) {
            v44->f0 = ecx;
            v44->f4 = ebp45;
        }
    }
    goto v46;
}

void fun_6e9477fa() {
}

void fun_6e947c39() {
}

void fun_6e947d19() {
}

void fun_6e947d99() {
}

void fun_6e9481bd() {
}

void fun_6e94834c() {
}

void fun_6e94882c() {
}

void fun_6e9499cc() {
}

void fun_6e949b7c() {
}

void fun_6e949c7d() {
}

void fun_6e949cbc() {
}

void fun_6e949d9c() {
}

void fun_6e949f1a() {
}

void fun_6e94a1fc() {
}

void fun_6e94a2a9() {
}

void fun_6e94a3ac() {
}

void fun_6e94a3dd() {
}

void fun_6e94a48d() {
}

void fun_6e94a6fc() {
}

void fun_6e94a74c() {
}

void fun_6e94aa1d() {
}

void fun_6e94aa99() {
}

int32_t __gttf2(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5, uint32_t a6, uint32_t a7, uint32_t a8) {
    uint32_t edi9;
    uint32_t eax10;
    uint32_t ecx11;
    uint32_t eax12;
    uint32_t esi13;
    uint32_t v14;
    uint32_t edx15;
    uint32_t v16;
    uint32_t ebx17;
    uint32_t eax18;
    uint32_t edi19;
    int32_t ebx20;
    int32_t eax21;
    int1_t cf22;

    edi9 = a8;
    eax10 = a4;
    ecx11 = eax10;
    eax12 = eax10 >> 24;
    esi13 = *reinterpret_cast<uint16_t*>(&edi9);
    v14 = *reinterpret_cast<unsigned char*>(&eax12) >> 7;
    edx15 = eax10 >> 16 & 0x7fff;
    v16 = *reinterpret_cast<uint16_t*>(&eax10);
    ebx17 = edi9 >> 24;
    eax18 = edi9 >> 16 & 0x7fff;
    edi19 = *reinterpret_cast<unsigned char*>(&ebx17) >> 7;
    if (edx15 != 0x7fff || !(a2 | a1 | a3 | v16)) {
        if (eax18 != 0x7fff || !(a6 | a5 | a7 | esi13)) {
            ebx20 = 0;
            if (!edx15) {
                ebx20 = 0;
                *reinterpret_cast<unsigned char*>(&ebx20) = reinterpret_cast<uint1_t>((a2 | a1 | a3 | v16) == 0);
            }
            if (eax18) 
                goto addr_6e94abd5_6;
            if (!(a6 | a5 | a7 | esi13)) 
                goto addr_6e94ac60_8;
        } else {
            if (edx15 == 0x7fff) {
                if (!(v16 | (a2 | a1 | a3))) 
                    goto addr_6e94ac8f_11;
                goto addr_6e94ac12_13;
            } else {
                addr_6e94ac50_14:
                if (*reinterpret_cast<int16_t*>(&edi9) >= reinterpret_cast<int16_t>(0)) {
                    addr_6e94ac17_15:
                    fun_6e9478b0(1);
                    goto addr_6e94ac23_16;
                } else {
                    goto addr_6e94ac23_16;
                }
            }
        }
    } else {
        addr_6e94ac12_13:
        if (*reinterpret_cast<int16_t*>(&ecx11) < 0) 
            goto addr_6e94ac88_18; else 
            goto addr_6e94ac17_15;
    }
    addr_6e94abd5_6:
    if (ebx20) {
        addr_6e94ac72_19:
        eax21 = -1;
        if (!edi19) {
            addr_6e94ac6a_20:
            return eax21;
        } else {
            addr_6e94ac7b_21:
            return 1;
        }
    } else {
        if (v14 == edi19) {
            if (reinterpret_cast<int32_t>(edx15) > reinterpret_cast<int32_t>(eax18)) 
                goto addr_6e94ad00_24;
            if (reinterpret_cast<int32_t>(edx15) < reinterpret_cast<int32_t>(eax18)) 
                goto addr_6e94acc2_26;
            cf22 = v16 < esi13;
            if (v16 > esi13) 
                goto addr_6e94ad00_24;
            if (v16 != esi13) 
                goto addr_6e94acba_29;
            cf22 = a3 < a7;
            if (a3 > a7) {
                addr_6e94ad00_24:
                if (!v14) {
                    goto addr_6e94ac7b_21;
                }
            } else {
                if (a3 != a7) 
                    goto addr_6e94acba_29;
                cf22 = a2 < a6;
                if (a2 > a6) 
                    goto addr_6e94ad00_24; else 
                    goto addr_6e94ace5_34;
            }
        } else {
            if (!v14) 
                goto addr_6e94ac7b_21;
        }
    }
    addr_6e94abf1_36:
    return -1;
    addr_6e94ace5_34:
    if (a2 != a6) {
        addr_6e94acba_29:
        if (!cf22) {
            addr_6e94ac68_37:
            eax21 = 0;
            goto addr_6e94ac6a_20;
        } else {
            addr_6e94acc2_26:
            if (v14) 
                goto addr_6e94ac7b_21;
        }
    } else {
        if (a1 <= a5) {
            eax21 = 0;
            if (a1 >= a5) 
                goto addr_6e94ac6a_20;
            goto addr_6e94acc2_26;
        }
    }
    goto addr_6e94abf1_36;
    addr_6e94ac60_8:
    if (ebx20) 
        goto addr_6e94ac68_37;
    if (ebx20) 
        goto addr_6e94ac72_19;
    eax21 = 1;
    if (!v14) 
        goto addr_6e94ac6a_20;
    goto addr_6e94abf1_36;
    addr_6e94ac88_18:
    if (eax18 != 0x7fff) {
        addr_6e94ac23_16:
        return -2;
    } else {
        addr_6e94ac8f_11:
        eax21 = -2;
        if (!(a6 | a5 | a7 | esi13)) 
            goto addr_6e94ac6a_20;
    }
    goto addr_6e94ac50_14;
}

void fun_6e94ac5a() {
}

void fun_6e94ae2d() {
}

void fun_6e94ae8c() {
}

void fun_6e94aeea() {
}

void fun_6e94b09c() {
}

void fun_6e94b18d() {
}

void fun_6e94b24c() {
}

void fun_6e94b45c() {
}

void fun_6e94b48d() {
}

void fun_6e94b76d() {
}

void fun_6e94b99d() {
}

void fun_6e94b9cc() {
}

void fun_6e94badc() {
}

void fun_6e94bafc() {
}

void fun_6e94bc6a() {
}

void fun_6e94bd5d() {
}

struct s168 {
    uint32_t f0;
    int32_t f4;
    int32_t f8;
};

struct s169 {
    signed char[12] pad12;
    int32_t f12;
};

void fun_6e94bf69(uint32_t ecx) {
    int32_t v2;
    uint32_t ebp3;
    uint32_t ebx4;
    uint32_t esi5;
    uint32_t edx6;
    int32_t edi7;
    uint16_t di8;
    uint32_t eax9;
    uint32_t esi10;
    uint16_t v11;
    int32_t v12;
    uint32_t esi13;
    uint32_t ecx14;
    struct s168* v15;
    struct s169* v16;
    int32_t v17;

    v2 = reinterpret_cast<int32_t>(__return_address());
    ebp3 = ebx4 | esi5 | edx6 | ecx;
    if (ebp3) {
        *reinterpret_cast<uint16_t*>(&edi7) = reinterpret_cast<uint16_t>(di8 | 0x8000);
        ebp3 = esi5;
        eax9 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v2)) ^ 1;
    } else {
        edi7 = 0;
        eax9 = static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&v2)) ^ 1;
    }
    esi10 = v11;
    *reinterpret_cast<uint16_t*>(&v12) = *reinterpret_cast<uint16_t*>(&edi7);
    *reinterpret_cast<uint16_t*>(&esi10) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi10) & 0x8000);
    esi13 = esi10 | 0x7fff;
    *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v12) + 2) = *reinterpret_cast<int16_t*>(&esi13);
    ecx14 = 0x7f | eax9 << 7;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v12) + 3) = *reinterpret_cast<signed char*>(&ecx14);
    v15->f0 = ebp3;
    v15->f4 = 0;
    v15->f8 = 0;
    v16->f12 = v12;
    goto v17;
}

void fun_6e94c059() {
    unsigned char* esp1;
    int32_t ebp2;
    int32_t ebp3;
    uint32_t esi4;
    int32_t v5;
    unsigned char ecx6;
    uint32_t edi7;
    uint32_t v8;
    uint32_t v9;
    uint32_t v10;
    uint32_t v11;
    uint32_t v12;
    uint32_t v13;
    uint32_t v14;
    unsigned char v15;
    int32_t ecx16;
    int32_t edx17;
    uint32_t ebx18;
    int32_t edx19;
    unsigned char v20;
    uint32_t ebp21;
    int32_t ecx22;
    uint32_t* ecx23;
    uint32_t* ebx24;
    uint32_t v25;
    uint32_t v26;
    uint32_t ecx27;
    int32_t ecx28;
    int32_t v29;
    int32_t ebx30;
    void* ebx31;
    void* v32;
    uint32_t ecx33;
    void* ecx34;
    void* esi35;
    uint32_t edx36;
    uint32_t edx37;
    uint32_t edx38;
    uint32_t ecx39;
    int1_t below_or_equal40;
    uint32_t ecx41;
    int1_t below_or_equal42;
    void* edx43;
    void* esi44;
    uint32_t ecx45;
    uint32_t ebx46;
    unsigned char ecx47;
    void* edx48;
    void* edi49;

    esp1 = reinterpret_cast<unsigned char*>(__zero_stack_offset());
    ebp2 = ebp3 - 0x3fff;
    esi4 = reinterpret_cast<uint32_t>(v5 * 8);
    ecx6 = reinterpret_cast<unsigned char>(ebp2 + 0x3fff);
    edi7 = v8;
    v9 = esi4;
    v10 = v11;
    v12 = v13;
    v14 = edi7;
    v15 = ecx6;
    if (reinterpret_cast<uint1_t>(reinterpret_cast<signed char>(ecx6) < reinterpret_cast<signed char>(0)) | reinterpret_cast<uint1_t>(ecx6 == 0)) {
        ecx16 = 0xffffc002 - ebp2;
        if (ecx16 > 0x74) {
            if (!(v13 | edi7 | v11 | esi4)) 
                goto 0x6e94c12f;
            goto 0x6e94c12f;
        } else {
            edx17 = ecx16 + 31;
            if (ecx16 >= 0) {
                edx17 = ecx16;
            }
            ebx18 = reinterpret_cast<uint32_t>(ecx16 >> 31) >> 27;
            edx19 = edx17 >> 5;
            v20 = reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(reinterpret_cast<unsigned char>(ecx16 + ebx18) & 31) - ebx18);
            if (reinterpret_cast<uint1_t>(edx19 < 0) | reinterpret_cast<uint1_t>(edx19 == 0)) {
                ebp21 = 0;
                ecx22 = 0;
            } else {
                ecx23 = reinterpret_cast<uint32_t*>(esp1 + 52);
                ebp21 = esi4;
                ebx24 = reinterpret_cast<uint32_t*>(esp1 + edx19 * 4 + 48);
                if (ecx23 != ebx24) {
                    do {
                        ++ecx23;
                        ebp21 = ebp21 | v25;
                    } while (ecx23 != ebx24);
                }
                ecx22 = edx19;
            }
            if (v20) {
                v26 = 32 - v20;
                ecx27 = *reinterpret_cast<unsigned char*>(&v26);
                ebp21 = ebp21 | *reinterpret_cast<uint32_t*>(esp1 + ecx22 * 4 + 48) << *reinterpret_cast<unsigned char*>(&ecx27);
                ecx28 = 3 - edx19;
                v29 = ecx28;
                if (!ecx28) {
                    ebx30 = 1;
                } else {
                    ebx31 = reinterpret_cast<void*>(esp1 + 48);
                    v32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx31) + ecx28 * 4);
                    do {
                        ebx31 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ebx31) + 4);
                    } while (ebx31 != v32);
                    edi7 = v14;
                    ebx30 = 4 - edx19;
                }
                ecx33 = v20;
                *reinterpret_cast<uint32_t*>(esp1 + v29 * 4 + 48) = edi7 >> *reinterpret_cast<signed char*>(&ecx33);
            } else {
                ecx34 = reinterpret_cast<void*>(esp1 + 48);
                esi35 = reinterpret_cast<void*>(esp1 + (3 - edx19) * 4 + 52);
                do {
                    ecx34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx34) + 4);
                } while (ecx34 != esi35);
                ebx30 = 4 - edx19;
            }
            while (ebx30 <= 3) {
                *reinterpret_cast<int32_t*>(esp1 + ebx30 * 4 + 48) = 0;
                ++ebx30;
            }
            edx36 = 0;
            *reinterpret_cast<unsigned char*>(&edx36) = reinterpret_cast<uint1_t>(!!ebp21);
            edx37 = edx36 | v9;
            if (!(*reinterpret_cast<unsigned char*>(&edx37) & 7) || (edx37 & 15) == 4) {
                edx38 = v14;
            } else {
                ecx39 = 0;
                *reinterpret_cast<unsigned char*>(&ecx39) = reinterpret_cast<uint1_t>(edx37 + 4 <= 3);
                below_or_equal40 = ecx39 <= v10 + ecx39;
                ecx41 = reinterpret_cast<uint1_t>(!below_or_equal40);
                below_or_equal42 = ecx41 <= v12 + ecx41;
                edx38 = static_cast<unsigned char>(reinterpret_cast<uint1_t>(!below_or_equal42)) + v14;
            }
            if (edx38 & 0x80000) {
                goto 0x6e94c12f;
            } else {
                edx43 = reinterpret_cast<void*>(esp1 + 48);
                esi44 = reinterpret_cast<void*>(esp1 + 60);
                do {
                    edx43 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx43) + 4);
                } while (edx43 != esi44);
                goto 0x6e94c12f;
            }
        }
    } else {
        if (esi4 & 7 && (esi4 & 15) != 4) {
            ecx45 = 0;
            *reinterpret_cast<unsigned char*>(&ecx45) = reinterpret_cast<uint1_t>(esi4 + 4 <= 3);
            ebx46 = reinterpret_cast<uint1_t>(ecx45 > v11 + ecx45);
            edi7 = edi7 + static_cast<unsigned char>(reinterpret_cast<uint1_t>(ebx46 > v13 + ebx46));
        }
        if (edi7 & 0x100000) {
            v15 = reinterpret_cast<unsigned char>(ebp2 + 0x4000);
        }
        ecx47 = v15;
        edx48 = reinterpret_cast<void*>(esp1 + 48);
        edi49 = reinterpret_cast<void*>(esp1 + 60);
        do {
            edx48 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx48) + 4);
        } while (edx48 != edi49);
        if (reinterpret_cast<signed char>(ecx47) > reinterpret_cast<signed char>(0x7ffe)) {
            goto 0x6e94c12f;
        } else {
            goto 0x6e94c12f;
        }
    }
}

void fun_6e94c11a() {
}

void fun_6e94c379() {
    void* esp1;
    int32_t esi2;
    int32_t esi3;
    uint32_t edx4;
    uint32_t edx5;
    uint32_t ebx6;
    uint32_t eax7;
    int32_t ebx8;
    uint32_t edx9;
    int32_t v10;
    uint32_t ebp11;
    int32_t ebx12;
    void* eax13;
    void* ecx14;
    uint32_t v15;
    uint32_t* edi16;
    uint32_t* eax17;
    uint32_t ecx18;
    uint32_t ecx19;
    int32_t v20;
    uint32_t ecx21;
    int32_t* edi22;

    esp1 = __zero_stack_offset();
    esi2 = esi3;
    __asm__("bsr edx, edx");
    edx4 = (edx5 ^ 31) + 32 - 12;
    ebx6 = (edx5 ^ 31) + 32 + 19;
    if (reinterpret_cast<int32_t>(edx4) >= reinterpret_cast<int32_t>(0)) {
        ebx6 = edx4;
    }
    eax7 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx4) >> 31) >> 27;
    ebx8 = reinterpret_cast<int32_t>(ebx6) >> 5;
    edx9 = (edx4 + eax7 & 31) - eax7;
    v10 = ebx8;
    ebp11 = edx9;
    if (!edx9) {
        if (ebx8 > 3) {
            ebx12 = 3;
            goto addr_6e94c03a_8;
        } else {
            eax13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + 44);
            ecx14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + ebx8 * 4 + 28);
            do {
                eax13 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax13) - 4);
            } while (eax13 != ecx14);
            ebx12 = ebx8 - 1;
        }
    } else {
        if (ebx8 > 2) {
            ebx12 = 2;
            v10 = 3;
        } else {
            v15 = 32 - edx9;
            edi16 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp1) + 32);
            eax17 = edi16 + (3 - ebx8);
            do {
                ecx18 = *reinterpret_cast<unsigned char*>(&v15);
                ecx19 = ebp11;
                eax17[ebx8] = *(eax17 - 1) >> *reinterpret_cast<signed char*>(&ecx18) | *eax17 << *reinterpret_cast<unsigned char*>(&ecx19);
                --eax17;
            } while (eax17 != edi16);
            esi2 = v20;
            ebx12 = ebx8 - 1;
        }
        ecx21 = ebp11;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) + v10 * 4 + 32) = esi2 << *reinterpret_cast<unsigned char*>(&ecx21);
    }
    if (ebx12 < 0) {
        addr_6e94c04a_19:
        goto 0x6e94c071;
    } else {
        addr_6e94c03a_8:
        edi22 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) + 32);
    }
    do {
        edi22[ebx12] = 0;
        --ebx12;
    } while (ebx12 >= 0);
    goto addr_6e94c04a_19;
}

void fun_6e94c3af() {
    __asm__("bsr eax, esi");
    goto 0x6e94bfb7;
}

void fun_6e94c46a() {
}

void fun_6e94c959() {
}

void fun_6e94caac() {
}

void fun_6e94cd8d() {
}

void fun_6e94ce9c() {
}

void fun_6e94cf2c() {
}

void fun_6e94d1fc() {
}

void fun_6e94d289() {
}

void fun_6e94dd1c() {
}

int32_t __unordtf2(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5, uint32_t a6, uint32_t a7, uint32_t a8) {
    uint32_t eax9;
    uint32_t edx10;
    uint32_t edx11;
    uint32_t eax12;
    int32_t eax13;

    eax9 = a4;
    edx10 = a8;
    edx11 = edx10 >> 16;
    eax12 = eax9 >> 16;
    if ((*reinterpret_cast<uint16_t*>(&eax12) & 0x7fff) != 0x7fff || !(a1 | a2 | a3 | static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax9)))) {
        if ((*reinterpret_cast<uint16_t*>(&edx11) & 0x7fff) != 0x7fff || !(a6 | a5 | a7 | static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&edx10)))) {
            eax13 = 0;
        } else {
            eax13 = 1;
        }
        return eax13;
    } else {
        return 1;
    }
}

uint32_t __fixtfsi(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    void*** esp5;
    uint32_t eax6;
    uint32_t edi7;
    uint32_t ecx8;
    uint32_t eax9;
    unsigned char al10;
    uint32_t v11;
    uint32_t ebp12;
    uint32_t eax13;
    void** edx14;
    uint32_t ebp15;
    uint32_t ecx16;
    uint32_t ebx17;
    uint32_t edi18;
    uint32_t esi19;
    uint32_t edx20;
    uint32_t ebp21;
    uint32_t ecx22;
    uint32_t edx23;
    int32_t ebx24;
    uint32_t ecx25;
    uint32_t ecx26;
    void* edx27;
    void* edi28;
    uint32_t ecx29;

    esp5 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60);
    eax6 = a4;
    edi7 = *reinterpret_cast<uint16_t*>(&eax6);
    ecx8 = eax6 >> 16 & 0x7fff;
    eax9 = eax6 >> 24;
    al10 = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(&eax9) >> 7);
    v11 = a1;
    if (reinterpret_cast<int32_t>(ecx8) > reinterpret_cast<int32_t>(0x3ffe)) {
        if (reinterpret_cast<int32_t>(ecx8) > reinterpret_cast<int32_t>(0x401d)) {
            ebp12 = al10 + 0x7fffffff;
            if (ecx8 != 0x401e || (!al10 || edi7 << 15 | a3 >> 17)) {
                eax13 = ebp12;
                edx14 = reinterpret_cast<void**>(1);
            } else {
                eax13 = ebp12;
                if (a1 | a2 | a3 << 15) {
                    addr_6e94e57d_6:
                    edx14 = reinterpret_cast<void**>(32);
                } else {
                    goto addr_6e94e592_8;
                }
            }
        } else {
            ebp15 = 0x406f - ecx8;
            ecx16 = 1;
            ebx17 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebp15) >> 5);
            edi18 = edi7 | 0x10000;
            esi19 = a1;
            if (reinterpret_cast<int32_t>(ebx17) > reinterpret_cast<int32_t>(1)) {
                do {
                    ++ecx16;
                    esi19 = esi19 | *reinterpret_cast<uint32_t*>(esp5 + ecx16 * 4 + 32);
                } while (reinterpret_cast<int32_t>(ebx17) > reinterpret_cast<int32_t>(ecx16));
            }
            edx20 = 1;
            if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(reinterpret_cast<int32_t>(ebx17) < reinterpret_cast<int32_t>(0)) | reinterpret_cast<uint1_t>(ebx17 == 0))) {
                edx20 = ebx17;
            }
            ebp21 = ebp15 & 31;
            if (ebp21) {
                ecx22 = 32 - ebp21;
                esi19 = esi19 | *reinterpret_cast<uint32_t*>(esp5 + edx20 * 4 + 32) << *reinterpret_cast<unsigned char*>(&ecx22);
                if (ebx17 != 2) {
                    edx23 = 1;
                    ebx24 = 0;
                } else {
                    ecx25 = ebp21;
                    ebx24 = 1;
                    v11 = *reinterpret_cast<uint32_t*>(esp5 + ebx17 * 4 + 36) << *reinterpret_cast<unsigned char*>(&ecx22) | *reinterpret_cast<uint32_t*>(esp5 + ebx17 * 4 + 32) >> *reinterpret_cast<signed char*>(&ecx25);
                    edx23 = 2;
                }
                ecx26 = ebp21;
                *reinterpret_cast<uint32_t*>(esp5 + ebx24 * 4 + 32) = edi18 >> *reinterpret_cast<signed char*>(&ecx26);
            } else {
                edx27 = reinterpret_cast<void*>(esp5 + 32);
                edi28 = reinterpret_cast<void*>(esp5 + (3 - ebx17) * 4 + 36);
                do {
                    edx27 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(edx27) + 4);
                } while (edx27 != edi28);
                edx23 = 4 - ebx17;
            }
            do {
                *reinterpret_cast<int32_t*>(esp5 + edx23 * 4 + 32) = 0;
                ++edx23;
            } while (edx23 != 4);
            ecx29 = v11;
            if (al10) {
                ecx29 = -ecx29;
            }
            edx14 = reinterpret_cast<void**>(~(edx23 - (edx23 + reinterpret_cast<uint1_t>(edx23 < edx23 + reinterpret_cast<uint1_t>(esi19 < 1)))) & 32);
            eax13 = ecx29;
            if (!edx14) {
                return eax13;
            }
        }
    } else {
        if (ecx8) {
            eax13 = 0;
            goto addr_6e94e57d_6;
        }
        eax13 = 0;
        if (!(a1 | a2 | a3 | edi7)) 
            goto addr_6e94e592_8; else 
            goto addr_6e94e693_29;
    }
    addr_6e94e582_30:
    fun_6e9478b0(edx14);
    eax13 = eax13;
    addr_6e94e592_8:
    return eax13;
    addr_6e94e693_29:
    edx14 = reinterpret_cast<void**>(34);
    goto addr_6e94e582_30;
}

void fun_6e94e59a() {
}

void fun_6e94e649() {
}

void fun_6e94e69d() {
}

void fun_6e94e7aa() {
    void* esp1;
    uint32_t ecx2;
    uint32_t esi3;
    int32_t eax4;
    int32_t ebx5;
    uint32_t edi6;
    uint32_t edi7;
    uint32_t esi8;
    uint32_t edx9;
    int32_t eax10;
    uint32_t ecx11;
    uint32_t ecx12;
    int32_t eax13;
    int32_t ebx14;
    uint32_t ecx15;
    void* eax16;
    void* ecx17;
    int32_t v18;

    esp1 = __zero_stack_offset();
    ecx2 = 0x406f - esi3;
    eax4 = 1;
    ebx5 = reinterpret_cast<int32_t>(ecx2) >> 5;
    edi6 = edi7 | 0x10000;
    esi8 = edx9;
    if (ebx5 > 1) {
        do {
            ++eax4;
            esi8 = esi8 | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp1) + eax4 * 4 + 32);
        } while (ebx5 > eax4);
    }
    eax10 = 1;
    if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(ebx5 < 0) | reinterpret_cast<uint1_t>(ebx5 == 0))) {
        eax10 = ebx5;
    }
    ecx11 = ecx2 & 31;
    if (ecx11) {
        ecx12 = 32 - ecx11;
        esi8 = esi8 | *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp1) + eax10 * 4 + 32) << *reinterpret_cast<unsigned char*>(&ecx12);
        if (ebx5 != 2) {
            eax13 = 1;
            ebx14 = 0;
        } else {
            ebx14 = 1;
            eax13 = 2;
        }
        ecx15 = ecx11;
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp1) + ebx14 * 4 + 32) = edi6 >> *reinterpret_cast<signed char*>(&ecx15);
    } else {
        eax16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + 32);
        ecx17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + (3 - ebx5) * 4 + 36);
        do {
            eax16 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax16) + 4);
        } while (eax16 != ecx17);
        eax13 = 4 - ebx5;
    }
    do {
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) + eax13 * 4 + 32) = 0;
        ++eax13;
    } while (eax13 != 4);
    if (esi8) {
        fun_6e9478b0(32);
    }
    goto v18;
}

struct s170 {
    signed char[4] pad4;
    int32_t f4;
};

struct s171 {
    signed char[8] pad8;
    int32_t f8;
};

struct s172 {
    signed char[12] pad12;
    int32_t f12;
};

void fun_6e94ebaf(uint16_t a1) {
    int32_t v2;
    int32_t esi3;
    uint32_t ecx4;
    int32_t v5;
    int32_t edx6;
    int32_t* ebp7;
    uint32_t edi8;
    uint32_t edx9;
    int32_t v10;
    uint32_t edx11;
    uint16_t v12;
    uint32_t edx13;
    uint32_t edx14;
    int32_t* eax15;
    int32_t v16;
    struct s170* eax17;
    int32_t v18;
    struct s171* eax19;
    struct s172* eax20;
    int32_t v21;

    v2 = reinterpret_cast<int32_t>(__return_address());
    esi3 = 2;
    ecx4 = *reinterpret_cast<unsigned char*>(&v2);
    v5 = edx6 << *reinterpret_cast<unsigned char*>(&ecx4);
    if (!0) {
        ebp7 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 32);
        do {
            ebp7[esi3] = 0;
            --esi3;
        } while (esi3 >= 0);
    }
    edi8 = a1;
    edx9 = *reinterpret_cast<uint16_t*>(&v5);
    *reinterpret_cast<uint16_t*>(&edi8) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edi8) & 0x7fff);
    *reinterpret_cast<int16_t*>(&v10) = *reinterpret_cast<int16_t*>(&edx9);
    edx11 = v12;
    *reinterpret_cast<uint16_t*>(&edx11) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx11) & 0x8000);
    edx13 = edx11 | edi8;
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v10) + 2) = *reinterpret_cast<uint16_t*>(&edx13);
    *reinterpret_cast<uint16_t*>(&edx13) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx13) >> 8);
    edx14 = edx13 & 0x7f;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v10) + 3) = *reinterpret_cast<signed char*>(&edx14);
    *eax15 = v16;
    eax17->f4 = v18;
    eax19->f8 = 0;
    eax20->f12 = v10;
    goto v21;
}

void fun_6e94ec5a(uint32_t ecx) {
    void*** esp2;
    uint32_t v3;
    unsigned char v4;
    int32_t ebx5;
    int32_t ebx6;
    signed char v7;
    uint32_t edi8;
    uint32_t esi9;
    uint32_t ebp10;
    void** esi11;
    int32_t v12;
    uint32_t edx13;
    uint32_t ebx14;
    int32_t ebx15;
    int32_t eax16;
    uint32_t ebp17;
    uint32_t ebp18;
    uint32_t esi19;
    uint32_t v20;
    int32_t ecx21;
    uint32_t edx22;
    uint32_t v23;
    uint32_t edx24;
    uint32_t v25;
    uint32_t ecx26;
    int32_t edx27;
    int32_t v28;
    int32_t edx29;
    void* edi30;
    uint32_t ebp31;
    void* edx32;
    uint32_t ecx33;
    void* edx34;
    void* ebx35;
    int32_t v36;

    esp2 = reinterpret_cast<void***>(__zero_stack_offset());
    v3 = v4;
    if (ebx5 > 0x403d) {
        if (ebx6 != 0x403e || (!v7 || edi8 | esi9 >> 17 | ebp10 << 15)) {
            esi11 = reinterpret_cast<void**>(1);
        } else {
            if (!(esi9 << 15 | ecx)) {
                addr_6e94ec52_6:
                goto v12;
            } else {
                esi11 = reinterpret_cast<void**>(32);
            }
        }
    } else {
        edx13 = 0x406f - ebx14;
        ebx15 = 1;
        eax16 = reinterpret_cast<int32_t>(edx13) >> 5;
        ebp17 = ebp18 | 0x10000;
        esi19 = ecx;
        v20 = ebp17;
        if (eax16 > 1) {
            do {
                ++ebx15;
                esi19 = esi19 | *reinterpret_cast<uint32_t*>(esp2 + ebx15 * 4 + 48);
            } while (eax16 > ebx15);
        }
        ecx21 = 1;
        if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax16 < 0) | reinterpret_cast<uint1_t>(eax16 == 0))) {
            ecx21 = eax16;
        }
        edx22 = edx13 & 31;
        v23 = edx22;
        if (edx22) {
            edx24 = *reinterpret_cast<uint32_t*>(esp2 + ecx21 * 4 + 48);
            v25 = 32 - v23;
            ecx26 = *reinterpret_cast<unsigned char*>(&v25);
            esi19 = esi19 | edx24 << *reinterpret_cast<unsigned char*>(&ecx26);
            edx27 = 3 - eax16;
            v28 = edx27;
            if (!edx27) {
                edx29 = 1;
            } else {
                edi30 = reinterpret_cast<void*>(esp2 + edx27 * 4 + 48);
                ebp31 = esi19;
                edx32 = reinterpret_cast<void*>(esp2 + 48);
                do {
                    edx32 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx32) + 4);
                } while (edx32 != edi30);
                esi19 = ebp31;
                ebp17 = v20;
                edx29 = 4 - eax16;
            }
            ecx33 = *reinterpret_cast<unsigned char*>(&v23);
            *reinterpret_cast<uint32_t*>(esp2 + v28 * 4 + 48) = ebp17 >> *reinterpret_cast<signed char*>(&ecx33);
        } else {
            edx34 = reinterpret_cast<void*>(esp2 + 48);
            ebx35 = reinterpret_cast<void*>(esp2 + (3 - eax16) * 4 + 52);
            do {
                edx34 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx34) + 4);
            } while (edx34 != ebx35);
            edx29 = 4 - eax16;
        }
        do {
            *reinterpret_cast<int32_t*>(esp2 + edx29 * 4 + 48) = 0;
            ++edx29;
        } while (edx29 <= 3);
        esi11 = reinterpret_cast<void**>(~(esi19 - (esi19 + reinterpret_cast<uint1_t>(esi19 < esi19 + reinterpret_cast<uint1_t>(esi19 < 1)))) & 32);
        if (v3) {
        }
        if (!esi11) {
            goto v36;
        }
    }
    fun_6e9478b0(esi11);
    goto addr_6e94ec52_6;
}

void fun_6e94ed2c() {
}

void fun_6e94ed9d() {
}

void fun_6e94eead(uint32_t ecx) {
    void*** esp2;
    signed char al3;
    int32_t edi4;
    uint32_t ebp5;
    uint32_t edi6;
    int32_t ebx7;
    int32_t eax8;
    uint32_t edx9;
    uint32_t edx10;
    uint32_t esi11;
    uint32_t v12;
    int32_t ecx13;
    uint32_t ebp14;
    uint32_t v15;
    uint32_t ecx16;
    uint32_t esi17;
    int32_t ecx18;
    int32_t v19;
    int32_t ebx20;
    uint32_t edi21;
    void* edx22;
    void* v23;
    uint32_t ecx24;
    void* edx25;
    void* ebx26;
    void** ecx27;
    int32_t v28;

    esp2 = reinterpret_cast<void***>(__zero_stack_offset());
    if (!al3) {
        if (edi4 <= 0x403e) {
            ebp5 = 0x406f - edi6;
            ebx7 = 1;
            eax8 = reinterpret_cast<int32_t>(ebp5) >> 5;
            edx9 = edx10 | 0x10000;
            esi11 = ecx;
            v12 = edx9;
            if (eax8 > 1) {
                do {
                    ++ebx7;
                    esi11 = esi11 | *reinterpret_cast<uint32_t*>(esp2 + ebx7 * 4 + 48);
                } while (eax8 > ebx7);
            }
            ecx13 = 1;
            if (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(eax8 < 0) | reinterpret_cast<uint1_t>(eax8 == 0))) {
                ecx13 = eax8;
            }
            ebp14 = ebp5 & 31;
            v15 = ebp14;
            if (ebp14) {
                ecx16 = 32 - v15;
                esi17 = esi11 | *reinterpret_cast<uint32_t*>(esp2 + ecx13 * 4 + 48) << *reinterpret_cast<unsigned char*>(&ecx16);
                ecx18 = 3 - eax8;
                v19 = ecx18;
                if (!ecx18) {
                    ebx20 = 1;
                } else {
                    edi21 = esi17;
                    edx22 = reinterpret_cast<void*>(esp2 + 48);
                    v23 = reinterpret_cast<void*>(esp2 + ecx18 * 4 + 48);
                    do {
                        edx22 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx22) + 4);
                    } while (edx22 != v23);
                    edx9 = v12;
                    esi17 = edi21;
                    ebx20 = 4 - eax8;
                }
                ecx24 = *reinterpret_cast<unsigned char*>(&v15);
                *reinterpret_cast<uint32_t*>(esp2 + v19 * 4 + 48) = edx9 >> *reinterpret_cast<signed char*>(&ecx24);
            } else {
                edx25 = reinterpret_cast<void*>(esp2 + 48);
                ebx26 = reinterpret_cast<void*>(esp2 + (3 - eax8) * 4 + 52);
                do {
                    edx25 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx25) + 4);
                } while (edx25 != ebx26);
                ebx20 = 4 - eax8;
                esi17 = esi11;
            }
            do {
                *reinterpret_cast<int32_t*>(esp2 + ebx20 * 4 + 48) = 0;
                ++ebx20;
            } while (ebx20 <= 3);
            if (esi17) 
                goto addr_6e94ef84_20;
        } else {
            ecx27 = reinterpret_cast<void**>(1);
            goto addr_6e94eec3_22;
        }
    } else {
        ecx27 = reinterpret_cast<void**>(1);
        goto addr_6e94eec3_22;
    }
    addr_6e94eee0_25:
    goto v28;
    addr_6e94ef84_20:
    ecx27 = reinterpret_cast<void**>(32);
    addr_6e94eec3_22:
    fun_6e9478b0(ecx27);
    goto addr_6e94eee0_25;
}

struct s173 {
    signed char[4] pad4;
    int32_t f4;
};

struct s174 {
    signed char[8] pad8;
    int32_t f8;
};

struct s175 {
    signed char[12] pad12;
    int32_t f12;
};

void fun_6e94f15c() {
    int32_t* eax1;
    struct s173* eax2;
    struct s174* eax3;
    struct s175* eax4;
    int32_t v5;

    *eax1 = 0;
    eax2->f4 = 0;
    eax3->f8 = 0;
    eax4->f12 = 0;
    goto v5;
}

void fun_6e94f1e9(int16_t a1) {
    int32_t esi2;
    int32_t* ebp3;

    esi2 = 2;
    if (!0) {
        ebp3 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 36);
        do {
            ebp3[esi2] = 0;
            --esi2;
        } while (esi2 >= 0);
    }
    goto 0x6e94f171;
}

struct s176 {
    signed char[4] pad4;
    int32_t f4;
};

struct s177 {
    signed char[8] pad8;
    int32_t f8;
};

struct s178 {
    signed char[12] pad12;
    int32_t f12;
};

void fun_6e94f31c() {
    int32_t* eax1;
    struct s176* eax2;
    struct s177* eax3;
    struct s178* eax4;
    int32_t v5;

    *eax1 = 0;
    eax2->f4 = 0;
    eax3->f8 = 0;
    eax4->f12 = 0;
    goto v5;
}

void fun_6e94f399(int16_t a1) {
    int32_t esi2;
    int32_t* ebp3;

    esi2 = 2;
    if (!0) {
        ebp3 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 32);
        do {
            ebp3[esi2] = 0;
            --esi2;
        } while (esi2 >= 0);
    }
    goto 0x6e94f32a;
}

struct s179 {
    int32_t f0;
    int32_t f4;
    uint32_t f8;
    int32_t f12;
};

void fun_6e94f559() {
    uint32_t esi1;
    uint32_t ecx2;
    uint16_t v3;
    int32_t v4;
    uint32_t esi5;
    uint32_t ecx6;
    uint32_t ecx7;
    uint32_t edx8;
    int32_t ebx9;
    uint32_t ebx10;
    int32_t v11;
    uint32_t ebx12;
    uint16_t v13;
    uint32_t ebx14;
    uint32_t edx15;
    void** ecx16;
    struct s179* eax17;
    struct s179* eax18;
    int32_t v19;

    if (!esi1) {
        ecx2 = v3;
        *reinterpret_cast<int16_t*>(&v4) = 0;
        esi5 = 0;
        *reinterpret_cast<uint16_t*>(&ecx2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx2) & 0x8000);
        ecx6 = ecx2 | 0x7fff;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v4) + 2) = *reinterpret_cast<int16_t*>(&ecx6);
        ecx7 = 0x7f | edx8 << 7;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v4) + 3) = *reinterpret_cast<signed char*>(&ecx7);
        ebx9 = v4;
    } else {
        ebx10 = esi1 >> 7;
        *reinterpret_cast<int16_t*>(&v11) = *reinterpret_cast<int16_t*>(&ebx10);
        ebx12 = v13;
        esi5 = esi1 << 25;
        *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v11) + 2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx12) | 0x7fff);
        ebx14 = 0x7f | edx15 << 7;
        ecx16 = reinterpret_cast<void**>(esi1 >> 22 ^ 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v11) + 3) = *reinterpret_cast<signed char*>(&ebx14);
        ebx9 = v11;
        if (ecx16) {
            fun_6e9478b0(ecx16);
            eax17 = eax18;
        }
    }
    eax17->f0 = 0;
    eax17->f4 = 0;
    eax17->f8 = esi5;
    eax17->f12 = ebx9;
    goto v19;
}

struct s180 {
    int32_t f0;
    uint32_t f4;
    uint32_t f8;
    int32_t f12;
};

void fun_6e94f84c(uint32_t ecx) {
    uint32_t ecx2;
    uint32_t esi3;
    uint32_t esi4;
    uint32_t ebx5;
    uint16_t v6;
    int32_t v7;
    uint32_t ebx8;
    uint32_t ebx9;
    uint32_t edx10;
    int32_t edi11;
    uint32_t ebp12;
    uint32_t ebp13;
    int32_t v14;
    uint32_t ebp15;
    uint16_t v16;
    uint32_t ebp17;
    uint32_t edx18;
    uint32_t edx19;
    void** ebx20;
    uint32_t ebp21;
    struct s180* eax22;
    struct s180* eax23;
    int32_t v24;

    ecx2 = ecx | esi3;
    if (!ecx2) {
        esi4 = 0;
        ebx5 = v6;
        *reinterpret_cast<int16_t*>(&v7) = 0;
        *reinterpret_cast<uint16_t*>(&ebx5) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx5) & 0x8000);
        ebx8 = ebx5 | 0x7fff;
        *reinterpret_cast<int16_t*>(reinterpret_cast<int32_t>(&v7) + 2) = *reinterpret_cast<int16_t*>(&ebx8);
        ebx9 = 0x7f | edx10 << 7;
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v7) + 3) = *reinterpret_cast<signed char*>(&ebx9);
        edi11 = v7;
    } else {
        ebp12 = ebp13 >> 4;
        *reinterpret_cast<int16_t*>(&v14) = *reinterpret_cast<int16_t*>(&ebp12);
        ebp15 = v16;
        ecx2 = ebp17 << 28 | esi3 >> 4;
        *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v14) + 2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebp15) | 0x7fff);
        edx18 = 0x7f | edx19 << 7;
        esi4 = esi3 << 28;
        ebx20 = reinterpret_cast<void**>(ebp21 >> 19 ^ 1);
        *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v14) + 3) = *reinterpret_cast<signed char*>(&edx18);
        edi11 = v14;
        if (ebx20) {
            fun_6e9478b0(ebx20);
            ecx2 = ecx2;
            eax22 = eax23;
        }
    }
    eax22->f0 = 0;
    eax22->f4 = esi4;
    eax22->f8 = ecx2;
    eax22->f12 = edi11;
    goto v24;
}

struct s181 {
    int32_t f0;
    int32_t f4;
    uint32_t f8;
    int32_t f12;
};

void fun_6e94f9bc() {
    int32_t esi1;
    uint32_t ebp2;
    uint32_t edi3;
    uint32_t ecx4;
    uint32_t esi5;
    int32_t edi6;
    uint32_t ebp7;
    uint32_t ebp8;
    int32_t v9;
    uint32_t ebp10;
    uint16_t v11;
    uint32_t edi12;
    uint32_t ebp13;
    uint32_t ebx14;
    uint32_t ebx15;
    int32_t edi16;
    void** edx17;
    uint32_t ebp18;
    int32_t ebx19;
    struct s181* eax20;
    int32_t v21;
    uint32_t edi22;
    uint32_t ecx23;
    uint16_t v24;
    int32_t ebx25;
    int32_t ebx26;
    uint32_t ebp27;
    uint32_t ebp28;
    int32_t v29;
    uint32_t edi30;
    uint32_t ebp31;
    int32_t edi32;
    uint32_t edx33;
    uint16_t v34;
    int32_t v35;
    uint32_t edx36;
    uint32_t edx37;
    uint32_t ebx38;
    struct s181* eax39;

    if (esi1) {
        if (!(ebp2 | edi3)) {
            ecx4 = 0x7fff;
            esi5 = 0;
            edi6 = 0;
        } else {
            ebp7 = ebp8 >> 15;
            *reinterpret_cast<int16_t*>(&v9) = *reinterpret_cast<int16_t*>(&ebp7);
            ebp10 = v11;
            esi5 = edi12 >> 15 | ebp13 << 17;
            *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v9) + 2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebp10) | 0x7fff);
            ebx14 = 0x7f | ebx15 << 7;
            edi6 = edi16 << 17;
            edx17 = reinterpret_cast<void**>((ebp18 >> 30 ^ 1) & 1);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v9) + 3) = *reinterpret_cast<signed char*>(&ebx14);
            ebx19 = v9;
            if (!edx17) {
                addr_6e94f9a5_6:
                eax20->f0 = 0;
                eax20->f4 = edi6;
                eax20->f8 = esi5;
                eax20->f12 = ebx19;
                goto v21;
            } else {
                goto addr_6e94fa04_8;
            }
        }
    } else {
        if (!(ebp2 | edi22)) {
            ecx4 = 0;
            esi5 = 0;
            edi6 = 0;
        } else {
            ecx23 = v24;
            ebx25 = ebx26 << 7;
            ebp27 = ebp28 >> 15;
            *reinterpret_cast<int16_t*>(&v29) = *reinterpret_cast<int16_t*>(&ebp27);
            *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v29) + 2) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx23) & 0x8000);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v29) + 3) = *reinterpret_cast<signed char*>(&ebx25);
            ebx19 = v29;
            esi5 = edi30 >> 15 | ebp31 << 17;
            edi6 = edi32 << 17;
            edx17 = reinterpret_cast<void**>(2);
            goto addr_6e94fa04_8;
        }
    }
    edx33 = v34;
    *reinterpret_cast<int16_t*>(&v35) = 0;
    *reinterpret_cast<uint16_t*>(&edx33) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx33) & 0x8000);
    edx36 = edx33 | ecx4;
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v35) + 2) = *reinterpret_cast<uint16_t*>(&edx36);
    *reinterpret_cast<uint16_t*>(&edx36) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx36) >> 8);
    edx37 = edx36 & 0x7f | ebx38 << 7;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v35) + 3) = *reinterpret_cast<signed char*>(&edx37);
    ebx19 = v35;
    goto addr_6e94f9a5_6;
    addr_6e94fa04_8:
    fun_6e9478b0(edx17);
    eax20 = eax39;
    goto addr_6e94f9a5_6;
}

void fun_6e94fa69() {
}

void fun_6e94fb0c() {
    void*** esp1;
    uint32_t ecx2;
    int32_t v3;
    uint32_t v4;
    int32_t ebx5;
    int32_t ebx6;
    uint32_t v7;
    uint32_t v8;
    uint32_t v9;
    int32_t esi10;
    void** ecx11;
    uint32_t ebx12;
    uint16_t v13;
    int32_t edi14;
    uint32_t eax15;
    uint16_t bx16;
    uint32_t v17;
    uint32_t v18;
    uint32_t v19;
    int32_t ebx20;
    int32_t ebx21;
    uint32_t ebx22;
    uint16_t v23;
    uint32_t ebx24;
    int32_t edi25;
    int32_t ebx26;
    int32_t ebx27;
    uint32_t ebp28;
    uint32_t v29;
    uint32_t esi30;
    int32_t ebx31;
    uint32_t v32;
    uint32_t v33;
    uint32_t v34;
    int32_t ecx35;
    uint32_t* esi36;
    uint32_t* edi37;
    uint32_t* eax38;
    uint32_t v39;
    uint32_t ebp40;
    uint32_t v41;
    uint32_t esi42;
    uint32_t v43;
    uint32_t ecx44;
    int32_t v45;
    int32_t esi46;
    uint32_t* esi47;
    uint32_t* eax48;
    uint32_t* v49;
    uint32_t* eax50;
    int32_t edi51;
    int32_t edx52;
    uint32_t ecx53;
    uint32_t ecx54;
    int32_t edx55;
    uint32_t ecx56;
    int32_t ecx57;
    int32_t* ecx58;
    int32_t* eax59;
    int32_t* edi60;
    int32_t* eax61;
    uint32_t eax62;
    uint32_t ecx63;
    uint32_t v64;
    uint32_t v65;
    uint32_t v66;
    int32_t ebx67;
    unsigned char v68;
    uint32_t eax69;
    uint16_t v70;
    uint16_t ax71;
    int32_t v72;
    int32_t edx73;
    int32_t edx74;
    uint32_t ebx75;
    uint16_t v76;

    esp1 = reinterpret_cast<void***>(__zero_stack_offset());
    ecx2 = reinterpret_cast<uint32_t>(v3 * 8);
    v4 = ecx2;
    if (reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ebx5 + 1) & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
        if (!ebx6) {
            if (!(v7 | v8 | v9 | ecx2)) {
                esi10 = 0;
                ecx11 = reinterpret_cast<void**>(0);
            } else {
                ebx12 = v13;
                edi14 = 1;
                ecx11 = reinterpret_cast<void**>(34);
                eax15 = 1;
                esi10 = 0;
                bx16 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx12) & 0xc00);
                goto addr_6e94fb89_7;
            }
        } else {
            if (!(v17 | v18 | v19 | ecx2)) {
                esi10 = 0xff;
                ecx11 = reinterpret_cast<void**>(0);
            } else {
                if (ebx20 != 0x7fff) {
                    ecx11 = reinterpret_cast<void**>(0);
                } else {
                    ecx11 = reinterpret_cast<void**>((v19 >> 18 ^ 1) & 1);
                }
                esi10 = 0xff;
                edi14 = 0;
                eax15 = (v19 << 7 | v18 >> 25) & 0xfffffff8 | 0x2000000;
                goto addr_6e94fba8_14;
            }
        }
    } else {
        esi10 = ebx21 - 0x3f80;
        if (esi10 > 0xfe) {
            ebx22 = v23;
            bx16 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx22) & 0xc00);
            if (!bx16) 
                goto addr_6e94fc66_17;
            if (bx16 == 0x800) 
                goto addr_6e94fe80_19; else 
                goto addr_6e94fc37_20;
        } else {
            if (reinterpret_cast<uint1_t>(esi10 < 0) | reinterpret_cast<uint1_t>(esi10 == 0)) {
                if (esi10 < -23) {
                    edi14 = 1;
                    ebx24 = 1;
                    eax15 = 1;
                    esi10 = 0;
                } else {
                    edi25 = 0x3fda - ebx26;
                    ebx27 = edi25 + 31;
                    ebp28 = v29 | 0x80000;
                    if (edi25 >= 0) {
                        ebx27 = edi25;
                    }
                    esi30 = reinterpret_cast<uint32_t>(edi25 >> 31) >> 27;
                    ebx31 = ebx27 >> 5;
                    v32 = (edi25 + esi30 & 31) - esi30;
                    v33 = ebp28;
                    if (reinterpret_cast<uint1_t>(ebx31 < 0) | reinterpret_cast<uint1_t>(ebx31 == 0)) {
                        v34 = 0;
                        ecx35 = 0;
                    } else {
                        esi36 = reinterpret_cast<uint32_t*>(esp1 + 68);
                        edi37 = eax38 + ebx31;
                        v39 = ebp28;
                        ebp40 = ecx2;
                        if (esi36 != edi37) {
                            do {
                                ++esi36;
                                ebp40 = ebp40 | v41;
                            } while (esi36 != edi37);
                        }
                        v34 = ebp40;
                        ebp28 = v39;
                        ecx35 = ebx31;
                    }
                    if (v32) {
                        esi42 = *reinterpret_cast<uint32_t*>(esp1 + ecx35 * 4 + 64);
                        v43 = 32 - v32;
                        ecx44 = *reinterpret_cast<unsigned char*>(&v43);
                        v45 = 3 - ebx31;
                        v34 = v34 | esi42 << *reinterpret_cast<unsigned char*>(&ecx44);
                        if (reinterpret_cast<uint1_t>(v45 < 0) | reinterpret_cast<uint1_t>(v45 == 0)) {
                            esi46 = 1;
                            v45 = 0;
                        } else {
                            esi47 = eax48;
                            v49 = eax50 + v45;
                            edi51 = edx52;
                            do {
                                ecx53 = *reinterpret_cast<unsigned char*>(&v43);
                                ++esi47;
                                ecx54 = *reinterpret_cast<unsigned char*>(&v32);
                                *(esi47 - 1) = (esi47 + ebx31)[1] << *reinterpret_cast<unsigned char*>(&ecx53) | esi47[ebx31] >> *reinterpret_cast<signed char*>(&ecx54);
                            } while (esi47 != v49);
                            ebp28 = v33;
                            edx55 = edi51;
                            esi46 = 4 - ebx31;
                        }
                        ecx56 = *reinterpret_cast<unsigned char*>(&v32);
                        *reinterpret_cast<uint32_t*>(esp1 + v45 * 4 + 64) = ebp28 >> *reinterpret_cast<signed char*>(&ecx56);
                    } else {
                        ecx57 = 3 - ebx31;
                        if (ecx57 < 0) {
                            esi46 = 0;
                            goto addr_6e94fe13_40;
                        } else {
                            ecx58 = eax59;
                            edi60 = reinterpret_cast<int32_t*>(esp1 + ecx57 * 4 + 68);
                            do {
                                ++ecx58;
                                *(ecx58 - 1) = ecx58[ebx31];
                            } while (ecx58 != edi60);
                            esi46 = 4 - ebx31;
                        }
                    }
                    while (esi46 <= 3) {
                        addr_6e94fe13_40:
                        eax61[esi46] = 0;
                        ++esi46;
                    }
                    eax62 = 0;
                    edi14 = 1;
                    *reinterpret_cast<unsigned char*>(&eax62) = reinterpret_cast<uint1_t>(!!v34);
                    esi10 = 0;
                    eax15 = eax62 | v4;
                    ebx24 = eax15 & 7;
                }
            } else {
                ecx63 = 0;
                *reinterpret_cast<unsigned char*>(&ecx63) = reinterpret_cast<uint1_t>(!!(v64 << 7 | ecx2 | v65));
                edi14 = 0;
                eax15 = v66 << 7 | v64 >> 25 | ecx63;
                ebx24 = eax15 & 7;
            }
            ecx11 = reinterpret_cast<void**>(0);
            if (!ebx24) 
                goto addr_6e94fba8_14; else 
                goto addr_6e94fb7a_48;
        }
    }
    addr_6e94fc70_49:
    eax15 = 0;
    goto addr_6e94fc72_50;
    addr_6e94fb89_7:
    if (bx16 == 0x400) {
        addr_6e94fc5a_51:
        eax15 = eax15 + edx55 * 8;
    } else {
        addr_6e94fb94_52:
        if (bx16 == 0x800) {
            if (!edx55) {
                eax15 = eax15 + 8;
            }
        } else {
            if (!bx16) {
                if ((eax15 & 15) != 4) {
                    eax15 = eax15 + 4;
                }
            }
        }
    }
    addr_6e94fba8_14:
    if (eax15 && ((ebx67 = edi14, !!*reinterpret_cast<signed char*>(&ebx67)) && (*reinterpret_cast<unsigned char*>(&ecx11) & 32 || v68 & 16))) {
        ecx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx11) | 16);
    }
    if (!(eax15 & 0x4000000)) {
        addr_6e94fc72_50:
        if (eax15 >> 3 && esi10 == 0xff) {
        }
    } else {
        if (esi10 + 1 == 0xff) {
            eax69 = v70;
            ax71 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax69) & 0xc00);
            if (!ax71) {
                addr_6e94fe50_65:
            } else {
                if (ax71 == 0x800) {
                    if (edx55) {
                        addr_6e94fc10_68:
                    } else {
                        goto addr_6e94fe50_65;
                    }
                } else {
                    if (ax71 != 0x400) 
                        goto addr_6e94fc10_68;
                    if (!edx55) 
                        goto addr_6e94fc10_68;
                    goto addr_6e94fe50_65;
                }
            }
            ecx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx11) | 40);
        }
    }
    __asm__("fld dword [esp+0xc]");
    if (ecx11) {
        __asm__("fstp st0");
        fun_6e9478b0(ecx11);
        __asm__("fld dword [esp+0xc]");
    }
    goto v72;
    addr_6e94fe80_19:
    if (!edx73) {
        addr_6e94fc66_17:
        esi10 = 0xff;
        ecx11 = reinterpret_cast<void**>(40);
        goto addr_6e94fc70_49;
    }
    addr_6e94fc3e_78:
    edi14 = 0;
    ecx11 = reinterpret_cast<void**>(40);
    eax15 = 0xffffffff;
    esi10 = 0xfe;
    if (bx16 != 0x400) 
        goto addr_6e94fb94_52; else 
        goto addr_6e94fc5a_51;
    addr_6e94fc37_20:
    if (bx16 != 0x400) 
        goto addr_6e94fc3e_78;
    if (!edx74) 
        goto addr_6e94fc3e_78; else 
        goto addr_6e94fc66_17;
    addr_6e94fb7a_48:
    ebx75 = v76;
    ecx11 = reinterpret_cast<void**>(32);
    bx16 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx75) & 0xc00);
    goto addr_6e94fb89_7;
}

void fun_6e94fe8d() {
}

void fun_6e94fffc() {
    void*** esp1;
    uint32_t ecx2;
    int32_t v3;
    uint32_t v4;
    int32_t ebx5;
    int32_t ebx6;
    uint32_t v7;
    uint32_t v8;
    uint32_t v9;
    int32_t eax10;
    void** ecx11;
    int32_t ebx12;
    uint32_t ebx13;
    uint32_t edx14;
    uint32_t v15;
    uint32_t v16;
    uint32_t v17;
    uint32_t esi18;
    uint16_t v19;
    uint32_t esi20;
    int32_t ebx21;
    uint16_t v22;
    uint32_t esi23;
    int32_t esi24;
    int32_t ebx25;
    int32_t eax26;
    uint32_t edi27;
    uint32_t v28;
    uint32_t ebx29;
    int32_t eax30;
    uint32_t v31;
    uint32_t v32;
    uint32_t v33;
    int32_t ecx34;
    uint32_t* ebx35;
    uint32_t* esi36;
    uint32_t* edx37;
    uint32_t v38;
    uint32_t edi39;
    uint32_t* esi40;
    uint32_t v41;
    uint32_t v42;
    uint32_t ebx43;
    uint32_t ecx44;
    int32_t v45;
    int32_t ebx46;
    uint32_t* ebx47;
    uint32_t* edx48;
    uint32_t* v49;
    uint32_t* edx50;
    int32_t edi51;
    int32_t ebp52;
    uint32_t ecx53;
    uint32_t ecx54;
    int32_t ebp55;
    uint32_t ecx56;
    int32_t ebx57;
    int32_t* ecx58;
    int32_t* edx59;
    int32_t* esi60;
    int32_t* edx61;
    uint32_t ebx62;
    uint32_t v63;
    uint32_t v64;
    uint32_t v65;
    uint32_t v66;
    uint32_t v67;
    uint32_t esi68;
    uint16_t v69;
    uint32_t esi70;
    unsigned char v71;
    uint32_t edx72;
    uint16_t v73;
    uint16_t dx74;
    uint32_t edx75;
    uint32_t esi76;
    int32_t v77;
    uint32_t tmp32_78;
    uint1_t cf79;
    uint32_t tmp32_80;
    uint1_t cf81;
    int32_t ebp82;
    int32_t ebp83;

    esp1 = reinterpret_cast<void***>(__zero_stack_offset());
    ecx2 = reinterpret_cast<uint32_t>(v3 * 8);
    v4 = ecx2;
    if (reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ebx5 + 1) & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
        if (ebx6) {
            if (!(v7 | v8 | v9 | ecx2)) {
                eax10 = 0x7ff;
                ecx11 = reinterpret_cast<void**>(0);
            } else {
                ecx11 = reinterpret_cast<void**>(0);
                if (ebx12 == 0x7fff) {
                    ecx11 = reinterpret_cast<void**>((v9 >> 18 ^ 1) & 1);
                }
                ebx13 = (v7 << 4 | v8 >> 28) & 0xfffffff8;
                edx14 = v7 >> 28 | v9 << 4 | 0x400000;
                eax10 = 0x7ff;
                goto addr_6e9500a1_9;
            }
        } else {
            if (!(v15 | v16 | v17 | ecx2)) {
                eax10 = 0;
                ecx11 = reinterpret_cast<void**>(0);
            } else {
                esi18 = v19;
                ecx11 = reinterpret_cast<void**>(34);
                edx14 = 0;
                *reinterpret_cast<signed char*>(&ebx13) = 1;
                eax10 = 0;
                *reinterpret_cast<uint16_t*>(&esi20) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi18) & 0xc00);
                goto addr_6e950082_13;
            }
        }
    } else {
        eax10 = ebx21 - 0x3c00;
        if (eax10 > 0x7fe) {
            esi20 = v22;
            *reinterpret_cast<uint16_t*>(&esi20) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi20) & 0xc00);
            if (!*reinterpret_cast<uint16_t*>(&esi20)) 
                goto addr_6e950140_16;
            if (*reinterpret_cast<uint16_t*>(&esi20) == 0x800) 
                goto addr_6e950430_18; else 
                goto addr_6e9501fe_19;
        } else {
            if (reinterpret_cast<uint1_t>(eax10 < 0) | reinterpret_cast<uint1_t>(eax10 == 0)) {
                if (eax10 < -52) {
                    esi23 = 1;
                    edx14 = 0;
                    ebx13 = 1;
                    eax10 = 0;
                } else {
                    esi24 = 0x3c3d - ebx25;
                    eax26 = esi24 + 31;
                    edi27 = v28 | 0x80000;
                    if (esi24 >= 0) {
                        eax26 = esi24;
                    }
                    ebx29 = reinterpret_cast<uint32_t>(esi24 >> 31) >> 27;
                    eax30 = eax26 >> 5;
                    v31 = (esi24 + ebx29 & 31) - ebx29;
                    v32 = edi27;
                    if (reinterpret_cast<uint1_t>(eax30 < 0) | reinterpret_cast<uint1_t>(eax30 == 0)) {
                        v33 = 0;
                        ecx34 = 0;
                    } else {
                        ebx35 = reinterpret_cast<uint32_t*>(esp1 + 68);
                        esi36 = edx37 + eax30;
                        v38 = edi27;
                        edi39 = ecx2;
                        if (ebx35 != esi36) {
                            esi40 = esi36;
                            do {
                                ++ebx35;
                                edi39 = edi39 | v41;
                            } while (ebx35 != esi40);
                        }
                        v33 = edi39;
                        edi27 = v38;
                        ecx34 = eax30;
                    }
                    if (v31) {
                        v42 = 32 - v31;
                        ebx43 = *reinterpret_cast<uint32_t*>(esp1 + ecx34 * 4 + 64);
                        ecx44 = *reinterpret_cast<unsigned char*>(&v42);
                        v45 = 3 - eax30;
                        v33 = v33 | ebx43 << *reinterpret_cast<unsigned char*>(&ecx44);
                        if (reinterpret_cast<uint1_t>(v45 < 0) | reinterpret_cast<uint1_t>(v45 == 0)) {
                            ebx46 = 1;
                            v45 = 0;
                        } else {
                            ebx47 = edx48;
                            v49 = edx50 + v45;
                            edi51 = ebp52;
                            do {
                                ecx53 = *reinterpret_cast<unsigned char*>(&v42);
                                ++ebx47;
                                ecx54 = *reinterpret_cast<unsigned char*>(&v31);
                                *(ebx47 - 1) = (ebx47 + eax30)[1] << *reinterpret_cast<unsigned char*>(&ecx53) | ebx47[eax30] >> *reinterpret_cast<signed char*>(&ecx54);
                            } while (ebx47 != v49);
                            ebp55 = edi51;
                            edi27 = v32;
                            ebx46 = 4 - eax30;
                        }
                        ecx56 = *reinterpret_cast<unsigned char*>(&v31);
                        *reinterpret_cast<uint32_t*>(esp1 + v45 * 4 + 64) = edi27 >> *reinterpret_cast<signed char*>(&ecx56);
                    } else {
                        ebx57 = 3 - eax30;
                        if (ebx57 < 0) {
                            ebx46 = 0;
                            goto addr_6e9503d0_40;
                        } else {
                            ecx58 = edx59;
                            esi60 = reinterpret_cast<int32_t*>(esp1 + ebx57 * 4 + 68);
                            do {
                                ++ecx58;
                                *(ecx58 - 1) = ecx58[eax30];
                            } while (ecx58 != esi60);
                            ebx46 = 4 - eax30;
                        }
                    }
                    while (ebx46 <= 3) {
                        addr_6e9503d0_40:
                        edx61[ebx46] = 0;
                        ++ebx46;
                    }
                    ebx62 = 0;
                    edx14 = v63;
                    *reinterpret_cast<unsigned char*>(&ebx62) = reinterpret_cast<uint1_t>(!!v33);
                    eax10 = 0;
                    ebx13 = ebx62 | v4;
                    esi23 = ebx13 & 7;
                }
            } else {
                edx14 = v64 << 4 | v65 >> 28;
                ebx13 = v65 << 4 | v66 >> 28 | static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!(v67 << 4 | ecx2))));
                esi23 = ebx13 & 7;
            }
            ecx11 = reinterpret_cast<void**>(0);
            if (!esi23) 
                goto addr_6e9500a1_9;
            esi68 = v69;
            ecx11 = reinterpret_cast<void**>(32);
            *reinterpret_cast<uint16_t*>(&esi20) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi68) & 0xc00);
            goto addr_6e950082_13;
        }
    }
    addr_6e95014a_49:
    esi70 = 0;
    edx14 = 0;
    ebx13 = 0;
    addr_6e950150_50:
    if (eax10) 
        goto addr_6e9500b1_51;
    addr_6e950158_52:
    if (!(edx14 | ebx13)) 
        goto addr_6e9500b1_51;
    if (!(*reinterpret_cast<unsigned char*>(&ecx11) & 32)) {
        if (!(v71 & 16)) {
            addr_6e9500b1_51:
            if (esi70) {
                addr_6e950176_55:
                ++eax10;
                if (eax10 == 0x7ff) {
                    edx72 = v73;
                    dx74 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edx72) & 0xc00);
                    if (!dx74) 
                        goto addr_6e950406_57;
                    if (dx74 != 0x800) 
                        goto addr_6e9502dc_59;
                } else {
                    goto addr_6e9500de_61;
                }
            } else {
                addr_6e9500b9_62:
                edx75 = edx14 >> 3;
                esi76 = edx14 << 29 | ebx13 >> 3;
                goto addr_6e9500cd_63;
            }
        } else {
            goto addr_6e95016b_65;
        }
    } else {
        addr_6e95016b_65:
        ecx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx11) | 16);
        if (!esi70) 
            goto addr_6e9500b9_62; else 
            goto addr_6e950176_55;
    }
    if (ebp55) {
        addr_6e9502e7_67:
        esi76 = 0xffffffff;
        edx75 = 0x1fffffff;
        eax10 = 0x7fe;
    } else {
        addr_6e950406_57:
        esi76 = 0;
        edx75 = 0;
    }
    ecx11 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ecx11) | 40);
    addr_6e9500cd_63:
    if (eax10 == 0x7ff) {
        if (edx75 | esi76) {
            goto addr_6e9500d8_72;
        }
    } else {
        addr_6e9500d8_72:
    }
    addr_6e9500de_61:
    __asm__("fld qword [esp+0x8]");
    if (ecx11) {
        __asm__("fstp st0");
        fun_6e9478b0(ecx11);
        __asm__("fld qword [esp+0x8]");
    }
    goto v77;
    addr_6e9502dc_59:
    if (dx74 != 0x400) 
        goto addr_6e9502e7_67;
    if (!ebp55) 
        goto addr_6e9502e7_67;
    goto addr_6e950406_57;
    addr_6e950082_13:
    if (*reinterpret_cast<uint16_t*>(&esi20) == 0x400) {
        addr_6e950228_77:
        if (ebp55) {
            addr_6e95030b_78:
            tmp32_78 = ebx13 + 8;
            cf79 = reinterpret_cast<uint1_t>(tmp32_78 < ebx13);
            ebx13 = tmp32_78;
            edx14 = edx14 + cf79;
            goto addr_6e9500a1_9;
        } else {
            goto addr_6e9500a1_9;
        }
    } else {
        addr_6e95008d_80:
        if (*reinterpret_cast<uint16_t*>(&esi20) == 0x800) {
            if (ebp55) 
                goto addr_6e9500a1_9; else 
                goto addr_6e95030b_78;
        }
    }
    if (*reinterpret_cast<uint16_t*>(&esi20) || (ebx13 & 15) == 4) {
        addr_6e9500a1_9:
        esi70 = edx14 & 0x800000;
        if (!eax10) 
            goto addr_6e950158_52; else 
            goto addr_6e9500b1_51;
    } else {
        tmp32_80 = ebx13 + 4;
        cf81 = reinterpret_cast<uint1_t>(tmp32_80 < ebx13);
        ebx13 = tmp32_80;
        edx14 = edx14 + cf81;
        esi70 = edx14 & 0x800000;
        goto addr_6e950150_50;
    }
    addr_6e950430_18:
    if (!ebp82) {
        addr_6e950140_16:
        eax10 = 0x7ff;
        ecx11 = reinterpret_cast<void**>(40);
        goto addr_6e95014a_49;
    }
    addr_6e950209_85:
    ecx11 = reinterpret_cast<void**>(40);
    edx14 = 0xffffffff;
    ebx13 = 0xffffffff;
    eax10 = 0x7fe;
    if (*reinterpret_cast<uint16_t*>(&esi20) != 0x400) 
        goto addr_6e95008d_80; else 
        goto addr_6e950228_77;
    addr_6e9501fe_19:
    if (*reinterpret_cast<uint16_t*>(&esi20) == 0x400) {
        if (ebp83) 
            goto addr_6e950140_16;
        esi20 = esi20;
        goto addr_6e950209_85;
    }
}

void fun_6e95012c() {
}

void fun_6e9501a9() {
}

void fun_6e95028d() {
}

void fun_6e9503cc() {
}

void fun_6e95043d() {
}

void fun_6e95046d() {
}

void fun_6e9505cc(int32_t ecx) {
    uint32_t ebx2;
    int32_t v3;
    uint32_t v4;
    uint32_t v5;
    uint32_t v6;
    void** edi7;
    uint32_t edx8;
    uint32_t eax9;
    uint32_t v10;
    uint32_t v11;
    uint32_t v12;
    uint32_t v13;
    uint32_t v14;
    uint32_t v15;
    uint32_t ebx16;
    uint16_t v17;
    uint16_t bx18;
    uint32_t v19;
    uint32_t v20;
    uint32_t esi21;
    uint32_t v22;
    uint32_t v23;
    uint32_t v24;
    uint32_t v25;
    uint32_t v26;
    uint32_t v27;
    uint32_t v28;
    uint32_t ebx29;
    uint16_t v30;
    int32_t ebp31;
    uint32_t edx32;
    uint1_t below_or_equal33;
    int32_t ebp34;
    uint32_t ebx35;
    uint32_t edx36;
    uint32_t edx37;
    uint32_t ebx38;
    unsigned char v39;
    uint32_t eax40;
    uint16_t v41;
    uint16_t ax42;
    int32_t ebp43;
    int32_t ebp44;
    void* eax45;
    void* esi46;
    int32_t v47;
    uint32_t edx48;
    int32_t ebp49;
    int32_t ebp50;

    ebx2 = reinterpret_cast<uint32_t>(v3 * 8);
    if (reinterpret_cast<int32_t>(reinterpret_cast<uint32_t>(ecx + 1) & 0x7fff) <= reinterpret_cast<int32_t>(1)) {
        if (ecx) {
            if (v4 | v5 | v6 | ebx2) {
                edi7 = reinterpret_cast<void**>(0);
                if (ecx == 0x7fff) {
                    edi7 = reinterpret_cast<void**>((v6 >> 18 ^ 1) & 1);
                }
                edx8 = (v4 << 15 | v5 >> 17) & 0xfffffff8;
                eax9 = v6 >> 17 | 2;
                v10 = v6 << 15 | v4 >> 17;
                ecx = 0x7fff;
                v11 = 0;
                v12 = edx8;
                v13 = eax9;
            } else {
                v11 = 0;
                ecx = 0x7fff;
                edi7 = reinterpret_cast<void**>(0);
                v13 = 0;
                v10 = 0;
                v12 = 0;
                goto addr_6e95070d_9;
            }
        } else {
            if (!(v14 | v5 | v15 | ebx2)) {
                v11 = 0;
                edi7 = reinterpret_cast<void**>(0);
                v13 = 0;
                v10 = 0;
                v12 = 0;
                goto addr_6e95070d_9;
            } else {
                ecx = ecx;
                eax9 = v15 >> 17;
                edi7 = reinterpret_cast<void**>(2);
                edx8 = v14 << 15 | v5 >> 17 | static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!(v5 << 15 | ebx2))));
                v12 = edx8;
                v13 = eax9;
                v10 = v15 << 15 | v14 >> 17;
                v11 = 0;
            }
        }
    } else {
        if (ecx == 0x7fff) {
            ebx16 = v17;
            bx18 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx16) & 0xc00);
            if (!bx18) 
                goto addr_6e9506e8_15;
            if (bx18 == 0x800) 
                goto addr_6e950a70_17; else 
                goto addr_6e95086b_18;
        } else {
            if (!ecx) {
                v19 = v20 | 0x80000;
                esi21 = v19 << 14 | v22 >> 18;
                eax9 = v19 >> 18;
                edx8 = static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!(v23 << 14 | ebx2)))) | (v24 << 14 | v23 >> 18);
            } else {
                esi21 = v25 << 15 | v26 >> 17;
                eax9 = v25 >> 17;
                edx8 = v26 << 15 | v27 >> 17 | static_cast<uint32_t>(static_cast<unsigned char>(reinterpret_cast<uint1_t>(!!(v28 << 15 | ebx2))));
            }
            v12 = edx8;
            edi7 = reinterpret_cast<void**>(0);
            v10 = esi21;
            v13 = eax9;
            v11 = 0;
        }
    }
    if (!(*reinterpret_cast<unsigned char*>(&edx8) & 7)) 
        goto addr_6e950681_24;
    ebx29 = v30;
    edi7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi7) | 32);
    bx18 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ebx29) & 0xc00);
    if (bx18 == 0x400) {
        addr_6e9508b5_26:
        if (ebp31) {
            addr_6e9509bc_27:
            edx32 = edx8 + 8;
            v12 = edx32;
            below_or_equal33 = reinterpret_cast<uint1_t>(edx32 <= 7);
        } else {
            goto addr_6e950681_24;
        }
    } else {
        addr_6e95066d_29:
        if (bx18 == 0x800) {
            if (ebp34) 
                goto addr_6e950681_24; else 
                goto addr_6e9509bc_27;
        }
    }
    addr_6e95092c_31:
    ebx35 = below_or_equal33;
    edx36 = v10 + ebx35;
    v10 = edx36;
    edx37 = reinterpret_cast<uint1_t>(ebx35 > edx36);
    eax9 = eax9 + edx37;
    ebx38 = eax9 & 4;
    v13 = eax9;
    v11 = v11 + static_cast<unsigned char>(reinterpret_cast<uint1_t>(edx37 > eax9));
    addr_6e950686_32:
    if (ecx) 
        goto addr_6e95068e_33;
    addr_6e950719_34:
    if (!(v10 | v12 | v11 | eax9)) 
        goto addr_6e95068e_33;
    if (!(reinterpret_cast<unsigned char>(edi7) & 32)) {
        if (!(v39 & 16)) {
            addr_6e95068e_33:
            if (!(!ebx38 || (++ecx, v13 = eax9 & 0xfffffffb, ecx != 0x7fff))) {
                eax40 = v41;
                ax42 = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&eax40) & 0xc00);
                if (!ax42) {
                    addr_6e9509d0_39:
                    v11 = 0;
                    v13 = 0;
                    v10 = 0;
                    v12 = 0;
                } else {
                    if (ax42 == 0x800) {
                        if (ebp43) {
                            addr_6e95097b_42:
                            v11 = 0xffffffff;
                            v13 = 0xffffffff;
                            ecx = 0x7ffe;
                            v10 = 0xffffffff;
                            v12 = 0xffffffff;
                        } else {
                            goto addr_6e9509d0_39;
                        }
                    } else {
                        if (ax42 != 0x400) 
                            goto addr_6e95097b_42;
                        if (!ebp44) 
                            goto addr_6e95097b_42;
                        goto addr_6e9509d0_39;
                    }
                }
                edi7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi7) | 40);
            }
        } else {
            goto addr_6e950739_49;
        }
    } else {
        addr_6e950739_49:
        edi7 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edi7) | 16);
        goto addr_6e95068e_33;
    }
    eax45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 96);
    esi46 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 0x6c);
    while (eax45 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax45) + 4), eax45 != esi46) {
    }
    if (ecx == 0x7fff) {
        if (v10 | v12 | v13 | v11 >> 3) {
        }
    } else {
        if (!ecx) {
            goto addr_6e950763_59;
        }
    }
    addr_6e950763_59:
    __asm__("fld tword [esp+0x40]");
    if (edi7) {
        __asm__("fstp tword [esp+0x10]");
        fun_6e9478b0(edi7);
        __asm__("fld tword [esp+0x10]");
    }
    goto v47;
    if (bx18 || (edx8 & 15) == 4) {
        addr_6e950681_24:
        ebx38 = eax9 & 4;
        goto addr_6e950686_32;
    } else {
        edx48 = edx8 + 4;
        v12 = edx48;
        below_or_equal33 = reinterpret_cast<uint1_t>(edx48 <= 3);
        goto addr_6e95092c_31;
    }
    addr_6e95070d_9:
    ebx38 = 0;
    eax9 = 0;
    if (ecx) 
        goto addr_6e95068e_33; else 
        goto addr_6e950719_34;
    addr_6e950a70_17:
    if (!ebp49) {
        addr_6e9506e8_15:
        v11 = 0;
        edi7 = reinterpret_cast<void**>(40);
        v13 = 0;
        v10 = 0;
        v12 = 0;
        goto addr_6e95070d_9;
    }
    eax9 = 0xffffffff;
    v11 = 0xffffffff;
    edi7 = reinterpret_cast<void**>(40);
    edx8 = 0xffffffff;
    v13 = 0xffffffff;
    ecx = 0x7ffe;
    v10 = 0xffffffff;
    v12 = 0xffffffff;
    if (bx18 != 0x400) 
        goto addr_6e95066d_29; else 
        goto addr_6e9508b5_26;
    addr_6e95086b_18:
    if (bx18 == 0x400 && ebp50) {
        goto addr_6e9506e8_15;
    }
}

void fun_6e9507cc() {
}

void fun_6e95084a() {
}

void fun_6e9509f9() {
}

void fun_6e950a6c() {
}

void fun_6e9515ad() {
}

void fun_6e95183d() {
}

void fun_6e9518ed() {
}

void fun_6e951bfc() {
}

void fun_6e951c59() {
}

void fun_6e951cac() {
}

void fun_6e951cdd() {
}

void fun_6e951f2c() {
}

void fun_6e95255c() {
}

void fun_6e95258c() {
}

void fun_6e952613() {
}

void fun_6e952a8c() {
}

void fun_6e952b2c() {
    int32_t v1;

    goto v1;
}

struct s182 {
    signed char[12] pad12;
    int32_t f12;
    int32_t f16;
};

void fun_6e952e8a(struct s182* a1, int32_t a2, int32_t a3) {
    void* ebp4;
    int32_t eax5;
    int32_t ecx6;
    int32_t eax7;
    int32_t v8;
    int32_t v9;
    int32_t v10;
    int32_t v11;
    struct s95* v12;
    void* v13;
    uint32_t eax14;
    int32_t v15;
    int32_t v16;
    int32_t v17;
    int32_t v18;
    struct s95* v19;
    void* v20;

    ebp4 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_6e952620(__return_address());
    eax5 = a2;
    ecx6 = 32;
    while (ecx6) {
        --ecx6;
    }
    a1->f12 = eax5;
    a1->f16 = a3;
    eax7 = fun_6e9528c0();
    if (eax7 == 7) {
        eax14 = fun_6e9529d0(v8, v9, v10, v11, v12, v13);
        fun_6e952d30(v15, v16, v17, v18, v19, v20);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp4) + eax14 + 4) = v16;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp4) + eax14 + 4);
    } else {
        return;
    }
}

void fun_6e95303a(int32_t a1, int32_t a2, int32_t a3, struct s95* a4, void* a5) {
    uint32_t eax6;
    int32_t esi7;
    int32_t ebp8;
    int32_t v9;
    int32_t ebp10;
    void* ebp11;
    void* ebp12;

    eax6 = fun_6e9529d0(__return_address(), a1, a2, a3, a4, a5);
    esi7 = *reinterpret_cast<int32_t*>(ebp8 - 76);
    v9 = *reinterpret_cast<int32_t*>(ebp10 - 80);
    fun_6e952d30(v9, esi7, a2, a3, a4, a5);
    *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp11) + eax6 + 4) = esi7;
    goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp12) + eax6 + 4);
}

void _Unwind_Backtrace(void** a1, void** a2, void** a3, void** a4, void** a5) {
    void** v6;
    void** v7;
    void** ebp8;
    int32_t v9;
    int32_t edi10;
    int32_t v11;
    int32_t esi12;
    void* v13;
    void* ebx14;
    void** ecx15;
    void** ebx16;
    void** edi17;
    int32_t eax18;
    int32_t eax19;
    int32_t v20;
    int32_t v21;

    v6 = reinterpret_cast<void**>(__return_address());
    v7 = ebp8;
    v9 = edi10;
    v11 = esi12;
    v13 = ebx14;
    ecx15 = v6;
    ebx16 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 0xfffffea8);
    edi17 = a1;
    fun_6e952620(ecx15);
    while ((eax18 = fun_6e951400(ecx15, v13, v11, v9, v7, v6, a1, a2), eax18 == 5) || !eax18) {
        eax19 = reinterpret_cast<int32_t>(edi17(ecx15, ebx16, a2));
        if (eax19) 
            goto addr_6e953100_4;
        if (eax18 == 5) 
            goto addr_6e953110_6;
        fun_6e9527b0(ecx15, ebx16, a2, a1, a2, a3, a4, a5);
    }
    addr_6e953100_4:
    goto v20;
    addr_6e953110_6:
    goto v21;
}

void fun_6e953181() {
    goto fun_6e953190;
}

void fun_6e95323d() {
}

void fun_6e9532e1() {
    goto fun_6e9532f0;
}

void fun_6e9533ec() {
}

void fun_6e953505() {
}

void fun_6e95352a() {
}

void fun_6e95354a() {
}

void fun_6e9535dc() {
}

void fun_6e95389a() {
}

void fun_6e953a2c() {
}

void fun_6e953a8a() {
}

void fun_6e953ab9() {
}

void fun_6e953aea() {
}

void fun_6e953b8d() {
}

void fun_6e95418c() {
}

void fun_6e9542ea() {
}

void fun_6e9543ed() {
}

void fun_6e95454d() {
}

void fun_6e9545ca() {
}

void fun_6e95464c(void** ecx) {
    unsigned char v2;
    void** v3;
    void** v4;
    struct s31* eax5;
    void*** esp6;
    int32_t v7;
    void** v8;
    uint32_t edx9;
    void** esi10;
    void**** esp11;
    void** eax12;
    uint32_t eax13;
    void** edx14;
    uint32_t ebx15;
    void** ebx16;
    void* esi17;
    void** ecx18;
    uint32_t edx19;
    uint32_t eax20;
    void** v21;
    void* eax22;
    uint32_t edi23;
    void*** ebp24;
    void** v25;
    void** eax26;
    void** v27;
    void**** esp28;
    void** eax29;
    void** v30;
    void**** esp31;
    void** eax32;
    uint32_t eax33;
    int32_t v34;
    int32_t v35;
    int32_t v36;
    void** v37;
    int32_t v38;
    int32_t edx39;
    int32_t v40;
    int32_t v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    struct s123* v47;
    int32_t v48;

    if (!(v2 & 2)) 
        goto addr_6e954657_3;
    v3 = v4;
    eax5 = _Unwind_GetLanguageSpecificData(v3);
    esp6 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    if (!eax5) 
        goto addr_6e954657_3;
    if (v7) {
        v3 = v8;
        _Unwind_GetRegionStart(v3);
        esp6 = esp6 - 4 + 4;
    }
    edx9 = reinterpret_cast<unsigned char>(*reinterpret_cast<struct s31**>(&eax5->f0));
    esi10 = reinterpret_cast<void**>(&eax5->f1);
    if (*reinterpret_cast<signed char*>(&edx9) != -1) {
        fun_6e9544c0(ecx, v3);
        esp11 = reinterpret_cast<void****>(esp6 - 4 + 4);
        eax12 = fun_6e954520(esi10, esp11 + 11);
        esp6 = reinterpret_cast<void***>(esp11 - 1 + 3 + 1);
        esi10 = eax12;
    }
    eax13 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(esi10));
    edx14 = esi10 + 1;
    if (*reinterpret_cast<signed char*>(&eax13) != -1) {
        do {
            ++edx14;
            ebx15 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(edx14 + 0xffffffff));
        } while (*reinterpret_cast<signed char*>(&ebx15) < 0);
    }
    ebx16 = edx14 + 1;
    esi17 = reinterpret_cast<void*>(0);
    ecx18 = reinterpret_cast<void**>(0);
    do {
        ++ebx16;
        edx19 = reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff));
        eax20 = (edx19 & 0x7f) << *reinterpret_cast<unsigned char*>(&ecx18);
        ecx18 = ecx18 + 7;
        esi17 = reinterpret_cast<void*>(reinterpret_cast<uint32_t>(esi17) | eax20);
    } while (*reinterpret_cast<signed char*>(&edx19) < 0);
    eax22 = _Unwind_GetIP(v21);
    esp6 = esp6 - 4 + 4;
    edi23 = reinterpret_cast<uint32_t>(eax22) + 0xffffffff;
    if (reinterpret_cast<unsigned char>(reinterpret_cast<uint32_t>(esi17) + reinterpret_cast<unsigned char>(ebx16)) <= reinterpret_cast<unsigned char>(ebx16)) 
        goto addr_6e954657_3;
    ebp24 = esp6 + 28;
    do {
        fun_6e9544c0(ecx18, v25);
        eax26 = fun_6e954520(ebx16, ebp24);
        fun_6e9544c0(ebx16, v27);
        esp28 = reinterpret_cast<void****>(esp6 - 4 + 4 - 4 + 12 + 4 - 4 + 4);
        eax29 = fun_6e954520(eax26, esp28 + 8);
        fun_6e9544c0(eax26, v30);
        esp31 = esp28 - 1 + 3 + 1 - 1 + 1;
        ecx18 = eax29;
        eax32 = fun_6e954520(ecx18, esp31 + 9);
        esp6 = reinterpret_cast<void***>(esp31 - 1 + 3 + 1);
        ebx16 = eax32;
        do {
            ++ebx16;
        } while (reinterpret_cast<signed char>(*reinterpret_cast<void***>(ebx16 + 0xffffffff)) < reinterpret_cast<signed char>(0));
        eax33 = reinterpret_cast<uint32_t>(v34 + v35);
        if (edi23 < eax33) 
            goto addr_6e954657_3;
        if (edi23 < eax33 + v36) 
            break;
    } while (reinterpret_cast<unsigned char>(ebx16) < reinterpret_cast<unsigned char>(v37));
    goto addr_6e9547cd_24;
    if (v38) {
        edx39 = v38 + v40;
        if (!edx39) {
            addr_6e954657_3:
            goto v41;
        } else {
            _Unwind_SetGR(ecx18, v42, 0, v43, v44);
            _Unwind_SetGR(ecx18, v45, 2, 0, v46);
            _Unwind_SetIP(ecx18, v47, edx39, 0);
        }
    }
    goto v48;
    addr_6e9547cd_24:
    goto addr_6e954657_3;
}

void fun_6e954860(int32_t* a1);

void** g6e954868 = reinterpret_cast<void**>(0x8b);

void** g6e95d054;

void** g6e95d058;

struct s183 {
    signed char[4] pad4;
    void** f4;
};

void* g6e954864 = reinterpret_cast<void*>(0x10ec83db);

void** g6e954860 = reinterpret_cast<void**>(87);

void** g6e95486c = reinterpret_cast<void**>(0x8b);

void fun_6e95489c(void** ecx) {
    int32_t eax2;
    void** v3;
    void** v4;
    void** v5;
    void** v6;
    void** v7;
    void** esi8;
    void** v9;
    void** eax10;
    void** eax11;
    void** eax12;
    void** ebx13;
    void** v14;
    void** eax15;
    void** eax16;
    struct s183* esi17;
    void* ebp18;
    void** eax19;
    void** eax20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** ebx26;
    void** eax27;
    void** eax28;
    void** v29;
    void** eax30;
    void** eax31;
    void** edx32;
    void** v33;
    void** v34;
    int32_t v35;
    void** esi36;
    void** edi37;
    void** ebp38;
    void** eax39;
    void** edx40;
    void** eax41;
    void** eax42;

    eax2 = fun_6e954ae8();
    if (!eax2) {
        return;
    }
    fun_6e955970(ecx, 0x6e95d058, fun_6e954860, v3, v4, v5, v6, v7, __return_address());
    esi8 = g6e954868;
    if (!esi8) {
        v9 = reinterpret_cast<void**>(0x6e9548a0);
        fun_6e954ad0(0x6e95d050, 0x6e9548a0);
        fun_6e954ad8(0x6e956008);
        esi8 = g6e954868;
        if (!esi8) {
            eax10 = g6e95d054;
            esi8 = eax10 + 1;
            g6e95d054 = esi8;
            g6e954868 = esi8;
        }
        fun_6e954ae0(0x6e956008);
    }
    eax11 = g6e95d058;
    eax12 = fun_6e954af0(eax11);
    ebx13 = eax12;
    if (eax12) 
        goto addr_6e9548f9_8;
    v9 = reinterpret_cast<void**>(4);
    v14 = esi8 + 33;
    eax15 = fun_6e955998(v14, 4);
    ebx13 = eax15;
    if (!eax15) 
        goto addr_6e954a8a_10;
    *reinterpret_cast<void***>(eax15) = esi8 + 32;
    v9 = eax15;
    eax16 = g6e95d058;
    fun_6e954af8(eax16);
    addr_6e954903_12:
    esi17 = reinterpret_cast<struct s183*>(reinterpret_cast<uint32_t>(ebx13 + reinterpret_cast<unsigned char>(esi8) * 4) - 4);
    if (!esi17->f4) {
        ebp18 = g6e954864;
        if (reinterpret_cast<uint32_t>(ebp18) > 4) {
            eax19 = g6e954860;
            v14 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax19) + reinterpret_cast<uint32_t>(ebp18) + 3);
            eax20 = fun_6e955950(v14);
            if (!eax20) {
                addr_6e954a8a_10:
                fun_6e955970(ecx, v14, v9, v21, v22, v23, v24, v25, ebx26);
                if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v9)) < reinterpret_cast<unsigned char>(v21)) {
                    *reinterpret_cast<void***>(v9) = v21;
                    *reinterpret_cast<void***>(v9 + 12) = reinterpret_cast<void**>(0);
                }
            } else {
                ebx13 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(eax20) + reinterpret_cast<uint32_t>(ebp18) + 3 & -reinterpret_cast<uint32_t>(ebp18));
                *reinterpret_cast<void***>(ebx13 + 0xfffffffc) = eax20;
                goto addr_6e954977_17;
            }
        } else {
            eax27 = g6e954860;
            v14 = eax27 + 4;
            eax28 = fun_6e955950(v14);
            if (!eax28) 
                goto addr_6e954a8a_10;
            *reinterpret_cast<void***>(eax28) = eax28;
            ebx13 = eax28 + 4;
            goto addr_6e954977_17;
        }
    } else {
        addr_6e95490e_20:
        goto 0x6e95d058;
    }
    if (reinterpret_cast<unsigned char>(*reinterpret_cast<void***>(v9 + 4)) < reinterpret_cast<unsigned char>(v22)) {
        *reinterpret_cast<void***>(v9 + 4) = v22;
    }
    if (!v29 || *reinterpret_cast<void***>(v9) != v21) {
        goto v14;
    } else {
        *reinterpret_cast<void***>(v9 + 12) = v29;
        goto v14;
    }
    addr_6e954977_17:
    eax30 = g6e95486c;
    if (!eax30) {
        eax31 = g6e954860;
        fun_6e955990(ebx13, 0, eax31);
    } else {
        edx32 = g6e954860;
        fun_6e955980(ebx13, eax30, edx32, v22, v33, v34, v35, ebx26, esi36, edi37);
    }
    esi17->f4 = ebx13;
    goto addr_6e95490e_20;
    addr_6e9548f9_8:
    ebp38 = *reinterpret_cast<void***>(eax12);
    if (reinterpret_cast<unsigned char>(esi8) > reinterpret_cast<unsigned char>(ebp38)) {
        eax39 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(ebp38) + reinterpret_cast<unsigned char>(ebp38));
        edx40 = esi8 + 32;
        if (reinterpret_cast<unsigned char>(esi8) <= reinterpret_cast<unsigned char>(eax39)) {
            edx40 = eax39;
        }
        v14 = ebx13;
        v9 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(edx40) * 4 + 4);
        v22 = edx40;
        eax41 = fun_6e955988();
        ebx13 = eax41;
        if (!eax41) 
            goto addr_6e954a8a_10;
        *reinterpret_cast<void***>(eax41) = v22;
        v21 = reinterpret_cast<void**>(reinterpret_cast<unsigned char>(v22) - reinterpret_cast<unsigned char>(ebp38) << 2);
        fun_6e955990(reinterpret_cast<uint32_t>(eax41 + reinterpret_cast<unsigned char>(ebp38) * 4) + 4, 0, v21);
        eax42 = g6e95d058;
        v9 = ebx13;
        fun_6e954af8(eax42);
        goto addr_6e954903_12;
    }
}

void fun_6e954bfc() {
    int32_t v1;
    uint32_t eax2;
    void** v3;
    int32_t v4;

    fun_6e955550(v1, eax2, v3);
    goto v4;
}

void fun_6e954e4c() {
}

void fun_6e954f8a() {
}

void fun_6e9550da() {
}

int32_t fun_6e955411(void** a1, void** a2) {
    int32_t esi3;
    int32_t eax4;
    void** eax5;
    void** eax6;

    esi3 = 0;
    eax4 = g6e95d3c4;
    if (eax4) {
        eax5 = fun_6e955998(1, 12);
        if (!eax5) {
            esi3 = -1;
        } else {
            *reinterpret_cast<void***>(eax5) = a1;
            *reinterpret_cast<void***>(eax5 + 4) = a2;
            EnterCriticalSection(0x6e95d3c8, 12);
            eax6 = g6e95d3c0;
            g6e95d3c0 = eax5;
            *reinterpret_cast<void***>(eax5 + 8) = eax6;
            LeaveCriticalSection(0x6e95d3c8, 0x6e95d3c8, 12);
            return 0;
        }
    }
    return esi3;
}

void fun_6e95543c() {
}

struct s184 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_6e9554ca(void** a1) {
    void** edx2;
    void** ebx3;
    void** eax4;
    void** ebx5;
    struct s184* ebp6;

    EnterCriticalSection(0x6e95d3c8);
    edx2 = g6e95d3c0;
    if (!edx2) {
        addr_6e955501_3:
        LeaveCriticalSection(0x6e95d3c8, 0x6e95d3c8);
    } else {
        if (*reinterpret_cast<void***>(edx2) != ebx3) {
            while (eax4 = *reinterpret_cast<void***>(edx2 + 8), !!eax4) {
                if (*reinterpret_cast<void***>(eax4) == ebx5) 
                    goto addr_6e955518_7;
                edx2 = eax4;
            }
            goto addr_6e955501_3;
        } else {
            g6e95d3c0 = *reinterpret_cast<void***>(edx2 + 8);
            eax4 = edx2;
            goto addr_6e95551e_11;
        }
    }
    addr_6e955511_12:
    goto ebp6->f4;
    addr_6e955518_7:
    *reinterpret_cast<void***>(edx2 + 8) = *reinterpret_cast<void***>(eax4 + 8);
    addr_6e95551e_11:
    fun_6e955960(eax4, 0x6e95d3c8, a1);
    LeaveCriticalSection(0x6e95d3c8, 0x6e95d3c8);
    goto addr_6e955511_12;
}

void fun_6e95561e() {
    goto fun_6e9555f0;
}

struct s185 {
    signed char[6] pad6;
    uint16_t f6;
};

void fun_6e95569f() {
    uint32_t eax1;
    int32_t v2;
    int32_t eax3;
    struct s185* edx4;
    uint32_t ebp5;
    uint32_t ebx6;
    int32_t edi7;
    int32_t eax8;
    uint32_t esi9;
    uint32_t tmp32_10;
    int32_t v11;
    int32_t v12;

    eax1 = fun_6e9555f0(__return_address());
    if (!eax1) {
        addr_6e955695_3:
        goto v2;
    } else {
        eax3 = g6e94003c;
        edx4 = reinterpret_cast<struct s185*>(eax3 + 0x6e940000);
        ebp5 = edx4->f6;
        ebx6 = reinterpret_cast<int32_t>(edx4) + *reinterpret_cast<uint16_t*>(eax3 + 0x6e940014) + 24;
        if (ebp5) {
            do {
                eax8 = fun_6e9559c8(ebx6, edi7, 8);
                if (!eax8) 
                    break;
                esi9 = tmp32_10;
                ebx6 = ebx6 + 40;
            } while (esi9 < ebp5);
            goto addr_6e955700_7;
        } else {
            goto addr_6e955695_3;
        }
    }
    goto v11;
    addr_6e955700_7:
    goto v12;
}

void fun_6e955759() {
}

struct s186 {
    signed char[39] pad39;
    unsigned char f39;
};

struct s186* fun_6e955790(int32_t a1) {
    int1_t zf2;
    int32_t ebx3;
    int32_t ebx4;
    uint32_t eax5;
    int32_t eax6;
    struct s185* ecx7;
    struct s186* edx8;
    uint32_t ecx9;
    uint32_t eax10;

    zf2 = image_base_ == 0x5a4d;
    ebx3 = a1;
    if (!zf2 || ((eax5 = fun_6e9555f0(ebx4), eax5 == 0) || (eax6 = g6e94003c, ecx7 = reinterpret_cast<struct s185*>(eax6 + 0x6e940000), edx8 = reinterpret_cast<struct s186*>(reinterpret_cast<int32_t>(ecx7) + *reinterpret_cast<uint16_t*>(eax6 + 0x6e940014) + 24), ecx9 = ecx7->f6, ecx9 == 0))) {
        return 0;
    }
    eax10 = 0;
    do {
        if (edx8->f39 & 32) {
            if (!ebx3) 
                goto addr_6e9557f4_6;
            --ebx3;
        }
        ++eax10;
        ++edx8;
    } while (eax10 < ecx9);
    return 0;
    addr_6e9557f4_6:
    return edx8;
}

uint32_t fun_6e955824(int32_t a1) {
    int1_t zf2;
    int32_t v3;
    uint32_t eax4;
    struct s2* eax5;

    zf2 = image_base_ == 0x5a4d;
    if (zf2) {
        eax4 = fun_6e9555f0(v3);
        if (eax4) {
            eax5 = fun_6e955630(0x6e940000, a1 - 0x6e940000);
            if (!eax5) {
                eax4 = 0;
            } else {
                eax4 = reinterpret_cast<uint32_t>(~eax5->f36) >> 31;
            }
        }
        return eax4;
    } else {
        return 0;
    }
}

void fun_6e95587a() {
}

struct s187 {
    signed char[4] pad4;
    int32_t f4;
    signed char[4] pad12;
    int32_t f12;
};

void fun_6e9558ed() {
    int32_t ebx1;
    struct s187* edx2;
    struct s187* tmp32_3;
    int32_t v4;
    int32_t v5;

    do {
        --ebx1;
        edx2 = tmp32_3;
        if (edx2->f4) 
            continue;
        if (!edx2->f12) 
            break;
    } while (!reinterpret_cast<uint1_t>(reinterpret_cast<uint1_t>(ebx1 < 0) | reinterpret_cast<uint1_t>(ebx1 == 0)));
    goto addr_6e955908_6;
    goto v4;
    addr_6e955908_6:
    goto v5;
}

void fun_6e95591a() {
}

void fun_6e94116a() {
}

void fun_6e941257() {
}

void fun_6e9411fc() {
}

void fun_6e954cc5() {
}

int32_t g6e95d06c;

void fun_6e941416() {
    int32_t v1;

    g6e95d06c = 0;
    if (v1 == 1) 
        goto 0x6e941450; else 
        goto "???";
}

int32_t __negdi2(int32_t a1, int32_t a2) {
    return -a1;
}

int32_t __ashldi3(int32_t a1, int32_t a2, int32_t a3) {
    int32_t eax4;
    int32_t esi5;
    int32_t ecx6;

    eax4 = a1;
    if (a3) {
        esi5 = 32 - a3;
        if (reinterpret_cast<uint1_t>(esi5 < 0) | reinterpret_cast<uint1_t>(esi5 == 0)) {
            return 0;
        } else {
            ecx6 = a3;
            eax4 = eax4 << *reinterpret_cast<unsigned char*>(&ecx6);
        }
    }
    return eax4;
}

void __ashrdi3(int32_t a1, int32_t a2, int32_t a3) {
    int32_t esi4;

    if (!a3) 
        goto 0x6e9416e5;
    esi4 = 32 - a3;
    if (reinterpret_cast<uint1_t>(esi4 < 0) | reinterpret_cast<uint1_t>(esi4 == 0)) 
        goto 0x6e9416f0;
}

int32_t __cmpdi2(uint32_t a1, int32_t a2, uint32_t a3, int32_t a4) {
    int32_t eax5;

    eax5 = 0;
    if (a2 < a4) {
        addr_6e94171f_2:
        return eax5;
    } else {
        if (a2 > a4) 
            goto addr_6e94171a_4;
        if (a1 < a3) 
            goto addr_6e94171f_2;
    }
    if (a1 > a3) {
        addr_6e94171a_4:
        eax5 = 2;
        goto addr_6e94171f_2;
    } else {
        eax5 = 1;
        goto addr_6e94171f_2;
    }
}

int32_t fun_6e941790() {
    return 0x1000;
}

struct s188 {
    signed char[12] pad12;
    int32_t f12;
};

struct s189 {
    signed char[8] pad8;
    int32_t f8;
};

struct s190 {
    signed char[4] pad4;
    int32_t f4;
};

void fun_6e9417ff() {
    int32_t eax1;
    struct s188* ebp2;
    int32_t v3;
    struct s189* ebp4;
    int32_t ebp5;
    struct s190* ebp6;

    eax1 = ebp2->f12;
    v3 = ebp4->f8;
    VirtualProtect(v3, eax1, 16, ebp5 - 12);
    goto ebp6->f4;
}

/* (image base) */
int32_t* image_base_ = reinterpret_cast<int32_t*>(0x6e955d64);

void fun_6e941830() {
    int32_t* edx1;
    int32_t eax2;

    edx1 = image_base_;
    eax2 = *edx1;
    if (eax2) {
        do {
            image_base_ = edx1 + 1;
            eax2();
            edx1 = image_base_;
            eax2 = *edx1;
        } while (eax2);
    }
    return;
}

int32_t fun_6e954be0() {
    int32_t v1;

    if (!v1) 
        goto 0x6e954c00;
    if (v1 == 3) 
        goto 0x6e954c00;
    return 1;
}

uint32_t __clzdi2(uint32_t a1, int32_t a2) {
    int32_t ecx3;

    ecx3 = 0;
    if (!a2) {
        ecx3 = 32;
    }
    __asm__("bsr eax, edx");
    return (a1 ^ 31) + ecx3;
}

int32_t __ctzdi2(int32_t a1, int32_t a2) {
    int32_t ecx3;
    int32_t eax4;
    int1_t zf5;

    ecx3 = a1;
    eax4 = 32;
    zf5 = ecx3 == 0;
    if (zf5) {
        ecx3 = a2;
    }
    if (!zf5) {
        eax4 = 0;
    }
    __asm__("rep bsf ecx, ecx");
    return eax4 + ecx3;
}

uint32_t __paritydi2(uint32_t a1, uint32_t a2) {
    uint32_t eax3;
    uint32_t edx4;
    uint32_t eax5;
    uint32_t ecx6;

    eax3 = a2 ^ a1;
    edx4 = eax3 >> 16 ^ eax3;
    eax5 = edx4 >> 8 ^ edx4;
    ecx6 = (eax5 >> 4 ^ eax5) & 15;
    return reinterpret_cast<uint32_t>(0x6996 >> *reinterpret_cast<signed char*>(&ecx6)) & 1;
}

void __powidf2() {
    uint32_t ecx1;
    uint32_t v2;
    uint32_t eax3;

    __asm__("fld qword [esp+0x4]");
    __asm__("fld st0");
    ecx1 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(v2) >> 31);
    eax3 = (ecx1 ^ v2) - ecx1;
    if (*reinterpret_cast<unsigned char*>(&eax3) & 1) 
        goto 0x6e941e32;
    __asm__("fstp st0");
    __asm__("fld1 ");
    goto 0x6e941e32;
}

void __powixf2() {
    uint32_t ecx1;
    uint32_t v2;
    uint32_t eax3;

    __asm__("fld tword [esp+0x4]");
    ecx1 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(v2) >> 31);
    eax3 = (ecx1 ^ v2) - ecx1;
    __asm__("fld st0");
    if (*reinterpret_cast<unsigned char*>(&eax3) & 1) 
        goto 0x6e941e82;
    __asm__("fstp st0");
    __asm__("fld1 ");
    goto 0x6e941e82;
}

struct s191 {
    int32_t f0;
    int32_t f4;
    int32_t f8;
    void** f12;
};

void __powitf2() {
    void*** esp1;
    void** ecx2;
    void** v3;
    uint32_t edi4;
    int32_t v5;
    void** edx6;
    void** v7;
    uint32_t ebx8;
    uint32_t v9;
    int1_t zf10;
    void** eax11;
    void** v12;
    void** edi13;
    void** ebp14;
    void** v15;
    void** esi16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void** v22;
    void** v23;
    void** v24;
    void** v25;
    void** v26;
    void** v27;
    void** v28;
    void** v29;
    void** v30;
    void** v31;
    void** v32;
    void** v33;
    void** v34;
    void** v35;
    void** v36;
    void** v37;
    void** v38;
    void** v39;
    void** v40;
    void** v41;
    void** v42;
    void** v43;
    void** v44;
    void** v45;
    void** v46;
    void** v47;
    void** v48;
    void** v49;
    void** v50;
    void** v51;
    void** v52;
    void** v53;
    void** v54;
    void** v55;
    void** v56;
    void** v57;
    void** v58;
    void** v59;
    void** v60;
    void** v61;
    void** v62;
    void** v63;
    void** v64;
    void** v65;
    void** v66;
    void** v67;
    void** v68;
    void** v69;
    void** v70;
    int32_t v71;
    void** v72;
    void** v73;
    void** v74;
    void** v75;
    void** v76;
    void** v77;
    int32_t edx78;
    int32_t v79;
    int32_t ecx80;
    int32_t v81;
    int32_t eax82;
    int32_t v83;
    void** v84;
    int32_t v85;
    int32_t v86;
    int32_t v87;
    struct s191* v88;
    int32_t v89;

    esp1 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x6c);
    ecx2 = v3;
    edi4 = reinterpret_cast<uint32_t>(v5 >> 31);
    edx6 = v7;
    ebx8 = (v9 ^ edi4) - edi4;
    zf10 = (ebx8 & 1) == 0;
    if (!zf10) {
    }
    if (!zf10) {
    }
    eax11 = v12;
    edi13 = reinterpret_cast<void**>(esp1 + 80);
    if (!zf10) {
    }
    ebp14 = reinterpret_cast<void**>(0x3fff0000);
    if (!zf10) {
        ebp14 = v15;
    }
    esi16 = v15;
    while (ebx8 = ebx8 >> 1, !!ebx8) {
        do {
            v17 = ecx2;
            v18 = edx6;
            v19 = eax11;
            __multf3(edi13, v20, v21, v22, v17, v18, v19, esi16, ecx2, edx6, eax11, esi16, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42);
            esp1 = esp1 - 4 + 12 + 4;
            ecx2 = v43;
            edx6 = v44;
            eax11 = v45;
            esi16 = v46;
            if (!(*reinterpret_cast<unsigned char*>(&ebx8) & 1)) 
                break;
            __multf3(edi13, v17, v18, v19, v47, v48, v49, ebp14, ecx2, edx6, eax11, esi16, v50, v51, v52, v53, v54, eax11, edx6, ecx2, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66);
            esp1 = esp1 - 4 + 12 + 4;
            ebx8 = ebx8 >> 1;
            ebp14 = v67;
            ecx2 = v68;
            edx6 = v69;
            eax11 = v70;
        } while (ebx8);
        break;
    }
    if (v71 < 0) {
        __divtf3(esp1 + 80, v72, v73, v74, 0, 0, 0, 0x3fff0000, v75, v76, v77, ebp14);
        edx78 = v79;
        ecx80 = v81;
        eax82 = v83;
        ebp14 = v84;
    } else {
        edx78 = v85;
        ecx80 = v86;
        eax82 = v87;
    }
    v88->f8 = eax82;
    v88->f0 = edx78;
    v88->f4 = ecx80;
    v88->f12 = ebp14;
    goto v89;
}

int32_t g6e95728c = 0x3f800000;

int32_t __mulsc3() {
    int32_t eax1;
    uint1_t pf2;
    int32_t v3;
    unsigned char cl4;
    int32_t edx5;
    unsigned char dl6;
    int1_t pf7;
    int1_t pf8;

    __asm__("fld dword [esp+0x24]");
    __asm__("fld dword [esp+0x28]");
    __asm__("fld dword [esp+0x2c]");
    __asm__("fld dword [esp+0x30]");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fstp dword [esp+0x10]");
    __asm__("fld st2");
    __asm__("fmul st0, st1");
    __asm__("fstp dword [esp+0x14]");
    __asm__("fld st3");
    __asm__("fmul st0, st1");
    __asm__("fstp dword [esp+0x18]");
    __asm__("fld st2");
    __asm__("fmul st0, st2");
    __asm__("fstp dword [esp+0x1c]");
    __asm__("fld dword [esp+0x10]");
    __asm__("fld dword [esp+0x14]");
    __asm__("fst dword [esp]");
    __asm__("fld st1");
    __asm__("fsubrp st1, st0");
    __asm__("fld dword [esp+0x18]");
    __asm__("fld st0");
    __asm__("fstp dword [esp+0x8]");
    __asm__("fld dword [esp+0x1c]");
    __asm__("fadd st1, st0");
    __asm__("fxch st0, st1");
    __asm__("fst dword [esp+0x4]");
    __asm__("fxch st0, st2");
    __asm__("fucomi st0, st0");
    if (__intrinsic()) {
        __asm__("fxch st0, st2");
        __asm__("fucomip st0, st0");
        if (!__intrinsic()) {
            __asm__("fstp st0");
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st1");
        } else {
            __asm__("fld st6");
            __asm__("fsub st0, st7");
            __asm__("fucomip st0, st0");
            if (!__intrinsic()) {
                addr_6e942123_5:
                __asm__("fld st5");
                __asm__("fsub st0, st6");
                __asm__("fucomip st0, st0");
                if (!__intrinsic()) {
                    addr_6e942132_6:
                    __asm__("fxch st0, st4");
                    eax1 = 0;
                    pf2 = __intrinsic();
                    goto addr_6e942136_7;
                } else {
                    __asm__("fxch st0, st5");
                    __asm__("fucomi st0, st0");
                    if (__intrinsic()) 
                        goto addr_6e942130_10; else 
                        goto addr_6e94237a_11;
                }
            } else {
                __asm__("fxch st0, st6");
                __asm__("fucomi st0, st0");
                if (__intrinsic()) 
                    goto addr_6e942121_14; else 
                    goto addr_6e942400_15;
            }
        }
    } else {
        __asm__("fstp st6");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st1");
    }
    addr_6e942100_17:
    __asm__("fstp dword [esp]");
    return v3;
    addr_6e942136_7:
    __asm__("fucomi st0, st0");
    __asm__("fld st0");
    cl4 = pf2;
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (pf2) {
        pf2 = __intrinsic();
        if (cl4) {
            __asm__("fxch st0, st3");
        } else {
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
            __asm__("fxam ");
            __asm__("fstp st0");
            edx5 = g6e95728c;
            v3 = edx5;
            __asm__("fld dword [esp]");
            __asm__("fld1 ");
            __asm__("fchs ");
            __asm__("fcmove st0, st1");
            __asm__("fstp st1");
            __asm__("fld st1");
            __asm__("fsub st0, st2");
            __asm__("fucomip st0, st0");
            if (!__intrinsic()) {
                addr_6e942367_21:
                __asm__("fldz ");
                __asm__("fxch st0, st2");
                goto addr_6e9422d3_22;
            } else {
                __asm__("fxch st0, st1");
                __asm__("fucomi st0, st0");
                if (__intrinsic()) 
                    goto addr_6e942365_25; else 
                    goto addr_6e942446_26;
            }
        }
    } else {
        __asm__("fxch st0, st3");
    }
    __asm__("fucomi st0, st0");
    __asm__("fld st0");
    dl6 = pf2;
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (!pf2 || dl6) {
        pf7 = __intrinsic();
        if (*reinterpret_cast<signed char*>(&eax1)) {
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
        } else {
            __asm__("fld st2");
            __asm__("fsub st0, st3");
            __asm__("fucomip st0, st0");
            if (pf7) {
                __asm__("fxch st0, st2");
                __asm__("fucomip st0, st0");
                if (!pf7) {
                    __asm__("fstp st0");
                    __asm__("fstp st2");
                    __asm__("fxch st0, st3");
                    goto addr_6e9421cb_34;
                } else {
                    __asm__("fxch st0, st1");
                    goto addr_6e942176_36;
                }
            } else {
                __asm__("fstp st2");
                __asm__("fxch st0, st1");
                goto addr_6e942176_36;
            }
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fld1 ");
        __asm__("fxch st0, st2");
        goto addr_6e9422d3_22;
    }
    addr_6e942253_39:
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fsubp st1, st0");
    __asm__("fld dword [0x6e957290]");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st5");
    __asm__("fmulp st2, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st2, st0");
    __asm__("faddp st1, st0");
    __asm__("fmulp st2, st0");
    __asm__("fxch st0, st1");
    __asm__("fstp dword [esp+0x4]");
    goto addr_6e942100_17;
    addr_6e9421cb_34:
    __asm__("fucomi st0, st0");
    if (!pf7) {
        __asm__("fxch st0, st2");
    } else {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        pf7 = __intrinsic();
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st2");
    }
    __asm__("fucomi st0, st0");
    if (pf7) {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
    }
    if (cl4) {
        __asm__("fxch st0, st3");
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st3");
    }
    if (!dl6) {
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st3");
        __asm__("fxch st0, st1");
        goto addr_6e942253_39;
    } else {
        __asm__("fxch st0, st1");
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st3");
        __asm__("fxch st0, st1");
        goto addr_6e942253_39;
    }
    addr_6e942176_36:
    __asm__("fld dword [esp]");
    __asm__("fld st0");
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (pf7) {
        __asm__("fucomip st0, st0");
        if (!pf7) {
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fxch st0, st3");
            goto addr_6e9421cb_34;
        }
    } else {
        __asm__("fstp st0");
    }
    __asm__("fld dword [esp+0x8]");
    __asm__("fld st0");
    __asm__("fsub st0, st1");
    __asm__("fucomip st0, st0");
    if (pf7) {
        __asm__("fucomip st0, st0");
        if (!pf7) {
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fxch st0, st3");
            goto addr_6e9421cb_34;
        }
    } else {
        __asm__("fstp st0");
    }
    __asm__("fld st3");
    __asm__("fsub st0, st4");
    __asm__("fucomip st0, st0");
    if (!pf7) {
        __asm__("fstp st0");
        __asm__("fstp st3");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fstp st1");
        goto addr_6e942100_17;
    } else {
        __asm__("fxch st0, st3");
        __asm__("fucomip st0, st0");
        if (pf7) {
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
            __asm__("fstp st1");
            goto addr_6e942100_17;
        } else {
            __asm__("fstp st0");
            __asm__("fxch st0, st3");
            goto addr_6e9421cb_34;
        }
    }
    addr_6e9422d3_22:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    pf8 = __intrinsic();
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fxch st0, st3");
    __asm__("fucomi st0, st0");
    if (!pf8) {
        __asm__("fxch st0, st2");
    } else {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        pf8 = __intrinsic();
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st2");
    }
    __asm__("fucomi st0, st0");
    if (!pf8) {
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st3");
        goto addr_6e942253_39;
    } else {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st3");
        goto addr_6e942253_39;
    }
    addr_6e942365_25:
    __asm__("fxch st0, st1");
    goto addr_6e942367_21;
    addr_6e942446_26:
    __asm__("fld dword [esp]");
    __asm__("fxch st0, st2");
    __asm__("fxch st0, st1");
    goto addr_6e9422d3_22;
    addr_6e942130_10:
    __asm__("fxch st0, st5");
    goto addr_6e942132_6;
    addr_6e94237a_11:
    __asm__("fxch st0, st6");
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fldz ");
    __asm__("fldz ");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld1 ");
    __asm__("fstp dword [esp+0xc]");
    addr_6e942395_68:
    __asm__("fxch st0, st6");
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fld dword [esp+0xc]");
    pf2 = __intrinsic();
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fxch st0, st4");
    __asm__("fucomi st0, st0");
    if (!pf2) {
        __asm__("fxch st0, st3");
    } else {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        pf2 = __intrinsic();
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
        __asm__("fxch st0, st3");
    }
    __asm__("fucomi st0, st0");
    if (pf2) {
        __asm__("fxam ");
        __asm__("fstp st0");
        __asm__("fldz ");
        pf2 = __intrinsic();
        __asm__("fldz ");
        __asm__("fchs ");
        __asm__("fcmove st0, st1");
        __asm__("fstp st1");
    }
    __asm__("fxch st0, st3");
    __asm__("fxch st0, st4");
    __asm__("fxch st0, st5");
    __asm__("fxch st0, st4");
    eax1 = 1;
    goto addr_6e942136_7;
    addr_6e942121_14:
    __asm__("fxch st0, st6");
    goto addr_6e942123_5;
    addr_6e942400_15:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fld dword [esp+0xc]");
    __asm__("fld1 ");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st5");
    __asm__("fsub st0, st6");
    __asm__("fucomip st0, st0");
    if (!__intrinsic()) {
        addr_6e94242b_74:
        __asm__("fldz ");
        __asm__("fstp dword [esp+0xc]");
        __asm__("fxch st0, st5");
        __asm__("fxch st0, st6");
        __asm__("fxch st0, st5");
        goto addr_6e942395_68;
    } else {
        __asm__("fxch st0, st5");
        __asm__("fucomi st0, st0");
        if (!__intrinsic()) 
            goto addr_6e942458_77;
    }
    __asm__("fxch st0, st5");
    goto addr_6e94242b_74;
    addr_6e942458_77:
    __asm__("fxch st0, st6");
    __asm__("fxch st0, st5");
    goto addr_6e942395_68;
}

void fun_6e947864() {
}

int32_t g6e95729c = 0x3f800000;

int32_t __divsc3() {
    int32_t eax1;
    int32_t edx2;
    uint1_t pf3;
    int1_t zf4;
    int32_t v5;
    unsigned char dl6;
    uint1_t pf7;
    uint32_t eax8;
    int32_t edx9;
    int32_t edx10;

    __asm__("fld dword [esp+0x8]");
    __asm__("fld dword [esp+0xc]");
    __asm__("fld dword [esp+0x10]");
    __asm__("fld dword [esp+0x14]");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fld st1");
    __asm__("fabs ");
    __asm__("fucomip st0, st1");
    __asm__("fstp st0");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) <= 4) {
        __asm__("fld st0");
        __asm__("fdiv st0, st2");
        __asm__("fld st1");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st3");
        __asm__("fld st4");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st6");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st6");
        __asm__("fsubr st0, st5");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    } else {
        __asm__("fld st1");
        __asm__("fdiv st0, st1");
        __asm__("fld st2");
        __asm__("fmul st0, st1");
        __asm__("fadd st0, st2");
        __asm__("fld st5");
        __asm__("fmul st0, st2");
        __asm__("fadd st0, st5");
        __asm__("fdiv st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fmul st0, st5");
        __asm__("fsub st0, st6");
        __asm__("fdivrp st1, st0");
        __asm__("fxch st0, st1");
    }
    __asm__("fucomi st0, st0");
    if (__intrinsic()) {
        __asm__("fxch st0, st1");
        __asm__("fucomi st0, st0");
        if (!__intrinsic()) {
            __asm__("fstp st5");
            __asm__("fstp st3");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fldz ");
            eax1 = 0;
            __asm__("fucomi st0, st4");
            *reinterpret_cast<unsigned char*>(&edx2) = reinterpret_cast<uint1_t>(!__intrinsic());
            if (reinterpret_cast<uint32_t>(__zero_stack_offset()) - 4) {
                edx2 = 0;
            }
            pf3 = __intrinsic();
            zf4 = *reinterpret_cast<unsigned char*>(&edx2) == 0;
            if (zf4) 
                goto addr_6e9447e6_10; else 
                goto addr_6e94479a_11;
        }
    } else {
        __asm__("fstp st4");
        __asm__("fstp st4");
        __asm__("fstp st0");
        __asm__("fstp st0");
    }
    addr_6e944753_13:
    __asm__("fstp dword [esp]");
    __asm__("fstp dword [esp]");
    return v5;
    addr_6e9447e6_10:
    __asm__("fstp st0");
    addr_6e9447e8_14:
    __asm__("fld st5");
    __asm__("fsub st0, st6");
    __asm__("fucomip st0, st0");
    dl6 = pf3;
    pf7 = __intrinsic();
    eax8 = dl6;
    if (!dl6) {
        addr_6e9447ff_15:
        __asm__("fld st4");
        __asm__("fsub st0, st5");
        __asm__("fucomip st0, st0");
        if (!pf7) {
            addr_6e94480e_16:
            __asm__("fld st3");
            __asm__("fsub st0, st4");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st5");
            __asm__("fxch st0, st1");
            goto addr_6e944818_17;
        } else {
            __asm__("fxch st0, st4");
            pf7 = __intrinsic();
            __asm__("fucomi st0, st0");
            if (!pf7) 
                goto addr_6e94491b_20;
        }
    } else {
        __asm__("fxch st0, st5");
        __asm__("fucomi st0, st0");
        if (pf7) 
            goto addr_6e9447fd_23; else 
            goto addr_6e9449ce_24;
    }
    __asm__("fxch st0, st4");
    goto addr_6e94480e_16;
    addr_6e94491b_20:
    __asm__("fld st3");
    __asm__("fsub st0, st4");
    __asm__("fucomi st0, st0");
    if (pf7) {
        addr_6e944818_17:
        __asm__("fucomip st0, st0");
        if (pf7) {
            __asm__("fxch st0, st3");
            __asm__("fucomi st0, st0");
            if (!pf7) {
                addr_6e94483c_27:
                if (eax8) {
                    __asm__("fstp st0");
                    __asm__("fstp st4");
                    __asm__("fstp st0");
                    __asm__("fstp st0");
                    __asm__("fxch st0, st1");
                    goto addr_6e944753_13;
                } else {
                    __asm__("fld st3");
                    __asm__("fsub st0, st4");
                    __asm__("fucomip st0, st0");
                    if (__intrinsic()) {
                        __asm__("fstp st0");
                        __asm__("fstp st4");
                        __asm__("fstp st0");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        goto addr_6e944753_13;
                    } else {
                        __asm__("fstp st4");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        __asm__("fxch st0, st2");
                        edx9 = g6e95729c;
                        __asm__("fldz ");
                        v5 = edx9;
                        __asm__("fld dword [esp]");
                        __asm__("fxch st0, st1");
                        __asm__("fcmovne st0, st1");
                        __asm__("fxch st0, st2");
                        __asm__("fxam ");
                        __asm__("fstp st0");
                        __asm__("fxch st0, st1");
                        __asm__("fabs ");
                        __asm__("fld st0");
                        __asm__("fchs ");
                        __asm__("fcmove st0, st1");
                        __asm__("fstp st1");
                        __asm__("fld st2");
                        __asm__("fsub st0, st3");
                        __asm__("fucomip st0, st0");
                        if (__intrinsic()) {
                            __asm__("fxch st0, st2");
                            __asm__("fucomi st0, st0");
                            if (__intrinsic()) {
                                __asm__("fstp st1");
                                __asm__("fxch st0, st1");
                            } else {
                                __asm__("fxch st0, st1");
                                __asm__("fxch st0, st2");
                                __asm__("fxch st0, st1");
                                goto addr_6e944897_35;
                            }
                        } else {
                            __asm__("fstp st1");
                        }
                    }
                }
            } else {
                __asm__("fxch st0, st3");
                goto addr_6e944820_38;
            }
        } else {
            addr_6e944820_38:
            __asm__("fld st2");
            __asm__("fsub st0, st3");
            goto addr_6e944824_39;
        }
    } else {
        __asm__("fstp st0");
        __asm__("fld st2");
        __asm__("fsub st0, st3");
        __asm__("fucomi st0, st0");
        if (pf7) {
            addr_6e944824_39:
            __asm__("fucomip st0, st0");
            if (!pf7) {
                __asm__("fstp st0");
                __asm__("fstp st4");
                __asm__("fstp st0");
                __asm__("fstp st0");
                __asm__("fxch st0, st1");
                goto addr_6e944753_13;
            } else {
                __asm__("fxch st0, st2");
                __asm__("fucomi st0, st0");
                if (pf7) {
                    __asm__("fstp st0");
                    __asm__("fstp st4");
                    __asm__("fstp st0");
                    __asm__("fstp st0");
                    __asm__("fxch st0, st1");
                    goto addr_6e944753_13;
                } else {
                    __asm__("fxch st0, st2");
                    __asm__("fxch st0, st3");
                    goto addr_6e94483c_27;
                }
            }
        } else {
            __asm__("fstp st0");
            __asm__("fstp st4");
            __asm__("fstp st0");
            __asm__("fxch st0, st1");
            __asm__("fxch st0, st2");
            edx10 = g6e95729c;
            __asm__("fldz ");
            v5 = edx10;
            __asm__("fld dword [esp]");
            __asm__("fxch st0, st1");
            __asm__("fcmovne st0, st1");
            __asm__("fxch st0, st5");
            __asm__("fxam ");
            __asm__("fstp st0");
            __asm__("fxch st0, st4");
            __asm__("fabs ");
            __asm__("fld st0");
            __asm__("fchs ");
            __asm__("fcmove st0, st1");
            __asm__("fstp st1");
            __asm__("fld st1");
            __asm__("fsub st0, st2");
            __asm__("fucomip st0, st0");
            if (__intrinsic()) {
                __asm__("fxch st0, st1");
                __asm__("fucomi st0, st0");
                if (__intrinsic()) {
                    __asm__("fstp st4");
                    __asm__("fxch st0, st1");
                    __asm__("fxch st0, st2");
                    __asm__("fxch st0, st3");
                    __asm__("fxch st0, st1");
                    goto addr_6e944986_48;
                } else {
                    __asm__("fxch st0, st2");
                    __asm__("fxch st0, st3");
                    __asm__("fxch st0, st4");
                    __asm__("fxch st0, st2");
                    goto addr_6e94498a_50;
                }
            } else {
                __asm__("fstp st4");
                __asm__("fxch st0, st1");
                __asm__("fxch st0, st2");
                __asm__("fxch st0, st3");
                goto addr_6e944986_48;
            }
        }
    }
    __asm__("fldz ");
    __asm__("fxch st0, st2");
    addr_6e944897_35:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("fld st3");
    __asm__("fmul st0, st2");
    __asm__("faddp st1, st0");
    __asm__("fldz ");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st1");
    __asm__("fmulp st4, st0");
    __asm__("fxch st0, st2");
    __asm__("fsubrp st3, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944753_13;
    addr_6e944986_48:
    __asm__("fldz ");
    __asm__("fxch st0, st2");
    addr_6e94498a_50:
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fxch st0, st1");
    __asm__("fabs ");
    __asm__("fld st0");
    __asm__("fchs ");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fld st1");
    __asm__("fmul st0, st4");
    __asm__("fld st1");
    __asm__("fmul st0, st4");
    __asm__("faddp st1, st0");
    __asm__("fld dword [0x6e9572a0]");
    __asm__("fmul st1, st0");
    __asm__("fxch st0, st2");
    __asm__("fmulp st5, st0");
    __asm__("fxch st0, st3");
    __asm__("fmulp st2, st0");
    __asm__("fxch st0, st3");
    __asm__("fsubrp st1, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944753_13;
    addr_6e9447fd_23:
    __asm__("fxch st0, st5");
    goto addr_6e9447ff_15;
    addr_6e9449ce_24:
    __asm__("fxch st0, st5");
    __asm__("fxch st0, st4");
    goto addr_6e94491b_20;
    addr_6e94479a_11:
    __asm__("fucomip st0, st3");
    *reinterpret_cast<unsigned char*>(&edx2) = reinterpret_cast<uint1_t>(!pf3);
    if (zf4) {
        eax1 = edx2;
    }
    pf3 = __intrinsic();
    if (!*reinterpret_cast<signed char*>(&eax1)) 
        goto addr_6e9447e8_14;
    __asm__("fxch st0, st5");
    __asm__("fucomi st0, st0");
    if (pf3) {
        __asm__("fxch st0, st4");
        __asm__("fucomi st0, st0");
        if (!pf3) {
            __asm__("fstp st5");
            __asm__("fstp st0");
            __asm__("fstp st0");
        } else {
            __asm__("fld st4");
            eax8 = 0;
            pf7 = __intrinsic();
            __asm__("fsub st0, st5");
            __asm__("fucomip st0, st0");
            __asm__("fxch st0, st4");
            __asm__("fxch st0, st5");
            *reinterpret_cast<unsigned char*>(&eax8) = pf7;
            goto addr_6e94480e_16;
        }
    } else {
        __asm__("fstp st5");
        __asm__("fstp st0");
        __asm__("fstp st0");
        __asm__("fxch st0, st1");
        __asm__("fxch st0, st2");
        __asm__("fxch st0, st1");
    }
    __asm__("fxam ");
    __asm__("fstp st0");
    __asm__("fld dword [0x6e9572a0]");
    __asm__("fld dword [0x6e9572a4]");
    __asm__("fcmove st0, st1");
    __asm__("fstp st1");
    __asm__("fmul st1, st0");
    __asm__("fmulp st2, st0");
    goto addr_6e944753_13;
}

void fun_6e944a7c() {
}

void fun_6e944d8c() {
}

uint32_t __bswapdi2(int32_t a1, uint32_t a2) {
    return a2 >> 24 | a2 >> 8 & 0xff00 | a2 << 8 & 0xff0000 | a2 << 24;
}

uint32_t __clrsbdi2(uint32_t a1, uint32_t a2) {
    uint32_t edx3;
    uint32_t eax4;

    edx3 = a1;
    if (!a2 || (edx3 = ~edx3, a2 == 0xffffffff)) {
        eax4 = 63;
        if (!edx3) {
            addr_6e946c06_3:
            return eax4;
        } else {
            *reinterpret_cast<signed char*>(&eax4) = 32;
        }
    } else {
        __asm__("cdq ");
        edx3 = edx3 ^ a2;
        eax4 = 0;
    }
    __asm__("bsr edx, edx");
    eax4 = (edx3 ^ 31) + eax4 - 1;
    goto addr_6e946c06_3;
}

int32_t __fixunsdfsi() {
    int32_t v1;
    int32_t v2;

    __asm__("fld qword [esp+0x10]");
    __asm__("fld dword [0x6e9572bc]");
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) >= 12) {
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fsubrp st1, st0");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v1 - 0x80000000;
    } else {
        __asm__("fstp st1");
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v2;
    }
}

int32_t __fixunsxfsi() {
    int32_t v1;
    int32_t v2;

    __asm__("fld tword [esp+0xc]");
    __asm__("fld dword [0x6e9572c0]");
    __asm__("fxch st0, st1");
    __asm__("fucomi st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) >= 8) {
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fsubrp st1, st0");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v1 - 0x80000000;
    } else {
        __asm__("fstp st1");
        __asm__("fnstcw word [esp+0x6]");
        __asm__("fldcw word [esp+0x4]");
        __asm__("fistp dword [esp]");
        __asm__("fldcw word [esp+0x6]");
        return v2;
    }
}

int32_t __fixsfdi() {
    int32_t eax1;

    __asm__("fld dword [esp+0x20]");
    __asm__("fldz ");
    __asm__("fucomip st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) > 28) {
        __asm__("fchs ");
        __asm__("fstp dword [esp]");
        eax1 = __fixunssfdi();
        return -eax1;
    } else {
        __asm__("fstp st0");
        goto __fixunssfdi;
    }
}

int32_t __fixdfdi() {
    int32_t eax1;

    __asm__("fld qword [esp+0x20]");
    __asm__("fldz ");
    __asm__("fucomip st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) > 28) {
        __asm__("fchs ");
        __asm__("fstp qword [esp]");
        eax1 = __fixunsdfdi();
        return -eax1;
    } else {
        __asm__("fstp st0");
        goto __fixunsdfdi;
    }
}

int32_t __fixxfdi() {
    int32_t eax1;

    __asm__("fld tword [esp+0x20]");
    __asm__("fldz ");
    __asm__("fucomip st0, st1");
    if (reinterpret_cast<uint32_t>(__zero_stack_offset()) > 28) {
        __asm__("fchs ");
        __asm__("fstp tword [esp]");
        eax1 = __fixunsxfdi();
        return -eax1;
    } else {
        __asm__("fstp st0");
        goto __fixunsxfdi;
    }
}

void __floatdisf(uint32_t a1, int32_t a2) {
    uint32_t tmp32_3;
    uint32_t ebx4;

    tmp32_3 = a1 - 1;
    ebx4 = a2 + 0x1fffff + reinterpret_cast<uint1_t>(tmp32_3 < a1);
    if (ebx4 < 0x3fffff) 
        goto addr_6e946f7c_2;
    if (ebx4 <= 0x3fffff) {
        if (tmp32_3 <= 0xfffffffe) {
            addr_6e946f7c_2:
            __asm__("fild dword [esp+0x8]");
            __asm__("fmul dword [0x6e9572dc]");
            __asm__("fild qword [esp]");
            __asm__("faddp st1, st0");
            __asm__("fstp dword [esp+0xc]");
            __asm__("fld dword [esp+0xc]");
            return;
        }
    }
    if (a1 & 0x7ff) {
        goto addr_6e946f7c_2;
    }
}

int32_t __floatdixf(int32_t a1) {
    __asm__("fild dword [esp+0x14]");
    __asm__("fmul dword [0x6e9572e4]");
    __asm__("fild qword [esp]");
    __asm__("faddp st1, st0");
    return a1;
}

int32_t __floatundidf(int32_t a1, int32_t a2) {
    __asm__("fild qword [esp]");
    __asm__("fmul dword [0x6e9572ec]");
    __asm__("fild qword [esp]");
    __asm__("faddp st1, st0");
    return a1;
}

void __moddi3(int32_t a1, uint32_t a2, uint32_t a3, int32_t a4) {
    uint32_t ebp5;
    uint32_t ecx6;
    int32_t ebx7;
    uint1_t cf8;

    ebp5 = a2;
    if (reinterpret_cast<int32_t>(a2) < reinterpret_cast<int32_t>(0)) {
        ebp5 = -(ebp5 + reinterpret_cast<uint1_t>(!!a1));
    }
    ecx6 = a3;
    ebx7 = a4;
    if (a4 < 0) {
        cf8 = reinterpret_cast<uint1_t>(!!ecx6);
        ecx6 = -ecx6;
        ebx7 = reinterpret_cast<int32_t>(-(ebx7 + cf8));
    }
    if (ebx7) 
        goto 0x6e947280;
    if (ecx6 <= ebp5) {
        if (!ecx6) {
        }
    }
    goto 0x6e947288;
}

void fun_6e9474ba() {
}

void fun_6e94740d() {
}

uint32_t __umoddi3(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    uint32_t v5;
    uint32_t edi6;
    uint32_t edi7;
    uint32_t ecx8;
    uint32_t ebx9;
    uint32_t ecx10;
    uint32_t ecx11;
    uint32_t v12;
    uint32_t ecx13;
    uint32_t ecx14;
    uint32_t ecx15;
    uint32_t eax16;

    v5 = a1;
    if (!a4) {
        if (a3 <= a2) 
            goto 0x6e947550;
    }
    if (a4 > a2) 
        goto 0x6e947570;
    __asm__("bsr edi, eax");
    edi6 = edi7 ^ 31;
    if (!edi6) 
        goto addr_6e947520_6;
    ecx8 = edi6;
    ebx9 = 32 - edi6;
    ecx10 = ebx9;
    ecx11 = edi6;
    v12 = a3 >> *reinterpret_cast<signed char*>(&ecx10) | a4 << *reinterpret_cast<unsigned char*>(&ecx8);
    ecx13 = edi6;
    ecx14 = ebx9;
    ecx15 = edi6;
    eax16 = a1 >> *reinterpret_cast<signed char*>(&ecx14) | a2 << *reinterpret_cast<unsigned char*>(&ecx13);
    if (eax16 % v12 < __intrinsic()) 
        goto 0x6e947604;
    if (a1 << *reinterpret_cast<unsigned char*>(&ecx15) < eax16 / v12 * (a3 << *reinterpret_cast<unsigned char*>(&ecx11))) 
        goto 0x6e947600; else 
        goto "???";
    addr_6e947520_6:
    if (a3 <= v5 || a4 < a2) {
        v5 = a1 - a3;
    }
    return v5;
}

struct s192 {
    uint32_t f0;
    int32_t f4;
};

uint32_t __udivmoddi4(int32_t a1, uint32_t a2, uint32_t a3, int32_t a4, struct s192* a5) {
    uint32_t edi6;
    uint32_t eax7;
    uint32_t ebp8;

    if (a4) 
        goto 0x6e947690;
    if (a3 <= a2) {
        edi6 = a3;
        if (!a3) {
            edi6 = 1 / a3;
        }
        eax7 = a1 / edi6;
        ebp8 = a1 % edi6;
    } else {
        eax7 = a1 / a3;
        ebp8 = a1 % a3;
    }
    if (!a5) 
        goto 0x6e9476ad;
    a5->f0 = ebp8;
    a5->f4 = 0;
    return eax7;
}

void fun_6e947809() {
}

void fun_6e9477dc() {
}

void fun_6e9477bd() {
}

void fun_6e94b50a() {
}

void fun_6e95184c() {
}

void fun_6e951cea() {
}

void fun_6e95201d() {
}

void fun_6e951edc() {
}

void fun_6e951d29() {
}

void fun_6e95211d() {
}

void fun_6e9533fc() {
}

void fun_6e954621(int32_t a1) {
    if (a1 == 1) 
        goto 0x6e954650; else 
        goto "???";
}

void __negtf2() {
    void* esp1;
    uint32_t eax2;
    uint32_t v3;
    uint32_t ecx4;
    uint32_t ebp5;
    void* ebx6;
    void* eax7;
    uint32_t v8;
    uint32_t v9;
    uint32_t v10;

    esp1 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 76);
    eax2 = v3;
    ecx4 = *reinterpret_cast<uint16_t*>(&eax2);
    ebp5 = eax2 >> 16 & 0x7fff;
    if (ebp5) {
        if (ebp5 == 0x7fff) 
            goto 0x6e94bf70;
        ebx6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + 32);
        eax7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + 44);
        while (1) {
            eax7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax7) - 4);
            if (eax7 == ebx6) 
                goto 0x6e94c060;
        }
    }
    if (!(v8 | v9 | v10 | ecx4)) 
        goto 0x6e94c120;
    if (ecx4) 
        goto addr_6e94bfab_8;
    if (v10) 
        goto 0x6e94c380;
    if (!v8) 
        goto 0x6e94c3b0;
    __asm__("bsr ebx, ebx");
    goto 0x6e94bfb7;
    addr_6e94bfab_8:
    __asm__("bsr eax, ecx");
}

void fun_6e94bcec() {
}

void fun_6e94bc0c() {
}

void fun_6e94c23a() {
}

void fun_6e94c3cc() {
}

void fun_6e94e6ac() {
}

void __fixunstfsi(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    uint32_t eax5;
    uint32_t esi6;
    uint32_t eax7;

    eax5 = a4;
    esi6 = eax5 >> 16 & 0x7fff;
    eax7 = eax5 >> 24;
    if (reinterpret_cast<int32_t>(esi6) > reinterpret_cast<int32_t>(0x3ffe)) {
        if (!(*reinterpret_cast<unsigned char*>(&eax7) >> 7)) {
            if (reinterpret_cast<int32_t>(esi6) <= reinterpret_cast<int32_t>(0x401e)) 
                goto 0x6e94e7b0;
            goto 0x6e94e775;
        }
    } else {
        if (esi6) {
            goto 0x6e94e775;
        } else {
            if (!(a1 | a2 | a3 | static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax5)))) 
                goto 0x6e94e785;
            goto 0x6e94e775;
        }
    }
}

void fun_6e94e78c() {
}

struct s193 {
    uint32_t f0;
    int32_t f4;
    int32_t f8;
    int32_t f12;
};

void __floatsitf(struct s193* a1, uint32_t a2) {
    unsigned char* esp3;
    uint32_t edx4;
    struct s193* eax5;
    uint32_t ebp6;
    uint32_t edi7;
    uint32_t esi8;
    uint32_t ebx9;
    uint32_t edi10;
    uint32_t ebx11;
    uint32_t ebx12;
    uint32_t esi13;
    uint32_t v14;
    uint32_t ebx15;
    uint32_t ecx16;
    int32_t esi17;
    unsigned char ebx18;
    uint32_t v19;
    uint32_t v20;
    int32_t v21;
    int32_t v22;
    unsigned char v23;
    int32_t v24;
    uint32_t esi25;
    uint16_t v26;
    uint32_t esi27;
    uint32_t edx28;
    int32_t esi29;
    uint32_t* ebp30;
    uint32_t* edx31;
    uint32_t v32;
    struct s193* edi33;
    uint32_t ecx34;
    uint32_t ecx35;
    uint32_t ecx36;
    int32_t* ebp37;
    int32_t* edx38;
    int32_t* ebx39;
    void* ecx40;

    esp3 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 64);
    edx4 = a2;
    eax5 = a1;
    if (!edx4) {
        ebp6 = 0;
        edi7 = 0;
        esi8 = 0;
        ebx9 = 0;
    } else {
        edi10 = edx4 >> 31;
        ebx11 = edi10;
        if (*reinterpret_cast<signed char*>(&ebx11)) {
            edx4 = -edx4;
        }
        __asm__("bsr ebx, edx");
        ebx12 = ebx11 ^ 31;
        esi13 = ebx12 + 0x70;
        v14 = 0x401e - ebx12;
        ebx15 = ebx12 + 81;
        if (reinterpret_cast<int32_t>(ebx15) >= reinterpret_cast<int32_t>(0)) {
            esi13 = ebx15;
        }
        ecx16 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx15) >> 31) >> 27;
        esi17 = reinterpret_cast<int32_t>(esi13) >> 5;
        ebx18 = reinterpret_cast<unsigned char>((ebx15 + ecx16 & 31) - ecx16);
        v19 = edi10;
        v20 = edx4;
        v21 = 0;
        v22 = esi17;
        v23 = ebx18;
        if (ebx18) 
            goto addr_6e94e9c6_8; else 
            goto addr_6e94e911_9;
    }
    addr_6e94e984_10:
    *reinterpret_cast<int16_t*>(&v24) = *reinterpret_cast<int16_t*>(&esi8);
    esi25 = v26;
    *reinterpret_cast<uint16_t*>(&esi25) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi25) & 0x8000);
    esi27 = esi25 | edi7;
    *reinterpret_cast<uint16_t*>(reinterpret_cast<int32_t>(&v24) + 2) = *reinterpret_cast<uint16_t*>(&esi27);
    *reinterpret_cast<uint16_t*>(&esi27) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&esi27) >> 8);
    edx28 = esi27 & 0x7f | ebp6 << 7;
    *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(&v24) + 3) = *reinterpret_cast<signed char*>(&edx28);
    eax5->f0 = ebx9;
    eax5->f4 = 0;
    eax5->f8 = 0;
    eax5->f12 = v24;
    return;
    addr_6e94e9c6_8:
    if (esi17 > 2) {
        esi29 = 2;
        v22 = 3;
    } else {
        ebp30 = reinterpret_cast<uint32_t*>(esp3 + 36);
        edx31 = ebp30 + (3 - esi17);
        v32 = 32 - v23;
        edi33 = eax5;
        do {
            ecx34 = *reinterpret_cast<unsigned char*>(&v32);
            ecx35 = v23;
            edx31[esi17] = *(edx31 - 1) >> *reinterpret_cast<signed char*>(&ecx34) | *edx31 << *reinterpret_cast<unsigned char*>(&ecx35);
            --edx31;
        } while (edx31 != ebp30);
        edx4 = v20;
        eax5 = edi33;
        esi29 = esi17 - 1;
    }
    ecx36 = v23;
    *reinterpret_cast<uint32_t*>(esp3 + v22 * 4 + 36) = edx4 << *reinterpret_cast<unsigned char*>(&ecx36);
    addr_6e94e939_16:
    if (esi29 < 0) {
        addr_6e94e94e_17:
        ebx9 = v20;
        esi8 = *reinterpret_cast<uint16_t*>(&v21);
        edi7 = *reinterpret_cast<uint16_t*>(&v14);
        ebp6 = *reinterpret_cast<unsigned char*>(&v19);
        *reinterpret_cast<uint16_t*>(&edi7) = reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&edi7) & 0x7fff);
        goto addr_6e94e984_10;
    } else {
        addr_6e94e93d_18:
        ebp37 = reinterpret_cast<int32_t*>(esp3 + 36);
    }
    do {
        ebp37[esi29] = 0;
        --esi29;
    } while (esi29 >= 0);
    goto addr_6e94e94e_17;
    addr_6e94e911_9:
    if (esi17 > 3) {
        esi29 = 3;
        goto addr_6e94e93d_18;
    } else {
        edx38 = reinterpret_cast<int32_t*>(esp3 + 48);
        ebx39 = reinterpret_cast<int32_t*>(esp3 + esi17 * 4 + 32);
        ecx40 = reinterpret_cast<void*>(-esi17 << 2);
        do {
            --edx38;
            v21 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(edx38) + reinterpret_cast<int32_t>(ecx40));
        } while (edx38 != ebx39);
        esi29 = esi17 - 1;
        goto addr_6e94e939_16;
    }
}

void __floatunsitf(uint32_t ecx, int32_t a2, int32_t a3) {
    unsigned char* esp4;
    uint32_t ecx5;
    uint32_t esi6;
    uint32_t ecx7;
    uint32_t ebx8;
    int32_t esi9;
    unsigned char ecx10;
    unsigned char v11;
    uint32_t* ebp12;
    uint32_t* edx13;
    uint32_t v14;
    uint32_t ecx15;
    uint32_t ecx16;
    void* edx17;
    void* edi18;

    esp4 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60);
    if (a3) {
        __asm__("bsr ecx, edx");
        ecx5 = ecx ^ 31;
        esi6 = ecx5 + 0x70;
        ecx7 = ecx5 + 81;
        if (reinterpret_cast<int32_t>(ecx7) >= reinterpret_cast<int32_t>(0)) {
            esi6 = ecx7;
        }
        ebx8 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ecx7) >> 31) >> 27;
        esi9 = reinterpret_cast<int32_t>(esi6) >> 5;
        ecx10 = reinterpret_cast<unsigned char>((ecx7 + ebx8 & 31) - ebx8);
        v11 = ecx10;
        if (ecx10) {
            if (esi9 > 2) 
                goto 0x6e94ebb0;
            ebp12 = reinterpret_cast<uint32_t*>(esp4 + 32);
            edx13 = ebp12 + (3 - esi9);
            v14 = 32 - v11;
            do {
                ecx15 = *reinterpret_cast<unsigned char*>(&v14);
                ecx16 = v11;
                edx13[esi9] = *(edx13 - 1) >> *reinterpret_cast<signed char*>(&ecx15) | *edx13 << *reinterpret_cast<unsigned char*>(&ecx16);
                --edx13;
            } while (edx13 != ebp12);
        } else {
            if (esi9 > 3) {
                goto 0x6e94ead9;
            } else {
                edx17 = reinterpret_cast<void*>(esp4 + 44);
                edi18 = reinterpret_cast<void*>(esp4 + esi9 * 4 + 28);
                do {
                    edx17 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx17) - 4);
                } while (edx17 != edi18);
            }
        }
    }
}

void __fixtfdi(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    uint32_t eax5;
    uint32_t ebx6;

    eax5 = a4;
    ebx6 = eax5 >> 16 & 0x7fff;
    if (reinterpret_cast<int32_t>(ebx6) > reinterpret_cast<int32_t>(0x3ffe)) 
        goto 0x6e94ec60;
    if (!ebx6) {
        if (!(a1 | a2 | a3 | static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax5)))) 
            goto 0x6e94ec52;
        goto 0x6e94ec3a;
    }
}

void fun_6e94eb49() {
}

void fun_6e94edaa() {
}

void __fixunstfdi(uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4) {
    uint32_t eax5;
    uint32_t edi6;

    eax5 = a4;
    edi6 = eax5 >> 16 & 0x7fff;
    if (reinterpret_cast<int32_t>(edi6) > reinterpret_cast<int32_t>(0x3ffe)) 
        goto 0x6e94eeb0;
    if (edi6) {
        goto 0x6e94eec3;
    } else {
        if (!(a1 | a2 | a3 | static_cast<uint32_t>(*reinterpret_cast<uint16_t*>(&eax5)))) 
            goto 0x6e94eee0;
        goto 0x6e94eec3;
    }
}

void __floatditf(int32_t a1, uint32_t a2, uint32_t a3) {
    unsigned char* esp4;
    uint32_t ebx5;
    uint32_t edx6;
    uint32_t ebx7;
    uint32_t esi8;
    uint32_t ebx9;
    uint32_t ecx10;
    int32_t esi11;
    unsigned char ebx12;
    unsigned char v13;
    void* edx14;
    void* ebx15;
    uint32_t* ebp16;
    uint32_t* edx17;
    uint32_t v18;
    uint32_t ecx19;
    uint32_t ecx20;

    esp4 = reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 64);
    ebx5 = a3;
    if (!(ebx5 | a2)) 
        goto 0x6e94f160;
    edx6 = ebx5 >> 31;
    if (*reinterpret_cast<signed char*>(&edx6)) {
        ebx5 = -(ebx5 + reinterpret_cast<uint1_t>(!!a2));
    }
    if (ebx5) {
        __asm__("bsr ebx, ebx");
        ebx7 = ebx5 ^ 31;
    } else {
        __asm__("bsr ebx, ecx");
        ebx7 = (ebx5 ^ 31) + 32;
    }
    esi8 = ebx7 + 80;
    ebx9 = ebx7 + 49;
    if (reinterpret_cast<int32_t>(ebx9) >= reinterpret_cast<int32_t>(0)) {
        esi8 = ebx9;
    }
    ecx10 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx9) >> 31) >> 27;
    esi11 = reinterpret_cast<int32_t>(esi8) >> 5;
    ebx12 = reinterpret_cast<unsigned char>((ebx9 + ecx10 & 31) - ecx10);
    v13 = ebx12;
    if (!ebx12) {
        if (esi11 > 3) {
            goto 0x6e94f126;
        } else {
            edx14 = reinterpret_cast<void*>(esp4 + 48);
            ebx15 = reinterpret_cast<void*>(esp4 + esi11 * 4 + 32);
            do {
                edx14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx14) - 4);
            } while (edx14 != ebx15);
            goto 0x6e94f122;
        }
    } else {
        if (esi11 > 2) 
            goto 0x6e94f1f0;
        ebp16 = reinterpret_cast<uint32_t*>(esp4 + 36);
        edx17 = ebp16 + (3 - esi11);
        v18 = 32 - v13;
        do {
            ecx19 = *reinterpret_cast<unsigned char*>(&v18);
            ecx20 = v13;
            edx17[esi11] = *(edx17 - 1) >> *reinterpret_cast<signed char*>(&ecx19) | *edx17 << *reinterpret_cast<unsigned char*>(&ecx20);
            --edx17;
        } while (edx17 != ebp16);
    }
}

void fun_6e94f36f() {
    int32_t esi1;
    void* edx2;
    void* edi3;
    int32_t esi4;

    if (esi1 > 3) {
        goto 0x6e94f2ee;
    } else {
        edx2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + 44);
        edi3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) + esi4 * 4 + 28);
        do {
            edx2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(edx2) - 4);
        } while (edx2 != edi3);
        goto 0x6e94f2ea;
    }
}

void fun_6e94f8bc() {
    void* esp1;
    int32_t esi2;
    int32_t esi3;
    uint32_t edi4;
    uint32_t edi5;
    uint32_t ebx6;
    uint32_t edi7;
    uint32_t ecx8;
    int32_t edi9;
    uint32_t ebx10;
    int32_t v11;
    uint32_t v12;
    int32_t ebx13;
    void* ecx14;
    void* esi15;
    uint32_t* ebp16;
    uint32_t* ebx17;
    uint32_t v18;
    uint32_t* esi19;
    uint32_t ecx20;
    uint32_t ecx21;
    int32_t v22;
    uint32_t ecx23;
    int32_t* ebp24;

    esp1 = __zero_stack_offset();
    esi2 = esi3;
    __asm__("bsr edi, ebp");
    edi4 = edi5 ^ 31;
    ebx6 = edi4 + 49;
    edi7 = edi4 + 80;
    if (reinterpret_cast<int32_t>(ebx6) >= reinterpret_cast<int32_t>(0)) {
        edi7 = ebx6;
    }
    ecx8 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx6) >> 31) >> 27;
    edi9 = reinterpret_cast<int32_t>(edi7) >> 5;
    ebx10 = (ebx6 + ecx8 & 31) - ecx8;
    v11 = edi9;
    v12 = ebx10;
    if (!ebx10) {
        if (edi9 > 3) {
            ebx13 = 3;
            goto addr_6e94f7cf_8;
        } else {
            ecx14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + 76);
            esi15 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp1) + edi9 * 4 + 60);
            do {
                ecx14 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx14) - 4);
            } while (ecx14 != esi15);
            ebx13 = edi9 - 1;
        }
    } else {
        if (edi9 > 2) {
            ebx13 = 2;
            v11 = 3;
        } else {
            ebp16 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp1) + 64);
            ebx17 = ebp16 + (3 - edi9);
            v18 = 32 - v12;
            esi19 = ebp16;
            do {
                ecx20 = *reinterpret_cast<unsigned char*>(&v18);
                ecx21 = *reinterpret_cast<unsigned char*>(&v12);
                ebx17[edi9] = *(ebx17 - 1) >> *reinterpret_cast<signed char*>(&ecx20) | *ebx17 << *reinterpret_cast<unsigned char*>(&ecx21);
                --ebx17;
            } while (ebx17 != esi19);
            esi2 = v22;
            ebx13 = edi9 - 1;
        }
        ecx23 = *reinterpret_cast<unsigned char*>(&v12);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) + v11 * 4 + 64) = esi2 << *reinterpret_cast<unsigned char*>(&ecx23);
    }
    if (ebx13 < 0) {
        addr_6e94f7e0_19:
    } else {
        addr_6e94f7cf_8:
        ebp24 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp1) + 64);
    }
    do {
        ebp24[ebx13] = 0;
        --ebx13;
    } while (ebx13 >= 0);
    goto addr_6e94f7e0_19;
}

void __extendxftf2(int32_t a1) {
    uint32_t ecx2;
    uint16_t v3;

    __asm__("fnstcw word [esp+0x1e]");
    __asm__("fld tword [esp+0x54]");
    __asm__("fstp tword [esp+0x20]");
    ecx2 = v3;
    if (reinterpret_cast<int32_t>(reinterpret_cast<uint16_t>(*reinterpret_cast<uint16_t*>(&ecx2) & 0x7fff) + 1 & 0x7fff) <= reinterpret_cast<int32_t>(1)) 
        goto 0x6e94f9c0;
}

void __trunctfsf2(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    void* esp5;
    void* eax6;
    void* ecx7;

    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 92);
    __asm__("fnstcw word [esp+0x2e]");
    eax6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 64);
    ecx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 76);
    while (1) {
        ecx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx7) - 4);
        if (ecx7 == eax6) 
            goto 0x6e94fb10;
    }
}

void fun_6e94fcba() {
}

void fun_6e94fe5c() {
}

void fun_6e94fe7c() {
}

void __trunctfxf2(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    void* esp5;
    void* esi6;
    void* eax7;

    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 0x7c);
    __asm__("fnstcw word [esp+0x3e]");
    esi6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 80);
    eax7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 92);
    while (1) {
        eax7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax7) - 4);
        if (eax7 == esi6) 
            goto 0x6e9505d0;
    }
}

void fun_6e950429() {
}

void fun_6e95085d() {
}

void __enable_execute_stack(void** ecx, void** a2) {
    void* ebp3;
    void** v4;
    int32_t eax5;
    void** v6;
    void** v7;
    void** v8;
    void** v9;
    int32_t v10;
    int32_t v11;

    ebp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    v4 = reinterpret_cast<void**>(reinterpret_cast<int32_t>(ebp3) + 0xffffffdc);
    eax5 = reinterpret_cast<int32_t>(VirtualQuery(a2, v4, 28));
    if (!eax5) {
        fun_6e955970(ecx, v6, v7, 0x6e950b31, a2, v4, 28, v8, v9);
    } else {
        VirtualProtect(v10, v11, 64, reinterpret_cast<int32_t>(ebp3) - 16, v4, 28);
        return;
    }
}

void fun_6e9515cd() {
}

void fun_6e951f6d() {
}

void fun_6e951e7d() {
}

void fun_6e951eca() {
}

void fun_6e9527fc() {
}

void fun_6e9529cd() {
}

void** fun_6e952ae1(void** a1, void** a2, void** a3, void** a4) {
    void** v5;
    void** v6;
    void** ebx7;
    void** edx8;
    void** ecx9;
    void** v10;
    void** v11;
    void** eax12;
    uint32_t ebx13;

    v5 = reinterpret_cast<void**>(__return_address());
    v6 = ebx7;
    edx8 = a2;
    ecx9 = a1;
    if (reinterpret_cast<signed char>(edx8) > reinterpret_cast<signed char>(17)) {
        while (1) {
            eax12 = fun_6e955970(ecx9, v10, v11, v6, v5, a1, a2, a3, a4);
            addr_6e952b20_4:
            if (*reinterpret_cast<signed char*>(reinterpret_cast<unsigned char>(ecx9) + reinterpret_cast<unsigned char>(edx8) + 0x6c)) 
                break;
            addr_6e952b11_5:
            if (ebx13 == 4) 
                goto 0x6e952b30;
        }
        return eax12;
    } else {
        ebx13 = *reinterpret_cast<unsigned char*>(edx8 + 0x6e95d028);
        eax12 = *reinterpret_cast<void***>(ecx9 + reinterpret_cast<unsigned char>(edx8) * 4);
        if (*reinterpret_cast<unsigned char*>(ecx9 + 99) & 64) 
            goto addr_6e952b20_4; else 
            goto addr_6e952b11_5;
    }
}

struct s194 {
    signed char[72] pad72;
    int32_t f72;
};

int32_t fun_6e952b37(struct s194* a1) {
    return a1->f72;
}

void fun_6e952b9c() {
}

void fun_6e952c2a() {
}

void fun_6e952d26() {
}

void fun_6e952d31() {
    goto _Unwind_RaiseException;
}

struct s195 {
    signed char[12] pad12;
    int32_t f12;
};

void _Unwind_Resume(struct s195* a1) {
    void* ebp2;
    struct s195* eax3;
    void** ecx4;
    int32_t eax5;
    void** v6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    int32_t v14;
    int32_t v15;
    int32_t v16;
    int32_t v17;
    struct s95* v18;
    void* v19;
    uint32_t eax20;
    int32_t v21;
    int32_t v22;
    int32_t v23;
    int32_t v24;
    struct s95* v25;
    void* v26;
    int32_t v27;
    int32_t v28;
    int32_t v29;
    int32_t v30;
    struct s95* v31;
    void* v32;

    ebp2 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4);
    fun_6e952620(__return_address());
    eax3 = a1;
    ecx4 = reinterpret_cast<void**>(32);
    while (ecx4) {
        --ecx4;
    }
    if (eax3->f12) {
        while (1) {
            eax5 = fun_6e9528c0();
            addr_6e952f75_6:
            if (eax5 == 7) 
                break;
            fun_6e955970(ecx4, v6, v7, v8, v9, v10, v11, v12, v13);
        }
        eax20 = fun_6e9529d0(v14, v15, v16, v17, v18, v19);
        fun_6e952d30(v21, v22, v23, v24, v25, v26);
        *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) + eax20 + 4) = v22;
        goto *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebp2) + eax20 + 4);
    } else {
        eax5 = fun_6e952810(v27, v28, v29, v30, v31, v32);
        goto addr_6e952f75_6;
    }
}

int32_t fun_6e952fc9(struct s95* a1) {
    void** ecx2;
    int32_t eax3;
    void** v4;
    void** v5;
    void** v6;
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void** v11;
    int32_t eax12;

    if (a1->f12) {
        fun_6e952620(__return_address());
        ecx2 = reinterpret_cast<void**>(32);
        while (ecx2) {
            --ecx2;
        }
        eax3 = fun_6e9528c0();
        if (eax3 == 7) 
            goto 0x6e953040;
        fun_6e955970(ecx2, v4, v5, v6, v7, v8, v9, v10, v11);
    }
    eax12 = _Unwind_RaiseException(a1);
    return eax12;
}

struct s196 {
    signed char[8] pad8;
    int32_t f8;
};

void _Unwind_DeleteException(struct s196* a1) {
    int32_t eax2;

    eax2 = a1->f8;
    if (eax2) {
        eax2(1, a1);
    }
    return;
}

struct s197 {
    signed char[8] pad8;
    uint32_t f8;
};

struct s198 {
    signed char[8] pad8;
    uint32_t f8;
};

uint32_t fun_6e953160() {
    uint32_t eax1;
    struct s197* v2;
    struct s198* v3;
    int32_t ebx4;
    int32_t ebx5;
    uint32_t ebx6;
    int32_t ebx7;

    eax1 = 1;
    if (v2->f8 <= v3->f8) {
        eax1 = ebx4 - (ebx5 + reinterpret_cast<uint1_t>(ebx6 < ebx7 + reinterpret_cast<uint1_t>(v2->f8 < v3->f8)));
    }
    return eax1;
}

void fun_6e953249() {
}

void fun_6e9534d9() {
}

struct s199 {
    signed char[8] pad8;
    void** f8;
};

struct s200 {
    signed char[8] pad8;
    void** f8;
};

void fun_6e953556(struct s199* a1, struct s199* a2, int32_t a3, int32_t a4, int32_t a5, struct s200* a6) {
    void** v7;
    void** v8;
    void** v9;
    void** v10;
    void*** esp11;
    void* v12;
    void* v13;

    fun_6e953510(&a1->f8, v7, v8, v9, v10);
    esp11 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 32 - 4 + 4);
    fun_6e953340(&a2->f8, esp11 + 24, v12);
    fun_6e953340(&a6->f8, esp11 - 4 + 12 + 4 + 28, v13);
    if (reinterpret_cast<uint32_t>(a1) <= reinterpret_cast<uint32_t>(a2)) {
    }
    goto a6;
}

void fun_6e953849() {
}

void fun_6e953990(void** ecx, struct s118* a2, struct s119* a3, int32_t a4, int32_t a5, int32_t a6, struct s120* a7) {
    void** edi8;
    void** v9;
    void** v10;
    void** v11;
    void** v12;
    void** v13;
    void*** esp14;
    void** ecx15;
    void* v16;
    void** v17;
    void** v18;
    void** v19;
    void** v20;
    void** v21;
    void* v22;
    uint32_t esi23;
    uint32_t edi24;

    edi8 = reinterpret_cast<void**>(&a2->f8);
    fun_6e953420(ecx, v9);
    fun_6e953510(edi8, v10, v11, v12, v13);
    esp14 = reinterpret_cast<void***>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 44 - 4 + 4 - 4 + 4);
    ecx15 = reinterpret_cast<void**>(&a3->f8);
    fun_6e953340(ecx15, esp14 + 24, v16);
    fun_6e953420(ecx15, v17);
    fun_6e953510(edi8, v18, v19, v20, v21);
    fun_6e953340(&a7->f8, esp14 - 4 + 12 + 4 - 4 + 4 - 4 + 4 + 28, v22);
    if (esi23 <= edi24) {
    }
    goto a7;
}

void fun_6e95411c(void** a1, void** a2) {
    __register_frame_info_bases(a1, a2, 0, 0);
    return;
}

void __register_frame_info_table(void** a1, void** a2) {
    __register_frame_info_table_bases(a1, a2, 0, 0);
    return;
}

void fun_6e95432c() {
    goto __deregister_frame_info_bases;
}

void fun_6e954365() {
}

void fun_6e95451c() {
}

void fun_6e95450c() {
}

void fun_6e952c39() {
}

int32_t fun_6e952bf9(void* a1) {
    int32_t v2;
    struct s48* eax3;
    int32_t eax4;
    int32_t v5;

    eax3 = _Unwind_Find_FDE(reinterpret_cast<int32_t>(a1) - 1, reinterpret_cast<int32_t>(__zero_stack_offset()) - 44 + 20, v2);
    if (!eax3) {
        eax4 = 0;
    } else {
        eax4 = v5;
    }
    return eax4;
}

void fun_6e954860(int32_t* a1) {
    int32_t ebx2;
    int32_t* esi3;
    int32_t edi4;
    void** v5;
    void** v6;
    void** v7;

    ebx2 = 0;
    esi3 = a1;
    edi4 = *esi3;
    if (edi4) {
        do {
            if ((esi3 + ebx2)[1]) {
                v5 = *reinterpret_cast<void***>((esi3 + ebx2)[1] - 4);
                fun_6e955960(v5, v6, v7);
            }
            ++ebx2;
        } while (ebx2 != edi4);
    }
    goto fun_6e955960;
}

struct s201 {
    signed char[76] pad76;
    int32_t f76;
    signed char[16] pad96;
    uint32_t f96;
};

int32_t fun_6e952ba9(struct s201* a1, uint32_t* a2) {
    *a2 = a1->f96 >> 31;
    return a1->f76;
}

void fun_6e952bdc() {
}

void fun_6e954bb2() {
}

void fun_6e954c23() {
}

int32_t fun_6e954cb0() {
    return 0;
}

void fun_6e954e5c() {
}

int32_t fun_6e9554a3(int32_t a1) {
    int32_t eax2;

    eax2 = g6e95d3c4;
    if (eax2) 
        goto 0x6e9554d0;
    return 0;
}

void fun_6e955544() {
}

void fun_6e9555d9() {
}

int32_t fun_6e95560d(int16_t* a1) {
    if (*a1 == 0x5a4d) 
        goto 0x6e955620;
    return 0;
}

void fun_6e955622() {
}

void fun_6e95566d(void** a1) {
    void** v2;
    void* eax3;
    int1_t zf4;

    eax3 = fun_6e955978(a1, v2);
    if (reinterpret_cast<uint32_t>(eax3) > 8) 
        goto 0x6e955695;
    zf4 = image_base_ == 0x5a4d;
    if (zf4) 
        goto 0x6e9556a0; else 
        goto "???";
}

void fun_6e9557fc() {
}

int32_t fun_6e955884(int32_t a1) {
    int1_t zf2;
    int32_t v3;
    uint32_t eax4;
    int32_t eax5;
    uint32_t esi6;
    struct s2* eax7;

    zf2 = image_base_ == 0x5a4d;
    if (zf2 && ((eax4 = fun_6e9555f0(v3), !!eax4) && ((eax5 = g6e94003c, esi6 = *reinterpret_cast<uint32_t*>(eax5 + 0x6e940080), !!esi6) && (eax7 = fun_6e955630(0x6e940000, esi6), !!eax7)))) {
        if (esi6 + 0x6e940000) 
            goto 0x6e9558f6;
    }
    return 0;
}

int32_t g6e95d3f4;

int32_t g6e95d3f8;

int32_t g6e95d3fc;

uint32_t fun_6e955aca() {
    uint32_t ebx1;
    int32_t** esp2;
    int32_t eax3;
    int32_t* edi4;
    int32_t* esi5;
    int32_t eax6;
    int32_t v7;
    int32_t eax8;
    uint32_t ecx9;
    uint32_t v10;
    uint32_t edx11;
    uint32_t eax12;
    uint32_t esi13;
    uint32_t eax14;
    int32_t v15;
    int32_t ebx16;
    int32_t v17;
    uint32_t edi18;

    ebx1 = 0;
    esp2 = reinterpret_cast<int32_t**>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 28);
    eax3 = g6e95d3f4;
    if (!eax3) {
        edi4 = reinterpret_cast<int32_t*>(esp2 + 6);
        esi5 = reinterpret_cast<int32_t*>(esp2 + 5);
        eax6 = fun_6e955a70(esp2 + 4, esi5, edi4);
        esp2 = esp2 - 1 + 1;
        if (!eax6 || (reinterpret_cast<uint1_t>(v7 < 0) | reinterpret_cast<uint1_t>(v7 == 0) || (eax8 = fun_6e955a70(esp2 + 4, esi5, edi4), eax8 == 0))) {
            g6e95d3f4 = 3;
            ebx1 = 0xffffffff;
        } else {
            ecx9 = v10 >> 4 & 15;
            edx11 = v10 >> 8 & 15;
            eax12 = v10 >> 20;
            esi13 = v10 >> 12 & 0xf0;
            eax14 = *reinterpret_cast<unsigned char*>(&eax12);
            if (v15 == 0x756e6547) {
                ebx16 = v17;
                edi18 = *reinterpret_cast<unsigned char*>(&ebx16);
                if (edx11 == 15) {
                    edx11 = eax14 + 15;
                    ecx9 = ecx9 + esi13;
                } else {
                    if (edx11 == 6) {
                        ecx9 = ecx9 + esi13;
                        if (!edi18) 
                            goto addr_6e955c02_9;
                        goto addr_6e955c1b_11;
                    }
                }
                if (edi18 || edx11 != 6) {
                    addr_6e955c1b_11:
                    ebx1 = 0;
                    fun_6e9559d0(v7, esi5, edi4);
                    g6e95d3f4 = 1;
                } else {
                    addr_6e955c02_9:
                    switch (ecx9 - 15) {
                    case 0:
                    case 8:
                    case 14:
                        g6e95d3f8 = 2;
                        break;
                    case 11:
                    case 15:
                    case 16:
                    case 31:
                        g6e95d3f8 = 3;
                        g6e95d3fc = 1;
                        break;
                    case 13:
                    case 23:
                        g6e95d3f8 = 1;
                        break;
                    case 22:
                    case 29:
                    case 32:
                        g6e95d3f8 = 3;
                        g6e95d3fc = 2;
                        break;
                    case 27:
                    case 30:
                        g6e95d3f8 = 3;
                        g6e95d3fc = 3;
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 7:
                    case 9:
                    case 10:
                    case 12:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 24:
                    case 25:
                    case 26:
                    case 28:
                        goto 0x6e955c1b;
                    }
                    goto addr_6e955c1b_11;
                }
            } else {
                if (v15 == 0x68747541) {
                    if (edx11 == 15) {
                        esi13 = esi13 << 4;
                        edx11 = eax14 + 15;
                        ecx9 = ecx9 + esi13;
                    }
                    if (edx11 == 16) {
                        if (ecx9 == 4) {
                            g6e95d3f8 = 4;
                            g6e95d3fc = 5;
                        } else {
                            if (ecx9 == 8) {
                                g6e95d3f8 = 4;
                                g6e95d3fc = 6;
                            } else {
                                if (ecx9 == 2) {
                                    g6e95d3f8 = 4;
                                    g6e95d3fc = 4;
                                }
                            }
                        }
                    } else {
                        if (edx11 == 21 && (g6e95d3f8 = 5, ecx9 <= 15)) {
                            g6e95d3fc = 7;
                        }
                    }
                    ebx1 = 0;
                    fun_6e9559d0(v7, esi5, edi4);
                    g6e95d3f4 = 2;
                } else {
                    g6e95d3f4 = 3;
                }
            }
        }
    }
    return ebx1;
}

void __absvsi2(int32_t a1) {
    if (a1 < 0) 
        goto 0x6e9418e0; else 
        goto "???";
}

void __lshrdi3(int32_t a1, int32_t a2, int32_t a3) {
    int32_t esi4;

    if (!a3) 
        goto 0x6e941645;
    esi4 = 32 - a3;
    if (reinterpret_cast<uint1_t>(esi4 < 0) | reinterpret_cast<uint1_t>(esi4 == 0)) 
        goto 0x6e941650;
}

int32_t fun_6e941796() {
    int32_t v1;

    if (v1 == 7) {
        goto 0x6e9417cb;
    }
    if (v1 == 5) {
        goto 0x6e9417cb;
    }
    if (v1 == 4) 
        goto 0x6e941800;
    if (v1 != 3) 
        goto addr_6e9417bd_7;
    goto 0x6e9417cb;
    addr_6e9417bd_7:
    if (v1 == 1) {
        goto 0x6e9417cb;
    } else {
        if (v1) {
            return -1;
        }
    }
}

void __powisf2() {
    uint32_t edx1;
    uint32_t v2;
    uint32_t ecx3;
    uint32_t eax4;

    edx1 = v2;
    __asm__("fld dword [esp+0x4]");
    __asm__("fld1 ");
    ecx3 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edx1) >> 31);
    eax4 = (ecx3 ^ edx1) - ecx3;
    __asm__("fcmovne st0, st1");
    while (eax4 = eax4 >> 1, !!eax4) {
        __asm__("fxch st0, st1");
        do {
            __asm__("fmul st0, st0");
            if (!(*reinterpret_cast<unsigned char*>(&eax4) & 1)) 
                break;
            eax4 = eax4 >> 1;
            __asm__("fmul st1, st0");
        } while (eax4);
        goto addr_6e941df4_6;
        __asm__("fxch st0, st1");
    }
    __asm__("fstp st1");
    addr_6e941dfa_9:
    if (reinterpret_cast<int32_t>(edx1) < reinterpret_cast<int32_t>(0)) {
        __asm__("fdivr dword [0x6e957280]");
        return;
    } else {
        return;
    }
    addr_6e941df4_6:
    __asm__("fstp st0");
    goto addr_6e941dfa_9;
}

uint32_t __clrsbsi2(uint32_t a1) {
    uint32_t edx2;

    edx2 = a1 ^ reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(a1) >> 31);
    if (edx2) {
        __asm__("bsr edx, edx");
        return (edx2 ^ 31) - 1;
    } else {
        return 31;
    }
}

uint32_t __floatundisf(uint32_t a1, uint32_t a2) {
    uint32_t eax3;

    eax3 = a1;
    if (a2 > 0x1fffff && eax3 & 0x7ff) {
        eax3 = eax3 & 0xfffff800;
        *reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) = reinterpret_cast<unsigned char>(*reinterpret_cast<unsigned char*>(reinterpret_cast<int32_t>(&eax3) + 1) | 8);
    }
    __asm__("fild qword [esp]");
    __asm__("fmul dword [0x6e9572e8]");
    __asm__("fild qword [esp]");
    __asm__("faddp st1, st0");
    __asm__("fstp dword [esp+0xc]");
    __asm__("fld dword [esp+0xc]");
    return eax3;
}

int32_t __floatundixf(int32_t a1, int32_t a2) {
    __asm__("fild qword [esp]");
    __asm__("fmul dword [0x6e9572f0]");
    __asm__("fild qword [esp]");
    __asm__("faddp st1, st0");
    return a1;
}

void fun_6e94757c() {
}

void fun_6e951371() {
    g6e95d028 = 4;
    g6e95d02a = 4;
    g6e95d029 = 4;
    g6e95d02b = 4;
    g6e95d02e = 4;
    g6e95d02f = 4;
    g6e95d02d = 4;
    g6e95d02c = 4;
    g6e95d033 = 12;
    g6e95d034 = 12;
    g6e95d035 = 12;
    g6e95d036 = 12;
    g6e95d037 = 12;
    g6e95d038 = 12;
    g6e95d031 = 4;
    g6e95d030 = 4;
    return;
}

void fun_6e94bcda() {
}

void fun_6e94bcca() {
}

void fun_6e94c18d() {
}

void fun_6e94c3da() {
}

void __floatunditf(int32_t a1, uint32_t a2, uint32_t a3) {
    uint32_t edi4;
    uint32_t edi5;
    uint32_t esi6;
    uint32_t edi7;
    uint32_t ecx8;
    int32_t esi9;
    unsigned char edi10;
    unsigned char v11;
    uint32_t* ebp12;
    uint32_t v13;
    uint32_t* edx14;
    uint32_t ecx15;
    uint32_t ecx16;

    edi4 = a3 | a2;
    if (!edi4) 
        goto 0x6e94f320;
    if (a3) {
        __asm__("bsr edi, ecx");
        edi5 = edi4 ^ 31;
    } else {
        __asm__("bsr edi, ebx");
        edi5 = (edi4 ^ 31) + 32;
    }
    esi6 = edi5 + 80;
    edi7 = edi5 + 49;
    if (reinterpret_cast<int32_t>(edi7) >= reinterpret_cast<int32_t>(0)) {
        esi6 = edi7;
    }
    ecx8 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(edi7) >> 31) >> 27;
    esi9 = reinterpret_cast<int32_t>(esi6) >> 5;
    edi10 = reinterpret_cast<unsigned char>((edi7 + ecx8 & 31) - ecx8);
    v11 = edi10;
    if (!edi10) 
        goto 0x6e94f370;
    if (esi9 > 2) 
        goto 0x6e94f3a0;
    ebp12 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 60 + 32);
    v13 = 32 - v11;
    edx14 = ebp12 + (3 - esi9);
    do {
        ecx15 = *reinterpret_cast<unsigned char*>(&v13);
        ecx16 = v11;
        edx14[esi9] = *(edx14 - 1) >> *reinterpret_cast<signed char*>(&ecx15) | *edx14 << *reinterpret_cast<unsigned char*>(&ecx16);
        --edx14;
    } while (edx14 != ebp12);
}

void __extendsftf2(int32_t a1, uint32_t a2) {
    void* esp3;
    uint32_t ecx4;
    uint32_t esi5;
    uint32_t ecx6;
    uint32_t ebx7;
    uint32_t v8;
    uint32_t edi9;
    uint32_t edi10;
    uint32_t ebx11;
    uint32_t edi12;
    uint32_t ecx13;
    int32_t edi14;
    uint32_t ebx15;
    int32_t v16;
    uint32_t v17;
    int32_t ebx18;
    uint32_t* ebp19;
    uint32_t* ebx20;
    uint32_t v21;
    uint32_t* esi22;
    uint32_t ecx23;
    uint32_t ecx24;
    uint32_t ecx25;
    void* ecx26;
    void* esi27;
    int32_t* ebp28;

    esp3 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 92);
    __asm__("fnstcw word [esp+0x2e]");
    ecx4 = a2 >> 23;
    esi5 = a2 & 0x7fffff;
    ecx6 = *reinterpret_cast<unsigned char*>(&ecx4);
    ebx7 = ecx6 + 1;
    v8 = esi5;
    if (reinterpret_cast<int32_t>(static_cast<uint32_t>(*reinterpret_cast<unsigned char*>(&ebx7))) > reinterpret_cast<int32_t>(1)) {
    }
    if (ecx6) 
        goto 0x6e94f560;
    if (esi5) 
        goto addr_6e94f475_5;
    goto 0x6e94f422;
    addr_6e94f475_5:
    __asm__("bsr edi, esi");
    edi9 = edi10 ^ 31;
    ebx11 = edi9 + 81;
    edi12 = edi9 + 0x70;
    if (reinterpret_cast<int32_t>(ebx11) >= reinterpret_cast<int32_t>(0)) {
        edi12 = ebx11;
    }
    ecx13 = reinterpret_cast<uint32_t>(reinterpret_cast<int32_t>(ebx11) >> 31) >> 27;
    edi14 = reinterpret_cast<int32_t>(edi12) >> 5;
    ebx15 = (ebx11 + ecx13 & 31) - ecx13;
    v16 = edi14;
    v17 = ebx15;
    if (ebx15) {
        if (edi14 > 2) {
            ebx18 = 2;
            v16 = 3;
        } else {
            ebp19 = reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp3) + 64);
            ebx20 = ebp19 + (3 - edi14);
            v21 = 32 - v17;
            esi22 = ebp19;
            do {
                ecx23 = *reinterpret_cast<unsigned char*>(&v21);
                ecx24 = *reinterpret_cast<unsigned char*>(&v17);
                ebx20[edi14] = *(ebx20 - 1) >> *reinterpret_cast<signed char*>(&ecx23) | *ebx20 << *reinterpret_cast<unsigned char*>(&ecx24);
                --ebx20;
            } while (ebx20 != esi22);
            esi5 = v8;
            ebx18 = edi14 - 1;
        }
        ecx25 = *reinterpret_cast<unsigned char*>(&v17);
        *reinterpret_cast<uint32_t*>(reinterpret_cast<int32_t>(esp3) + v16 * 4 + 64) = esi5 << *reinterpret_cast<unsigned char*>(&ecx25);
    } else {
        if (edi14 > 3) {
            ebx18 = 3;
            goto addr_6e94f4e4_17;
        } else {
            ecx26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) + 76);
            esi27 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp3) + edi14 * 4 + 60);
            do {
                ecx26 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(ecx26) - 4);
            } while (ecx26 != esi27);
            ebx18 = edi14 - 1;
        }
    }
    if (ebx18 < 0) {
        addr_6e94f4f5_22:
    } else {
        addr_6e94f4e4_17:
        ebp28 = reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp3) + 64);
    }
    do {
        ebp28[ebx18] = 0;
        --ebx18;
    } while (ebx18 >= 0);
    goto addr_6e94f4f5_22;
}

void __extenddftf2(int32_t a1, uint32_t a2, uint32_t a3) {
    uint32_t edi4;
    uint32_t ebp5;

    __asm__("fnstcw word [esp+0x2e]");
    edi4 = a3 >> 20 & 0x7ff;
    ebp5 = a3 & 0xfffff;
    if (reinterpret_cast<int32_t>(edi4 + 1 & 0x7ff) > reinterpret_cast<int32_t>(1)) {
    }
    if (edi4) 
        goto 0x6e94f850;
    if (ebp5 | a2) 
        goto addr_6e94f714_5;
    goto 0x6e94f6c5;
    addr_6e94f714_5:
    if (ebp5) 
        goto 0x6e94f8c0;
    __asm__("bsr ecx, esi");
}

void __trunctfdf2(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    void* esp5;
    void* eax6;
    void* edx7;

    esp5 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 4 - 92);
    __asm__("fnstcw word [esp+0x2e]");
    eax6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 76);
    edx7 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp5) + 64);
    while (1) {
        eax6 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(eax6) - 4);
        if (eax6 == edx7) 
            goto 0x6e950000;
    }
}

void fun_6e94fe69() {
}

void fun_6e952319() {
}

void fun_6e95280d() {
}

void fun_6e952b49() {
}

void fun_6e953337() {
}

void fun_6e953722() {
}

void fun_6e95414c(void** a1) {
    void** eax2;

    if (*reinterpret_cast<void***>(a1)) {
        eax2 = fun_6e955950(24);
        __register_frame_info_bases(a1, eax2, 0, 0);
    }
    return;
}

void fun_6e95421c(void** a1) {
    void** eax2;

    eax2 = fun_6e955950(24);
    __register_frame_info_table_bases(a1, eax2, 0, 0);
    return;
}

void fun_6e954335(void** a1) {
    void** ecx2;

    ecx2 = *reinterpret_cast<void***>(a1);
    if (ecx2) {
        __deregister_frame_info_bases(ecx2, a1);
        goto fun_6e955960;
    } else {
        return;
    }
}

struct s202 {
    signed char[4] pad4;
    int32_t f4;
    int32_t f8;
    int32_t f12;
    signed char[72] pad88;
    int16_t f88;
    int16_t f90;
};

void fun_6e952c49(int32_t a1, struct s202* a2, int32_t a3) {
    int32_t v4;
    int32_t edi5;
    void** ecx6;
    int32_t v7;
    int32_t ebx8;
    void* esp9;
    struct s202* ebx10;
    void* v11;
    int32_t v12;
    int32_t v13;
    void** v14;
    void** v15;
    void** v16;
    void** v17;
    int32_t eax18;
    void* esp19;
    int32_t v20;
    int32_t edx21;
    int32_t ecx22;
    int32_t v23;
    int32_t eax24;
    int32_t v25;
    int32_t eax26;
    int32_t v27;

    v4 = edi5;
    ecx6 = reinterpret_cast<void**>(32);
    v7 = ebx8;
    esp9 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 - 4 - 4 - 0x140);
    ebx10 = a2;
    while (ecx6) {
        --ecx6;
    }
    eax18 = fun_6e951400(ecx6, v11, v12, v13, v14, v15, v16, v17);
    esp19 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(esp9) - 4 + 12 + 4);
    if (eax18 || v20 == 2) {
        goto a3;
    } else {
        edx21 = 0;
        while (1) {
            ecx22 = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp19) + edx21 * 8 + 0x84);
            *reinterpret_cast<signed char*>(reinterpret_cast<int32_t>(ebx10) + edx21 + 92) = *reinterpret_cast<signed char*>(&ecx22);
            if (*reinterpret_cast<signed char*>(&ecx22) == 1 || *reinterpret_cast<signed char*>(&ecx22) == 2) {
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx10) + edx21 * 4 + 16) = *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(esp19) + edx21 * 8 + 0x80);
                ++edx21;
                if (edx21 == 18) 
                    break;
            } else {
                *reinterpret_cast<int32_t*>(reinterpret_cast<int32_t>(ebx10) + edx21 * 4 + 16) = 0;
                ++edx21;
                if (edx21 == 18) 
                    break;
            }
        }
        ebx10->f8 = v23;
        eax24 = v25;
        ebx10->f88 = *reinterpret_cast<int16_t*>(&eax24);
        eax26 = v7;
        ebx10->f90 = *reinterpret_cast<int16_t*>(&eax26);
        ebx10->f12 = v27;
        ebx10->f4 = v4;
        goto a3;
    }
}

void fun_6e952be9() {
}

void fun_6e952bc4() {
}

void* g6e95d144;

int32_t g6e95d360;

int32_t g6e95d364;

int32_t g6e95d138;

int32_t g6e95d36c;

int32_t g6e95d12c;

int32_t SetUnhandledExceptionFilter = 0x1f314;

int32_t UnhandledExceptionFilter = 0x1f35c;

int32_t GetCurrentProcess = 0x1f216;

int32_t TerminateProcess = 0x1f33a;

void fun_6e95530c(void** ecx, int32_t a2) {
    void** eax3;
    void** v4;
    void** v5;
    void** v6;
    void** v7;

    g6e95d144 = reinterpret_cast<void*>(reinterpret_cast<int32_t>(__zero_stack_offset()) - 4 + 4);
    g6e95d360 = 0xc0000409;
    g6e95d364 = 1;
    g6e95d138 = reinterpret_cast<int32_t>(__return_address());
    g6e95d36c = reinterpret_cast<int32_t>(__return_address());
    g6e95d12c = a2;
    SetUnhandledExceptionFilter(0);
    UnhandledExceptionFilter(0x6e957b14, 0);
    eax3 = reinterpret_cast<void**>(GetCurrentProcess(0x6e955375, 0x6e957b14, 0));
    TerminateProcess(eax3, 0xc0000409, 0);
    fun_6e955970(ecx, v4, 0x6e95538f, eax3, 0xc0000409, 0, v5, v6, v7);
}

void fun_6e95570c() {
}

int32_t fun_6e955d30() {
    int32_t eax1;

    fun_6e941460();
    eax1 = fun_6e954bc0(0x6e941510);
    return eax1;
}

void fun_6e941ddc() {
}

void __divdi3(int32_t a1, int32_t a2, int32_t a3, int32_t a4) {
    if (a2 < 0) 
        goto 0x6e947170;
    if (a4 < 0) 
        goto 0x6e94718a; else 
        goto "???";
}

void fun_6e954253() {
}

void fun_6e9513f1() {
    goto fun_6e951400;
}
